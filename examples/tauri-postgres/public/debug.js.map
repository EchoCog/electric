{
  "version": 3,
  "sources": ["../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/webpack/universalModuleDefinition", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/browser/AccessibilityManager.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/browser/Clipboard.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/browser/ColorContrastCache.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/browser/Lifecycle.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/browser/Linkifier2.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/browser/LocalizableStrings.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/browser/OscLinkProvider.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/browser/RenderDebouncer.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/browser/ScreenDprMonitor.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/browser/Terminal.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/browser/TimeBasedDebouncer.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/browser/Viewport.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/browser/decorations/BufferDecorationRenderer.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/browser/decorations/ColorZoneStore.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/browser/decorations/OverviewRulerRenderer.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/browser/input/CompositionHelper.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/browser/input/Mouse.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/browser/input/MoveToCell.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/dom/DomRenderer.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/dom/DomRendererRowFactory.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/dom/WidthCache.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/shared/Constants.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/shared/RendererUtils.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/browser/selection/SelectionModel.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/browser/services/CharSizeService.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/browser/services/CharacterJoinerService.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/browser/services/CoreBrowserService.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/browser/services/MouseService.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/browser/services/RenderService.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/browser/services/SelectionService.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/browser/services/Services.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/browser/services/ThemeService.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/common/CircularList.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/common/Clone.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/common/Color.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/common/CoreTerminal.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/common/EventEmitter.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/common/InputHandler.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/common/Lifecycle.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/common/MultiKeyMap.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/common/Platform.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/common/SortedList.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/common/TaskQueue.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/common/WindowsMode.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/common/buffer/AttributeData.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/common/buffer/Buffer.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferLine.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferRange.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferReflow.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferSet.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/common/buffer/CellData.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/common/buffer/Constants.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/common/buffer/Marker.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/common/data/Charsets.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/common/data/EscapeSequences.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/common/input/Keyboard.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/common/input/TextDecoder.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/common/input/UnicodeV6.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/common/input/WriteBuffer.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/common/input/XParseColor.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/common/parser/Constants.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/common/parser/DcsParser.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/common/parser/EscapeSequenceParser.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/common/parser/OscParser.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/common/parser/Params.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/common/public/AddonManager.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/common/public/BufferApiView.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/common/public/BufferLineApiView.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/common/public/BufferNamespaceApi.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/common/public/ParserApi.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/common/public/UnicodeApi.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/common/services/BufferService.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/common/services/CharsetService.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/common/services/CoreMouseService.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/common/services/CoreService.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/common/services/DecorationService.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/common/services/InstantiationService.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/common/services/LogService.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/common/services/OptionsService.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/common/services/OscLinkService.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/common/services/ServiceRegistry.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/common/services/Services.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/common/services/UnicodeService.ts", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/webpack/bootstrap", "../../../node_modules/.pnpm/xterm@5.3.0/node_modules/xterm/lib/webpack:/xterm/src/browser/public/Terminal.ts", "../../../node_modules/.pnpm/xterm-addon-fit@0.7.0_xterm@5.3.0/node_modules/xterm-addon-fit/lib/webpack:/FitAddon/webpack/universalModuleDefinition", "../../../node_modules/.pnpm/xterm-addon-fit@0.7.0_xterm@5.3.0/node_modules/xterm-addon-fit/lib/webpack:/FitAddon/src/FitAddon.ts", "../../../node_modules/.pnpm/xterm-readline@1.1.1_xterm@5.3.0/node_modules/xterm-readline/src/keymap.ts", "../../../node_modules/.pnpm/xterm-readline@1.1.1_xterm@5.3.0/node_modules/xterm-readline/src/line.ts", "../../../node_modules/.pnpm/ansi-regex@5.0.1/node_modules/ansi-regex/index.js", "../../../node_modules/.pnpm/strip-ansi@6.0.1/node_modules/strip-ansi/index.js", "../../../node_modules/.pnpm/is-fullwidth-code-point@3.0.0/node_modules/is-fullwidth-code-point/index.js", "../../../node_modules/.pnpm/emoji-regex@8.0.0/node_modules/emoji-regex/index.js", "../../../node_modules/.pnpm/string-width@4.2.3/node_modules/string-width/index.js", "../../../node_modules/.pnpm/xterm-readline@1.1.1_xterm@5.3.0/node_modules/xterm-readline/src/state.ts", "../../../node_modules/.pnpm/xterm-readline@1.1.1_xterm@5.3.0/node_modules/xterm-readline/src/history.ts", "../../../node_modules/.pnpm/xterm-readline@1.1.1_xterm@5.3.0/node_modules/xterm-readline/src/tty.ts", "../../../node_modules/.pnpm/xterm-readline@1.1.1_xterm@5.3.0/node_modules/xterm-readline/src/highlight.ts", "../../../node_modules/.pnpm/xterm-readline@1.1.1_xterm@5.3.0/node_modules/xterm-readline/src/readline.ts", "../src/debug.ts", "../../../node_modules/.pnpm/@tauri-apps+api@1.4.0/node_modules/@tauri-apps/api/chunk-FEIY7W7S.js", "../../../node_modules/.pnpm/@tauri-apps+api@1.4.0/node_modules/@tauri-apps/api/chunk-5UWJICAP.js", "../../../node_modules/.pnpm/@tauri-apps+api@1.4.0/node_modules/@tauri-apps/api/chunk-RKMHWDGH.js", "../../../node_modules/.pnpm/@tauri-apps+api@1.4.0/node_modules/@tauri-apps/api/chunk-M3Y6ZK7U.js", "../../../node_modules/.pnpm/@tauri-apps+api@1.4.0/node_modules/@tauri-apps/api/chunk-4NZJJ336.js", "../../../node_modules/.pnpm/@tauri-apps+api@1.4.0/node_modules/@tauri-apps/api/chunk-NMUKSDLG.js", "../../../node_modules/.pnpm/@tauri-apps+api@1.4.0/node_modules/@tauri-apps/api/chunk-CICBN6X2.js", "../../../node_modules/.pnpm/@tauri-apps+api@1.4.0/node_modules/@tauri-apps/api/chunk-V5J25SYE.js", "../../../node_modules/.pnpm/@tauri-apps+api@1.4.0/node_modules/@tauri-apps/api/chunk-2GTLV2NE.js", "../../../node_modules/.pnpm/@tauri-apps+api@1.4.0/node_modules/@tauri-apps/api/chunk-GP2EXCRB.js", "../../../node_modules/.pnpm/@tauri-apps+api@1.4.0/node_modules/@tauri-apps/api/chunk-PEDMYRP6.js", "../../../node_modules/.pnpm/@tauri-apps+api@1.4.0/node_modules/@tauri-apps/api/chunk-3O263AOJ.js", "../../../node_modules/.pnpm/@tauri-apps+api@1.4.0/node_modules/@tauri-apps/api/chunk-6XWZL67Z.js", "../../../node_modules/.pnpm/@tauri-apps+api@1.4.0/node_modules/@tauri-apps/api/chunk-DIFM6EX4.js", "../../../node_modules/.pnpm/@tauri-apps+api@1.4.0/node_modules/@tauri-apps/api/chunk-6IDLE7HB.js", "../../../node_modules/.pnpm/@tauri-apps+api@1.4.0/node_modules/@tauri-apps/api/chunk-6PDK3LJA.js", "../../../node_modules/.pnpm/@tauri-apps+api@1.4.0/node_modules/@tauri-apps/api/chunk-WJKH4UU7.js", "../../../node_modules/.pnpm/@tauri-apps+api@1.4.0/node_modules/@tauri-apps/api/chunk-ITP3W3MJ.js", "../../../node_modules/.pnpm/@tauri-apps+api@1.4.0/node_modules/@tauri-apps/api/chunk-XH7VLPQH.js", "../../../node_modules/.pnpm/@tauri-apps+api@1.4.0/node_modules/@tauri-apps/api/index.js"],
  "sourcesContent": ["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, () => {\nreturn ", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { ITerminal, IRenderDebouncer } from 'browser/Types';\nimport { isMac } from 'common/Platform';\nimport { TimeBasedDebouncer } from 'browser/TimeBasedDebouncer';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderService } from 'browser/services/Services';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IBuffer } from 'common/buffer/Types';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityContainer: HTMLElement;\n\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n  private _liveRegionDebouncer: IRenderDebouncer;\n\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityContainer = document.createElement('div');\n    this._accessibilityContainer.classList.add('xterm-accessibility');\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.setAttribute('role', 'list');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityContainer.appendChild(this._rowContainer);\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityContainer.appendChild(this._liveRegion);\n    this._liveRegionDebouncer = this.register(new TimeBasedDebouncer(this._renderRows.bind(this)));\n\n    if (!this._terminal.element) {\n      throw new Error('Cannot enable accessibility before Terminal.open');\n    }\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityContainer);\n\n    this.register(this._terminal.onResize(e => this._handleResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._handleChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._handleChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._handleTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._handleKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n\n    this._screenDprMonitor = new ScreenDprMonitor(window);\n    this.register(this._screenDprMonitor);\n    this._screenDprMonitor.setListener(() => this._refreshRowsDimensions());\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the ScreenDprMonitor isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n\n    this._refreshRows();\n    this.register(toDisposable(() => {\n      this._accessibilityContainer.remove();\n      this._rowElements.length = 0;\n    }));\n  }\n\n  private _handleTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._handleChar(' ');\n    }\n  }\n\n  private _handleChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityContainer.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      this._liveRegion.remove();\n    }\n  }\n\n  private _handleKey(keyChar: string): void {\n    this._clearLiveRegion();\n    // Only add the char if there is no control character.\n    if (!/\\p{Control}/u.test(keyChar)) {\n      this._charsToConsume.push(keyChar);\n    }\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._liveRegionDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerText = '\\u00a0';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n\n  private _handleBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = e.target as HTMLElement;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _handleResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.css.cell.height) {\n      return;\n    }\n    this._accessibilityContainer.style.width = `${this._renderService.dimensions.css.canvas.width}px`;\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._handleResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.css.cell.height}px`;\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService, IOptionsService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, coreService: ICoreService, optionsService: IOptionsService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, coreService, optionsService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, coreService: ICoreService, optionsService: IOptionsService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, coreService.decPrivateModes.bracketedPasteMode && optionsService.rawOptions.ignoreBracketedPasteMode !== true);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord) {\n    selectionService.rightClickSelect(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorContrastCache } from 'browser/Types';\nimport { IColor } from 'common/Types';\nimport { TwoKeyMap } from 'common/MultiKeyMap';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: TwoKeyMap</* bg */number, /* fg */number, IColor | null> = new TwoKeyMap();\n  private _css: TwoKeyMap</* bg */number, /* fg */number, string | null> = new TwoKeyMap();\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    this._css.set(bg, fg, value);\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._css.get(bg, fg);\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    this._color.set(bg, fg, value);\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color.get(bg, fg);\n  }\n\n  public clear(): void {\n    this._color.clear();\n    this._css.clear();\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param node The node to add a listener to.\n * @param type The event type.\n * @param handler The handler for the listener.\n * @param options The boolean or options object to pass on to the event\n * listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IBufferCellPosition, ILink, ILinkDecorations, ILinkProvider, ILinkWithState, ILinkifier2, ILinkifierEvent } from 'browser/Types';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, disposeArray, getDisposeArrayDisposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { IBufferService } from 'common/services/Services';\nimport { IMouseService, IRenderService } from './services/Services';\n\nexport class Linkifier2 extends Disposable implements ILinkifier2 {\n  private _element: HTMLElement | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _linkProviders: ILinkProvider[] = [];\n  public get currentLink(): ILinkWithState | undefined { return this._currentLink; }\n  protected _currentLink: ILinkWithState | undefined;\n  private _mouseDownLink: ILinkWithState | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n  private _isMouseOut: boolean = true;\n  private _wasResized: boolean = false;\n  private _activeProviderReplies: Map<Number, ILinkWithState[] | undefined> | undefined;\n  private _activeLine: number = -1;\n\n  private readonly _onShowLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onShowLinkUnderline = this._onShowLinkUnderline.event;\n  private readonly _onHideLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onHideLinkUnderline = this._onHideLinkUnderline.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.register(getDisposeArrayDisposable(this._linkCacheDisposables));\n    this.register(toDisposable(() => {\n      this._lastMouseEvent = undefined;\n    }));\n    // Listen to resize to catch the case where it's resized and the cursor is out of the viewport.\n    this.register(this._bufferService.onResize(() => {\n      this._clearCurrentLink();\n      this._wasResized = true;\n    }));\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this._linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this._linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public attachToDom(element: HTMLElement, mouseService: IMouseService, renderService: IRenderService): void {\n    this._element = element;\n    this._mouseService = mouseService;\n    this._renderService = renderService;\n\n    this.register(addDisposableDomListener(this._element, 'mouseleave', () => {\n      this._isMouseOut = true;\n      this._clearCurrentLink();\n    }));\n    this.register(addDisposableDomListener(this._element, 'mousemove', this._handleMouseMove.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mousedown', this._handleMouseDown.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mouseup', this._handleMouseUp.bind(this)));\n  }\n\n  private _handleMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    if (!this._element || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n    this._isMouseOut = false;\n\n    // Ignore the event if it's an embedder created hover widget\n    const composedPath = event.composedPath() as HTMLElement[];\n    for (let i = 0; i < composedPath.length; i++) {\n      const target = composedPath[i];\n      // Hit Terminal.element, break and continue\n      if (target.classList.contains('xterm')) {\n        break;\n      }\n      // It's a hover, don't respect hover event\n      if (target.classList.contains('xterm-hover')) {\n        return;\n      }\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._handleHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _handleHover(position: IBufferCellPosition): void {\n    // TODO: This currently does not cache link provider results across wrapped lines, activeLine\n    //       should be something like `activeRange: {startY, endY}`\n    // Check if we need to clear the link\n    if (this._activeLine !== position.y || this._wasResized) {\n      this._clearCurrentLink();\n      this._askForLink(position, false);\n      this._wasResized = false;\n      return;\n    }\n\n    // Check the if the link is in the mouse position\n    const isCurrentLinkInPosition = this._currentLink && this._linkAtPosition(this._currentLink.link, position);\n    if (!isCurrentLinkInPosition) {\n      this._clearCurrentLink();\n      this._askForLink(position, true);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition, useLineCache: boolean): void {\n    if (!this._activeProviderReplies || !useLineCache) {\n      this._activeProviderReplies?.forEach(reply => {\n        reply?.forEach(linkWithState => {\n          if (linkWithState.link.dispose) {\n            linkWithState.link.dispose();\n          }\n        });\n      });\n      this._activeProviderReplies = new Map();\n      this._activeLine = position.y;\n    }\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    for (const [i, linkProvider] of this._linkProviders.entries()) {\n      if (useLineCache) {\n        const existingReply = this._activeProviderReplies?.get(i);\n        // If there isn't a reply, the provider hasn't responded yet.\n\n        // TODO: If there isn't a reply yet it means that the provider is still resolving. Ensuring\n        // provideLinks isn't triggered again saves ILink.hover firing twice though. This probably\n        // needs promises to get fixed\n        if (existingReply) {\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n        }\n      } else {\n        linkProvider.provideLinks(position.y, (links: ILink[] | undefined) => {\n          if (this._isMouseOut) {\n            return;\n          }\n          const linksWithState: ILinkWithState[] | undefined = links?.map(link  => ({ link }));\n          this._activeProviderReplies?.set(i, linksWithState);\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n\n          // If all providers have responded, remove lower priority links that intersect ranges of\n          // higher priority links\n          if (this._activeProviderReplies?.size === this._linkProviders.length) {\n            this._removeIntersectingLinks(position.y, this._activeProviderReplies);\n          }\n        });\n      }\n    }\n  }\n\n  private _removeIntersectingLinks(y: number, replies: Map<Number, ILinkWithState[] | undefined>): void {\n    const occupiedCells = new Set<number>();\n    for (let i = 0; i < replies.size; i++) {\n      const providerReply = replies.get(i);\n      if (!providerReply) {\n        continue;\n      }\n      for (let i = 0; i < providerReply.length; i++) {\n        const linkWithState = providerReply[i];\n        const startX = linkWithState.link.range.start.y < y ? 0 : linkWithState.link.range.start.x;\n        const endX = linkWithState.link.range.end.y > y ? this._bufferService.cols : linkWithState.link.range.end.x;\n        for (let x = startX; x <= endX; x++) {\n          if (occupiedCells.has(x)) {\n            providerReply.splice(i--, 1);\n            break;\n          }\n          occupiedCells.add(x);\n        }\n      }\n    }\n  }\n\n  private _checkLinkProviderResult(index: number, position: IBufferCellPosition, linkProvided: boolean): boolean {\n    if (!this._activeProviderReplies) {\n      return linkProvided;\n    }\n\n    const links = this._activeProviderReplies.get(index);\n\n    // Check if every provider before this one has come back undefined\n    let hasLinkBefore = false;\n    for (let j = 0; j < index; j++) {\n      if (!this._activeProviderReplies.has(j) || this._activeProviderReplies.get(j)) {\n        hasLinkBefore = true;\n      }\n    }\n\n    // If all providers with higher priority came back undefined, then this provider's link for\n    // the position should be used\n    if (!hasLinkBefore && links) {\n      const linkAtPosition = links.find(link => this._linkAtPosition(link.link, position));\n      if (linkAtPosition) {\n        linkProvided = true;\n        this._handleNewLink(linkAtPosition);\n      }\n    }\n\n    // Check if all the providers have responded\n    if (this._activeProviderReplies.size === this._linkProviders.length && !linkProvided) {\n      // Respect the order of the link providers\n      for (let j = 0; j < this._activeProviderReplies.size; j++) {\n        const currentLink = this._activeProviderReplies.get(j)?.find(link => this._linkAtPosition(link.link, position));\n        if (currentLink) {\n          linkProvided = true;\n          this._handleNewLink(currentLink);\n          break;\n        }\n      }\n    }\n\n    return linkProvided;\n  }\n\n  private _handleMouseDown(): void {\n    this._mouseDownLink = this._currentLink;\n  }\n\n  private _handleMouseUp(event: MouseEvent): void {\n    if (!this._element || !this._mouseService || !this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n\n    if (this._mouseDownLink === this._currentLink && this._linkAtPosition(this._currentLink.link, position)) {\n      this._currentLink.link.activate(event, this._currentLink.link.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._element || !this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.link.range.start.y >= startRow && this._currentLink.link.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent);\n      this._currentLink = undefined;\n      disposeArray(this._linkCacheDisposables);\n    }\n  }\n\n  private _handleNewLink(linkWithState: ILinkWithState): void {\n    if (!this._element || !this._lastMouseEvent || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(linkWithState.link, position)) {\n      this._currentLink = linkWithState;\n      this._currentLink.state = {\n        decorations: {\n          underline: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.underline,\n          pointerCursor: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.pointerCursor\n        },\n        isHovered: true\n      };\n      this._linkHover(this._element, linkWithState.link, this._lastMouseEvent);\n\n      // Add listener for tracking decorations changes\n      linkWithState.link.decorations = {} as ILinkDecorations;\n      Object.defineProperties(linkWithState.link.decorations, {\n        pointerCursor: {\n          get: () => this._currentLink?.state?.decorations.pointerCursor,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink.state.decorations.pointerCursor !== v) {\n              this._currentLink.state.decorations.pointerCursor = v;\n              if (this._currentLink.state.isHovered) {\n                this._element?.classList.toggle('xterm-cursor-pointer', v);\n              }\n            }\n          }\n        },\n        underline: {\n          get: () => this._currentLink?.state?.decorations.underline,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink?.state?.decorations.underline !== v) {\n              this._currentLink.state.decorations.underline = v;\n              if (this._currentLink.state.isHovered) {\n                this._fireUnderlineEvent(linkWithState.link, v);\n              }\n            }\n          }\n        }\n      });\n\n      // Listen to viewport changes to re-render the link under the cursor (only when the line the\n      // link is on changes)\n      if (this._renderService) {\n        this._linkCacheDisposables.push(this._renderService.onRenderedViewportChange(e => {\n          // Sanity check, this shouldn't happen in practice as this listener would be disposed\n          if (!this._currentLink) {\n            return;\n          }\n          // When start is 0 a scroll most likely occurred, make sure links above the fold also get\n          // cleared.\n          const start = e.start === 0 ? 0 : e.start + 1 + this._bufferService.buffer.ydisp;\n          const end = this._bufferService.buffer.ydisp + 1 + e.end;\n          // Only clear the link if the viewport change happened on this line\n          if (this._currentLink.link.range.start.y >= start && this._currentLink.link.range.end.y <= end) {\n            this._clearCurrentLink(start, end);\n            if (this._lastMouseEvent && this._element) {\n              // re-eval previously active link after changes\n              const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService!);\n              if (position) {\n                this._askForLink(position, false);\n              }\n            }\n          }\n        }));\n      }\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = true;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, true);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.add('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  private _fireUnderlineEvent(link: ILink, showEvent: boolean): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n    const event = this._createLinkUnderlineEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined);\n    const emitter = showEvent ? this._onShowLinkUnderline : this._onHideLinkUnderline;\n    emitter.fire(event);\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = false;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, false);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.remove('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const lower = link.range.start.y * this._bufferService.cols + link.range.start.x;\n    const upper = link.range.end.y * this._bufferService.cols + link.range.end.x;\n    const current = position.y * this._bufferService.cols + position.x;\n    return (lower <= current && current <= upper);\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkUnderlineEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// This file contains strings that get exported in the API so they can be localized\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange, ILink, ILinkProvider } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService, IOscLinkService } from 'common/services/Services';\n\nexport class OscLinkProvider implements ILinkProvider {\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IOscLinkService private readonly _oscLinkService: IOscLinkService\n  ) {\n  }\n\n  public provideLinks(y: number, callback: (links: ILink[] | undefined) => void): void {\n    const line = this._bufferService.buffer.lines.get(y - 1);\n    if (!line) {\n      callback(undefined);\n      return;\n    }\n\n    const result: ILink[] = [];\n    const linkHandler = this._optionsService.rawOptions.linkHandler;\n    const cell = new CellData();\n    const lineLength = line.getTrimmedLength();\n    let currentLinkId = -1;\n    let currentStart = -1;\n    let finishLink = false;\n    for (let x = 0; x < lineLength; x++) {\n      // Minor optimization, only check for content if there isn't a link in case the link ends with\n      // a null cell\n      if (currentStart === -1 && !line.hasContent(x)) {\n        continue;\n      }\n\n      line.loadCell(x, cell);\n      if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n        if (currentStart === -1) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n          continue;\n        } else {\n          finishLink = cell.extended.urlId !== currentLinkId;\n        }\n      } else {\n        if (currentStart !== -1) {\n          finishLink = true;\n        }\n      }\n\n      if (finishLink || (currentStart !== -1 && x === lineLength - 1)) {\n        const text = this._oscLinkService.getLinkData(currentLinkId)?.uri;\n        if (text) {\n          // These ranges are 1-based\n          const range: IBufferRange = {\n            start: {\n              x: currentStart + 1,\n              y\n            },\n            end: {\n              // Offset end x if it's a link that ends on the last cell in the line\n              x: x + (!finishLink && x === lineLength - 1 ? 1 : 0),\n              y\n            }\n          };\n\n          let ignoreLink = false;\n          if (!linkHandler?.allowNonHttpProtocols) {\n            try {\n              const parsed = new URL(text);\n              if (!['http:', 'https:'].includes(parsed.protocol)) {\n                ignoreLink = true;\n              }\n            } catch (e) {\n              // Ignore invalid URLs to prevent unexpected behaviors\n              ignoreLink = true;\n            }\n          }\n\n          if (!ignoreLink) {\n            // OSC links always use underline and pointer decorations\n            result.push({\n              text,\n              range,\n              activate: (e, text) => (linkHandler ? linkHandler.activate(e, text, range) : defaultActivate(e, text)),\n              hover: (e, text) => linkHandler?.hover?.(e, text, range),\n              leave: (e, text) => linkHandler?.leave?.(e, text, range)\n            });\n          }\n        }\n        finishLink = false;\n\n        // Clear link or start a new link if one starts immediately\n        if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n        } else {\n          currentStart = -1;\n          currentLinkId = -1;\n        }\n      }\n    }\n\n    // TODO: Handle fetching and returning other link ranges to underline other links with the same\n    //       id\n    callback(result);\n  }\n}\n\nfunction defaultActivate(e: MouseEvent, uri: string): void {\n  const answer = confirm(`Do you want to navigate to ${uri}?\\n\\nWARNING: This link could potentially be dangerous`);\n  if (answer) {\n    const newWindow = window.open();\n    if (newWindow) {\n      try {\n        newWindow.opener = null;\n      } catch {\n        // no-op, Electron can throw\n      }\n      newWindow.location.href = uri;\n    } else {\n      console.warn('Opening link blocked as opener could not be cleared');\n    }\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IRenderDebouncerWithCallback {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n  private _refreshCallbacks: FrameRequestCallback[] = [];\n\n  constructor(\n    private _parentWindow: Window,\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      this._parentWindow.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    this._refreshCallbacks.push(callback);\n    if (!this._animationFrame) {\n      this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n    }\n    return this._animationFrame;\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    this._animationFrame = undefined;\n\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      this._runRefreshCallbacks();\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n    this._runRefreshCallbacks();\n  }\n\n  private _runRefreshCallbacks(): void {\n    for (const callback of this._refreshCallbacks) {\n      callback(0);\n    }\n    this._refreshCallbacks = [];\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable, toDisposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  constructor(private _parentWindow: Window) {\n    super();\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this.register(toDisposable(() => {\n      this.clearListener();\n    }));\n  }\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(this._parentWindow.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  private _updateDpr(): void {\n    if (!this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList?.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this._resolutionMediaMatchList = this._parentWindow.matchMedia(`screen and (resolution: ${this._parentWindow.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n", "/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { copyHandler, handlePasteEvent, moveTextAreaUnderMouseCursor, paste, rightClickHandler } from 'browser/Clipboard';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Linkifier2 } from 'browser/Linkifier2';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { OscLinkProvider } from 'browser/OscLinkProvider';\nimport { CharacterJoinerHandler, CustomKeyEventHandler, IBrowser, IBufferRange, ICompositionHelper, ILinkifier2, ITerminal, IViewport } from 'browser/Types';\nimport { Viewport } from 'browser/Viewport';\nimport { BufferDecorationRenderer } from 'browser/decorations/BufferDecorationRenderer';\nimport { OverviewRulerRenderer } from 'browser/decorations/OverviewRulerRenderer';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { IRenderer } from 'browser/renderer/shared/Types';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { CharacterJoinerService } from 'browser/services/CharacterJoinerService';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { MouseService } from 'browser/services/MouseService';\nimport { RenderService } from 'browser/services/RenderService';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport { ICharSizeService, ICharacterJoinerService, ICoreBrowserService, IMouseService, IRenderService, ISelectionService, IThemeService } from 'browser/services/Services';\nimport { ThemeService } from 'browser/services/ThemeService';\nimport { color, rgba } from 'common/Color';\nimport { CoreTerminal } from 'common/CoreTerminal';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { MutableDisposable, toDisposable } from 'common/Lifecycle';\nimport * as Browser from 'common/Platform';\nimport { ColorRequestType, CoreMouseAction, CoreMouseButton, CoreMouseEventType, IColorEvent, ITerminalOptions, KeyboardResultType, ScrollSource, SpecialColorIndex } from 'common/Types';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { IBuffer } from 'common/buffer/Types';\nimport { C0, C1_ESCAPED } from 'common/data/EscapeSequences';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { toRgbString } from 'common/input/XParseColor';\nimport { DecorationService } from 'common/services/DecorationService';\nimport { IDecorationService } from 'common/services/Services';\nimport { IDecoration, IDecorationOptions, IDisposable, ILinkProvider, IMarker } from 'xterm';\nimport { WindowsOptionsReportType } from '../common/InputHandler';\nimport { AccessibilityManager } from './AccessibilityManager';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document: Document = (typeof window !== 'undefined') ? window.document : null as any;\n\nexport class Terminal extends CoreTerminal implements ITerminal {\n  public textarea: HTMLTextAreaElement | undefined;\n  public element: HTMLElement | undefined;\n  public screenElement: HTMLElement | undefined;\n\n  private _document: Document | undefined;\n  private _viewportScrollArea: HTMLElement | undefined;\n  private _viewportElement: HTMLElement | undefined;\n  private _helperContainer: HTMLElement | undefined;\n  private _compositionView: HTMLElement | undefined;\n\n  private _overviewRulerRenderer: OverviewRulerRenderer | undefined;\n\n  public browser: IBrowser = Browser as any;\n\n  private _customKeyEventHandler: CustomKeyEventHandler | undefined;\n\n  // browser services\n  private _decorationService: DecorationService;\n  private _charSizeService: ICharSizeService | undefined;\n  private _coreBrowserService: ICoreBrowserService | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _themeService: IThemeService | undefined;\n  private _characterJoinerService: ICharacterJoinerService | undefined;\n  private _selectionService: ISelectionService | undefined;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  /**\n   * Records whether a keydown event has occured since the last keyup event, i.e. whether a key\n   * is currently \"pressed\".\n   */\n  private _keyDownSeen: boolean = false;\n\n  /**\n   * Records whether the keypress event has already been handled and triggered a data event, if so\n   * the input event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyPressHandled: boolean = false;\n\n  /**\n   * Records whether there has been a keydown event for a dead key without a corresponding keydown\n   * event for the composed/alternative character. If we cancel the keydown event for the dead key,\n   * no events will be emitted for the final character.\n   */\n  private _unprocessedDeadKey: boolean = false;\n\n  public linkifier2: ILinkifier2;\n  public viewport: IViewport | undefined;\n  private _compositionHelper: ICompositionHelper | undefined;\n  private _accessibilityManager: MutableDisposable<AccessibilityManager> = this.register(new MutableDisposable());\n\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onKey = this.register(new EventEmitter<{ key: string, domEvent: KeyboardEvent }>());\n  public readonly onKey = this._onKey.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onBell = this.register(new EventEmitter<void>());\n  public readonly onBell = this._onBell.event;\n\n  private _onFocus = this.register(new EventEmitter<void>());\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = this.register(new EventEmitter<void>());\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  private _onA11yCharEmitter = this.register(new EventEmitter<string>());\n  public get onA11yChar(): IEvent<string> { return this._onA11yCharEmitter.event; }\n  private _onA11yTabEmitter = this.register(new EventEmitter<number>());\n  public get onA11yTab(): IEvent<number> { return this._onA11yTabEmitter.event; }\n  private _onWillOpen = this.register(new EventEmitter<HTMLElement>());\n  public get onWillOpen(): IEvent<HTMLElement> { return this._onWillOpen.event; }\n\n  constructor(\n    options: Partial<ITerminalOptions> = {}\n  ) {\n    super(options);\n\n    this._setup();\n\n    this.linkifier2 = this.register(this._instantiationService.createInstance(Linkifier2));\n    this.linkifier2.registerLinkProvider(this._instantiationService.createInstance(OscLinkProvider));\n    this._decorationService = this._instantiationService.createInstance(DecorationService);\n    this._instantiationService.setService(IDecorationService, this._decorationService);\n\n    // Setup InputHandler listeners\n    this.register(this._inputHandler.onRequestBell(() => this._onBell.fire()));\n    this.register(this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end)));\n    this.register(this._inputHandler.onRequestSendFocus(() => this._reportFocus()));\n    this.register(this._inputHandler.onRequestReset(() => this.reset()));\n    this.register(this._inputHandler.onRequestWindowsOptionsReport(type => this._reportWindowsOptions(type)));\n    this.register(this._inputHandler.onColor((event) => this._handleColorEvent(event)));\n    this.register(forwardEvent(this._inputHandler.onCursorMove, this._onCursorMove));\n    this.register(forwardEvent(this._inputHandler.onTitleChange, this._onTitleChange));\n    this.register(forwardEvent(this._inputHandler.onA11yChar, this._onA11yCharEmitter));\n    this.register(forwardEvent(this._inputHandler.onA11yTab, this._onA11yTabEmitter));\n\n    // Setup listeners\n    this.register(this._bufferService.onResize(e => this._afterResize(e.cols, e.rows)));\n\n    this.register(toDisposable(() => {\n      this._customKeyEventHandler = undefined;\n      this.element?.parentNode?.removeChild(this.element);\n    }));\n  }\n\n  /**\n   * Handle color event from inputhandler for OSC 4|104 | 10|110 | 11|111 | 12|112.\n   * An event from OSC 4|104 may contain multiple set or report requests, and multiple\n   * or none restore requests (resetting all),\n   * while an event from OSC 10|110 | 11|111 | 12|112 always contains a single request.\n   */\n  private _handleColorEvent(event: IColorEvent): void {\n    if (!this._themeService) return;\n    for (const req of event) {\n      let acc: 'foreground' | 'background' | 'cursor' | 'ansi';\n      let ident = '';\n      switch (req.index) {\n        case SpecialColorIndex.FOREGROUND: // OSC 10 | 110\n          acc = 'foreground';\n          ident = '10';\n          break;\n        case SpecialColorIndex.BACKGROUND: // OSC 11 | 111\n          acc = 'background';\n          ident = '11';\n          break;\n        case SpecialColorIndex.CURSOR: // OSC 12 | 112\n          acc = 'cursor';\n          ident = '12';\n          break;\n        default: // OSC 4 | 104\n          // we can skip the [0..255] range check here (already done in inputhandler)\n          acc = 'ansi';\n          ident = '4;' + req.index;\n      }\n      switch (req.type) {\n        case ColorRequestType.REPORT:\n          const channels = color.toColorRGB(acc === 'ansi'\n            ? this._themeService.colors.ansi[req.index]\n            : this._themeService.colors[acc]);\n          this.coreService.triggerDataEvent(`${C0.ESC}]${ident};${toRgbString(channels)}${C1_ESCAPED.ST}`);\n          break;\n        case ColorRequestType.SET:\n          if (acc === 'ansi') {\n            this._themeService.modifyColors(colors => colors.ansi[req.index] = rgba.toColor(...req.color));\n          } else {\n            const narrowedAcc = acc;\n            this._themeService.modifyColors(colors => colors[narrowedAcc] = rgba.toColor(...req.color));\n          }\n          break;\n        case ColorRequestType.RESTORE:\n          this._themeService.restoreColor(req.index);\n          break;\n      }\n    }\n  }\n\n  protected _setup(): void {\n    super._setup();\n\n    this._customKeyEventHandler = undefined;\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  private _handleScreenReaderModeOptionChange(value: boolean): void {\n    if (value) {\n      if (!this._accessibilityManager.value && this._renderService) {\n        this._accessibilityManager.value = this._instantiationService.createInstance(AccessibilityManager, this);\n      }\n    } else {\n      this._accessibilityManager.clear();\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _handleTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element!.classList.add('focus');\n    this._showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea?.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _handleTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea!.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element!.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  private _syncTextArea(): void {\n    if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper!.isComposing || !this._renderService) {\n      return;\n    }\n    const cursorY = this.buffer.ybase + this.buffer.y;\n    const bufferLine = this.buffer.lines.get(cursorY);\n    if (!bufferLine) {\n      return;\n    }\n    const cursorX = Math.min(this.buffer.x, this.cols - 1);\n    const cellHeight = this._renderService.dimensions.css.cell.height;\n    const width = bufferLine.getWidth(cursorX);\n    const cellWidth = this._renderService.dimensions.css.cell.width * width;\n    const cursorTop = this.buffer.y * this._renderService.dimensions.css.cell.height;\n    const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n    // Sync the textarea to the exact position of the composition view so the IME knows where the\n    // text is.\n    this.textarea.style.left = cursorLeft + 'px';\n    this.textarea.style.top = cursorTop + 'px';\n    this.textarea.style.width = cellWidth + 'px';\n    this.textarea.style.height = cellHeight + 'px';\n    this.textarea.style.lineHeight = cellHeight + 'px';\n    this.textarea.style.zIndex = '-5';\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element!, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService!);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea!, this.coreService, this.optionsService);\n    this.register(addDisposableDomListener(this.textarea!, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element!, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element!, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element!, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element!, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea!, this.screenElement!);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea!, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionstart', () => this._compositionHelper!.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper!.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionend', () => this._compositionHelper!.compositionend()));\n    this.register(addDisposableDomListener(this.textarea!, 'input', (ev: InputEvent) => this._inputEvent(ev), true));\n    this.register(this.onRender(() => this._compositionHelper!.updateCompositionElements()));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!parent.isConnected) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    this._document = parent.ownerDocument!;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    if (!Browser.isChromeOS) {\n      // ChromeVox on ChromeOS does not like this. See\n      // https://issuetracker.google.com/issues/260170397\n      this.textarea.setAttribute('aria-multiline', 'false');\n    }\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n\n    // Register the core browser service before the generic textarea handlers are registered so it\n    // handles them first. Otherwise the renderers may use the wrong focus state.\n    this._coreBrowserService = this._instantiationService.createInstance(CoreBrowserService, this.textarea, this._document.defaultView ?? window);\n    this._instantiationService.setService(ICoreBrowserService, this._coreBrowserService);\n\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._handleTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._handleTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._themeService = this._instantiationService.createInstance(ThemeService);\n    this._instantiationService.setService(IThemeService, this._themeService);\n\n    this._characterJoinerService = this._instantiationService.createInstance(CharacterJoinerService);\n    this._instantiationService.setService(ICharacterJoinerService, this._characterJoinerService);\n\n    this._renderService = this.register(this._instantiationService.createInstance(RenderService, this.rows, this.screenElement));\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this.register(this._renderService.onRenderedViewportChange(e => this._onRender.fire(e)));\n    this.onResize(e => this._renderService!.resize(e.cols, e.rows));\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    try {\n      this._onWillOpen.fire(this.element);\n    }\n    catch { /* fails to load addon for some reason */ }\n    if (!this._renderService.hasRenderer()) {\n      this._renderService.setRenderer(this._createRenderer());\n    }\n\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport, this._viewportElement, this._viewportScrollArea);\n    this.viewport.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent, ScrollSource.VIEWPORT)),\n    this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport!.syncScrollArea()));\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => {\n      this._renderService!.handleCursorMove();\n      this._syncTextArea();\n    }));\n    this.register(this.onResize(() => this._renderService!.handleResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService!.handleBlur()));\n    this.register(this.onFocus(() => this._renderService!.handleFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport!.syncScrollArea()));\n\n    this._selectionService = this.register(this._instantiationService.createInstance(SelectionService,\n      this.element,\n      this.screenElement,\n      this.linkifier2\n    ));\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent)));\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRequestRedraw(e => this._renderService!.handleSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea!.value = text;\n      this.textarea!.focus();\n      this.textarea!.select();\n    }));\n    this.register(this._onScroll.event(ev => {\n      this.viewport!.syncScrollArea();\n      this._selectionService!.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService!.refresh()));\n\n    this.linkifier2.attachToDom(this.screenElement, this._mouseService, this._renderService);\n    this.register(this._instantiationService.createInstance(BufferDecorationRenderer, this.screenElement));\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService!.handleMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.coreMouseService.areMouseEventsActive) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager.value = this._instantiationService.createInstance(AccessibilityManager, this);\n    }\n    this.register(this.optionsService.onSpecificOptionChange('screenReaderMode', e => this._handleScreenReaderModeOptionChange(e)));\n\n    if (this.options.overviewRulerWidth) {\n      this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n    }\n    this.optionsService.onSpecificOptionChange('overviewRulerWidth', value => {\n      if (!this._overviewRulerRenderer && value && this._viewportElement && this.screenElement) {\n        this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n      }\n    });\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    return this._instantiationService.createInstance(DomRenderer, this.element!, this.screenElement!, this._viewportElement!, this.linkifier2);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element!;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService!.getMouseReportCoords(ev, self.screenElement!);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction | undefined;\n      switch ((ev as any).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          const amount = self.viewport!.getLinesScrolled(ev as WheelEvent);\n\n          if (amount === 0) {\n            return false;\n          }\n\n          action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self.coreMouseService.triggerMouseEvent({\n        col: pos.col,\n        row: pos.row,\n        x: pos.x,\n        y: pos.y,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: any) => void | boolean } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n          if (requestedEvents.mousedrag) {\n            this._document!.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        return this.cancel(ev, true);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this.register(this.coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      if (events) {\n        if (this.optionsService.rawOptions.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this.coreMouseService.explainEvents(events));\n        }\n        this.element!.classList.add('enable-mouse-events');\n        this._selectionService!.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element!.classList.remove('enable-mouse-events');\n        this._selectionService!.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove!);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel!);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel, { passive: false });\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n        el.removeEventListener('mouseup', requestedEvents.mouseup!);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        el.addEventListener('mouseup', eventListeners.mouseup);\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document!.removeEventListener('mousemove', requestedEvents.mousedrag!);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    }));\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this.coreMouseService.activeProtocol = this.coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.coreMouseService.areMouseEventsActive || this._selectionService!.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document!.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document!.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      // do nothing, if app side handles wheel itself\n      if (requestedEvents.wheel) return;\n\n      if (!this.buffer.hasScrollback) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        const amount = this.viewport!.getLinesScrolled(ev);\n\n        // Do nothing if there's no vertical scroll\n        if (amount === 0) {\n          return;\n        }\n\n        // Construct and send sequences\n        const sequence = C0.ESC + (this.coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n        let data = '';\n        for (let i = 0; i < Math.abs(amount); i++) {\n          data += sequence;\n        }\n        this.coreService.triggerDataEvent(data, true);\n        return this.cancel(ev, true);\n      }\n\n      // normal viewport scrolling\n      // conditionally stop event, if the viewport still had rows to scroll within\n      if (this.viewport!.handleWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      this.viewport!.handleTouchStart(ev);\n      return this.cancel(ev);\n    }, { passive: true }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      if (!this.viewport!.handleTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService?.shouldColumnSelect(ev)) {\n      this.element!.classList.add('column-select');\n    } else {\n      this.element!.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  private _showCursor(): void {\n    if (!this.coreService.isCursorInitialized) {\n      this.coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source = ScrollSource.TERMINAL): void {\n    if (source === ScrollSource.VIEWPORT) {\n      super.scrollLines(disp, suppressScrollEvent, source);\n      this.refresh(0, this.rows - 1);\n    } else {\n      this.viewport?.scrollLines(disp);\n    }\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea!, this.coreService, this.optionsService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this.linkifier2.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    const joinerId = this._characterJoinerService.register(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    if (this._characterJoinerService.deregister(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public registerMarker(cursorYOffset: number): IMarker {\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    return this._decorationService.registerDecoration(decorationOptions);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService!.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): IBufferRange | undefined {\n    if (!this._selectionService || !this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      start: {\n        x: this._selectionService.selectionStart![0],\n        y: this._selectionService.selectionStart![1]\n      },\n      end: {\n        x: this._selectionService.selectionEnd![0],\n        y: this._selectionService.selectionEnd![1]\n      }\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown [KeyboardEvent].\n   *\n   * [KeyboardEvent]: https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   */\n  protected _keyDown(event: KeyboardEvent): boolean | undefined {\n    this._keyDownHandled = false;\n    this._keyDownSeen = true;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    // Ignore composing with Alt key on Mac when macOptionIsMeta is enabled\n    const shouldIgnoreComposition = this.browser.isMac && this.options.macOptionIsMeta && event.altKey;\n\n    if (!shouldIgnoreComposition && !this._compositionHelper!.keydown(event)) {\n      if (this.options.scrollOnUserInput && this.buffer.ybase !== this.buffer.ydisp) {\n        this.scrollToBottom();\n      }\n      return false;\n    }\n\n    if (!shouldIgnoreComposition && (event.key === 'Dead' || event.key === 'AltGraph')) {\n      this._unprocessedDeadKey = true;\n    }\n\n    const result = evaluateKeyboardEvent(event, this.coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    // HACK: Process A-Z in the keypress event to fix an issue with macOS IMEs where lower case\n    // letters cannot be input while caps lock is on.\n    if (event.key && !event.ctrlKey && !event.altKey && !event.metaKey && event.key.length === 1) {\n      if (event.key.charCodeAt(0) >= 65 && event.key.charCodeAt(0) <= 90) {\n        return true;\n      }\n    }\n\n    if (this._unprocessedDeadKey) {\n      this._unprocessedDeadKey = false;\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea!.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this._showCursor();\n    this.coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, we don't cancel them (unless ctrl or alt\n    // is also depressed) so that the cursor textarea can be updated, which triggers the screen\n    // reader to read it.\n    if (!this.optionsService.rawOptions.screenReaderMode || event.altKey || event.ctrlKey) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: KeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.getModifierState('AltGraph'));\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    this._keyDownSeen = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n    this._keyPressHandled = false;\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    this._keyPressHandled = false;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this._showCursor();\n    this.coreService.triggerDataEvent(key, true);\n\n    this._keyPressHandled = true;\n\n    // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n    // keys could be ignored\n    this._unprocessedDeadKey = false;\n\n    return true;\n  }\n\n  /**\n   * Handle an input event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/Web/API/InputEvent\n   * @param ev The input event to be handled.\n   */\n  protected _inputEvent(ev: InputEvent): boolean {\n    // Only support emoji IMEs when screen reader mode is disabled as the event must bubble up to\n    // support reading out character input which can doubling up input characters\n    // Based on these event traces: https://github.com/xtermjs/xterm.js/issues/3679\n    if (ev.data && ev.inputType === 'insertText' && (!ev.composed || !this._keyDownSeen) && !this.optionsService.rawOptions.screenReaderMode) {\n      if (this._keyPressHandled) {\n        return false;\n      }\n\n      // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n      // keys could be ignored\n      this._unprocessedDeadKey = false;\n\n      const text = ev.data;\n      this.coreService.triggerDataEvent(text, true);\n\n      this.cancel(ev);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    super.resize(x, y);\n  }\n\n  private _afterResize(x: number, y: number): void {\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.clearAllMarkers();\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)!);\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    // IMPORTANT: Fire scroll event before viewport is reset. This ensures embedders get the clear\n    // scroll event and that the viewport's state will be valid for immediate writes.\n    this._onScroll.fire({ position: this.buffer.ydisp, source: ScrollSource.TERMINAL });\n    this.viewport?.reset();\n    this.refresh(0, this.rows - 1);\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n\n    this._setup();\n    super.reset();\n    this._selectionService?.reset();\n    this._decorationService.reset();\n    this.viewport?.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderService?.clearTextureAtlas();\n  }\n\n  private _reportFocus(): void {\n    if (this.element?.classList.contains('focus')) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    } else {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n  }\n\n  private _reportWindowsOptions(type: WindowsOptionsReportType): void {\n    if (!this._renderService) {\n      return;\n    }\n\n    switch (type) {\n      case WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:\n        const canvasWidth = this._renderService.dimensions.css.canvas.width.toFixed(0);\n        const canvasHeight = this._renderService.dimensions.css.canvas.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[4;${canvasHeight};${canvasWidth}t`);\n        break;\n      case WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:\n        const cellWidth = this._renderService.dimensions.css.cell.width.toFixed(0);\n        const cellHeight = this._renderService.dimensions.css.cell.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[6;${cellHeight};${cellWidth}t`);\n        break;\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean | undefined {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nconst RENDER_DEBOUNCE_THRESHOLD_MS = 1000; // 1 Second\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to update screen readers to update at most once configurable interval of time.\n */\nexport class TimeBasedDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n\n  // The last moment that the Terminal was refreshed at\n  private _lastRefreshMs = 0;\n  // Whether a trailing refresh should be triggered due to a refresh request that was throttled\n  private _additionalRefreshRequested = false;\n\n  private _refreshTimeoutID: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void,\n    private readonly _debounceThresholdMS = RENDER_DEBOUNCE_THRESHOLD_MS\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._refreshTimeoutID) {\n      clearTimeout(this._refreshTimeoutID);\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    // Only refresh if the time since last refresh is above a threshold, otherwise wait for\n    // enough time to pass before refreshing again.\n    const refreshRequestTime: number = Date.now();\n    if (refreshRequestTime - this._lastRefreshMs >= this._debounceThresholdMS) {\n      // Enough time has lapsed since the last refresh; refresh immediately\n      this._lastRefreshMs = refreshRequestTime;\n      this._innerRefresh();\n    } else if (!this._additionalRefreshRequested) {\n      // This is the first additional request throttled; set up trailing refresh\n      const elapsed = refreshRequestTime - this._lastRefreshMs;\n      const waitPeriodBeforeTrailingRefresh = this._debounceThresholdMS - elapsed;\n      this._additionalRefreshRequested = true;\n\n      this._refreshTimeoutID = window.setTimeout(() => {\n        this._lastRefreshMs = Date.now();\n        this._innerRefresh();\n        this._additionalRefreshRequested = false;\n        this._refreshTimeoutID = undefined; // No longer need to clear the timeout\n      }, waitPeriodBeforeTrailingRefresh);\n    }\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IViewport, ReadonlyColorSet } from 'browser/Types';\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\ninterface ISmoothScrollState {\n  startTime: number;\n  origin: number;\n  target: number;\n}\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _currentDeviceCellHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n  private _activeBuffer: IBuffer;\n  private _renderDimensions: IRenderDimensions;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n  private _smoothScrollState: ISmoothScrollState = {\n    startTime: 0,\n    origin: -1,\n    target: -1\n  };\n\n  private readonly _onRequestScrollLines = this.register(new EventEmitter<{ amount: number, suppressScrollEvent: boolean }>());\n  public readonly onRequestScrollLines = this._onRequestScrollLines.event;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that\n    // case, therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._handleScroll.bind(this)));\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n    this._renderDimensions = this._renderService.dimensions;\n    this.register(this._renderService.onDimensionsChange(e => this._renderDimensions = e));\n\n    this._handleThemeChange(themeService.colors);\n    this.register(themeService.onChangeColors(e => this._handleThemeChange(e)));\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.syncScrollArea()));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea());\n  }\n\n  private _handleThemeChange(colors: ReadonlyColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  public reset(): void {\n    this._currentRowHeight = 0;\n    this._currentDeviceCellHeight = 0;\n    this._lastRecordedBufferLength = 0;\n    this._lastRecordedViewportHeight = 0;\n    this._lastRecordedBufferHeight = 0;\n    this._lastTouchY = 0;\n    this._lastScrollTop = 0;\n    // Sync on next animation frame to ensure the new terminal state is used\n    this._coreBrowserService.window.requestAnimationFrame(() => this.syncScrollArea());\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        this._coreBrowserService.window.cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderService.dimensions.device.cell.height / this._coreBrowserService.dpr;\n      this._currentDeviceCellHeight = this._renderService.dimensions.device.cell.height;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderService.dimensions.css.canvas.height);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.css.canvas.height) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    if (this._lastScrollTop !== this._activeBuffer.ydisp * this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderDimensions.device.cell.height !== this._currentDeviceCellHeight) {\n      this._refresh(immediate);\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _handleScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      // Still trigger the scroll so lines get refreshed\n      this._onRequestScrollLines.fire({ amount: 0, suppressScrollEvent: true });\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._onRequestScrollLines.fire({ amount: diff, suppressScrollEvent: true });\n  }\n\n  private _smoothScroll(): void {\n    // Check valid state\n    if (this._isDisposed || this._smoothScrollState.origin === -1 || this._smoothScrollState.target === -1) {\n      return;\n    }\n\n    // Calculate position complete\n    const percent = this._smoothScrollPercent();\n    this._viewportElement.scrollTop = this._smoothScrollState.origin + Math.round(percent * (this._smoothScrollState.target - this._smoothScrollState.origin));\n\n    // Continue or finish smooth scroll\n    if (percent < 1) {\n      this._coreBrowserService.window.requestAnimationFrame(() => this._smoothScroll());\n    } else {\n      this._clearSmoothScrollState();\n    }\n  }\n\n  private _smoothScrollPercent(): number {\n    if (!this._optionsService.rawOptions.smoothScrollDuration || !this._smoothScrollState.startTime) {\n      return 1;\n    }\n    return Math.max(Math.min((Date.now() - this._smoothScrollState.startTime) / this._optionsService.rawOptions.smoothScrollDuration, 1), 0);\n  }\n\n  private _clearSmoothScrollState(): void {\n    this._smoothScrollState.startTime = 0;\n    this._smoothScrollState.origin = -1;\n    this._smoothScrollState.target = -1;\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public handleWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._viewportElement.scrollTop += amount;\n    } else {\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        if (this._smoothScrollState.target === -1) {\n          this._smoothScrollState.target = this._viewportElement.scrollTop + amount;\n        } else {\n          this._smoothScrollState.target += amount;\n        }\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n    return this._bubbleScroll(ev, amount);\n  }\n\n  public scrollLines(disp: number): void {\n    if (disp === 0) {\n      return;\n    }\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._onRequestScrollLines.fire({ amount: disp, suppressScrollEvent: false });\n    } else {\n      const amount = disp * this._currentRowHeight;\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        this._smoothScrollState.target = this._smoothScrollState.origin + amount;\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n\n  public getBufferElements(startLine: number, endLine?: number): { bufferElements: HTMLElement[], cursorElement?: HTMLElement } {\n    let currentLine: string = '';\n    let cursorElement: HTMLElement | undefined;\n    const bufferElements: HTMLElement[] = [];\n    const end = endLine ?? this._bufferService.buffer.lines.length;\n    const lines = this._bufferService.buffer.lines;\n    for (let i = startLine; i < end; i++) {\n      const line = lines.get(i);\n      if (!line) {\n        continue;\n      }\n      const isWrapped = lines.get(i + 1)?.isWrapped;\n      currentLine += line.translateToString(!isWrapped);\n      if (!isWrapped || i === lines.length - 1) {\n        const div = document.createElement('div');\n        div.textContent = currentLine;\n        bufferElements.push(div);\n        if (currentLine.length > 0) {\n          cursorElement = div;\n        }\n        currentLine = '';\n      }\n    }\n    return { bufferElements, cursorElement };\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.rawOptions.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.rawOptions.fastScrollSensitivity * this._optionsService.rawOptions.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.rawOptions.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public handleTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public handleTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IInternalDecoration } from 'common/services/Services';\n\nexport class BufferDecorationRenderer extends Disposable {\n  private readonly _container: HTMLElement;\n  private readonly _decorationElements: Map<IInternalDecoration, HTMLElement> = new Map();\n\n  private _animationFrame: number | undefined;\n  private _altBufferIsActive: boolean = false;\n  private _dimensionsChanged: boolean = false;\n\n  constructor(\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    this._container = document.createElement('div');\n    this._container.classList.add('xterm-decoration-container');\n    this._screenElement.appendChild(this._container);\n\n    this.register(this._renderService.onRenderedViewportChange(() => this._doRefreshDecorations()));\n    this.register(this._renderService.onDimensionsChange(() => {\n      this._dimensionsChanged = true;\n      this._queueRefresh();\n    }));\n    this.register(addDisposableDomListener(window, 'resize', () => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._altBufferIsActive = this._bufferService.buffer === this._bufferService.buffers.alt;\n    }));\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh()));\n    this.register(this._decorationService.onDecorationRemoved(decoration => this._removeDecoration(decoration)));\n    this.register(toDisposable(() => {\n      this._container.remove();\n      this._decorationElements.clear();\n    }));\n  }\n\n  private _queueRefresh(): void {\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._renderService.addRefreshCallback(() => {\n      this._doRefreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n\n  private _doRefreshDecorations(): void {\n    for (const decoration of this._decorationService.decorations) {\n      this._renderDecoration(decoration);\n    }\n    this._dimensionsChanged = false;\n  }\n\n  private _renderDecoration(decoration: IInternalDecoration): void {\n    this._refreshStyle(decoration);\n    if (this._dimensionsChanged) {\n      this._refreshXPosition(decoration);\n    }\n  }\n\n  private _createElement(decoration: IInternalDecoration): HTMLElement {\n    const element = document.createElement('div');\n    element.classList.add('xterm-decoration');\n    element.classList.toggle('xterm-decoration-top-layer', decoration?.options?.layer === 'top');\n    element.style.width = `${Math.round((decoration.options.width || 1) * this._renderService.dimensions.css.cell.width)}px`;\n    element.style.height = `${(decoration.options.height || 1) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.top = `${(decoration.marker.line - this._bufferService.buffers.active.ydisp) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.lineHeight = `${this._renderService.dimensions.css.cell.height}px`;\n\n    const x = decoration.options.x ?? 0;\n    if (x && x > this._bufferService.cols) {\n      // exceeded the container width, so hide\n      element.style.display = 'none';\n    }\n    this._refreshXPosition(decoration, element);\n\n    return element;\n  }\n\n  private _refreshStyle(decoration: IInternalDecoration): void {\n    const line = decoration.marker.line - this._bufferService.buffers.active.ydisp;\n    if (line < 0 || line >= this._bufferService.rows) {\n      // outside of viewport\n      if (decoration.element) {\n        decoration.element.style.display = 'none';\n        decoration.onRenderEmitter.fire(decoration.element);\n      }\n    } else {\n      let element = this._decorationElements.get(decoration);\n      if (!element) {\n        element = this._createElement(decoration);\n        decoration.element = element;\n        this._decorationElements.set(decoration, element);\n        this._container.appendChild(element);\n        decoration.onDispose(() => {\n          this._decorationElements.delete(decoration);\n          element!.remove();\n        });\n      }\n      element.style.top = `${line * this._renderService.dimensions.css.cell.height}px`;\n      element.style.display = this._altBufferIsActive ? 'none' : 'block';\n      decoration.onRenderEmitter.fire(element);\n    }\n  }\n\n  private _refreshXPosition(decoration: IInternalDecoration, element: HTMLElement | undefined = decoration.element): void {\n    if (!element) {\n      return;\n    }\n    const x = decoration.options.x ?? 0;\n    if ((decoration.options.anchor || 'left') === 'right') {\n      element.style.right = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    } else {\n      element.style.left = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    }\n  }\n\n  private _removeDecoration(decoration: IInternalDecoration): void {\n    this._decorationElements.get(decoration)?.remove();\n    this._decorationElements.delete(decoration);\n    decoration.dispose();\n  }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInternalDecoration } from 'common/services/Services';\n\nexport interface IColorZoneStore {\n  readonly zones: IColorZone[];\n  clear(): void;\n  addDecoration(decoration: IInternalDecoration): void;\n  /**\n   * Sets the amount of padding in lines that will be added between zones, if new lines intersect\n   * the padding they will be merged into the same zone.\n   */\n  setPadding(padding: { [position: string]: number }): void;\n}\n\nexport interface IColorZone {\n  /** Color in a format supported by canvas' fillStyle. */\n  color: string;\n  position: 'full' | 'left' | 'center' | 'right' | undefined;\n  startBufferLine: number;\n  endBufferLine: number;\n}\n\ninterface IMinimalDecorationForColorZone {\n  marker: Pick<IInternalDecoration['marker'], 'line'>;\n  options: Pick<IInternalDecoration['options'], 'overviewRulerOptions'>;\n}\n\nexport class ColorZoneStore implements IColorZoneStore {\n  private _zones: IColorZone[] = [];\n\n  // The zone pool is used to keep zone objects from being freed between clearing the color zone\n  // store and fetching the zones. This helps reduce GC pressure since the color zones are\n  // accumulated on potentially every scroll event.\n  private _zonePool: IColorZone[] = [];\n  private _zonePoolIndex = 0;\n\n  private _linePadding: { [position: string]: number } = {\n    full: 0,\n    left: 0,\n    center: 0,\n    right: 0\n  };\n\n  public get zones(): IColorZone[] {\n    // Trim the zone pool to free unused memory\n    this._zonePool.length = Math.min(this._zonePool.length, this._zones.length);\n    return this._zones;\n  }\n\n  public clear(): void {\n    this._zones.length = 0;\n    this._zonePoolIndex = 0;\n  }\n\n  public addDecoration(decoration: IMinimalDecorationForColorZone): void {\n    if (!decoration.options.overviewRulerOptions) {\n      return;\n    }\n    for (const z of this._zones) {\n      if (z.color === decoration.options.overviewRulerOptions.color &&\n          z.position === decoration.options.overviewRulerOptions.position) {\n        if (this._lineIntersectsZone(z, decoration.marker.line)) {\n          return;\n        }\n        if (this._lineAdjacentToZone(z, decoration.marker.line, decoration.options.overviewRulerOptions.position)) {\n          this._addLineToZone(z, decoration.marker.line);\n          return;\n        }\n      }\n    }\n    // Create using zone pool if possible\n    if (this._zonePoolIndex < this._zonePool.length) {\n      this._zonePool[this._zonePoolIndex].color = decoration.options.overviewRulerOptions.color;\n      this._zonePool[this._zonePoolIndex].position = decoration.options.overviewRulerOptions.position;\n      this._zonePool[this._zonePoolIndex].startBufferLine = decoration.marker.line;\n      this._zonePool[this._zonePoolIndex].endBufferLine = decoration.marker.line;\n      this._zones.push(this._zonePool[this._zonePoolIndex++]);\n      return;\n    }\n    // Create\n    this._zones.push({\n      color: decoration.options.overviewRulerOptions.color,\n      position: decoration.options.overviewRulerOptions.position,\n      startBufferLine: decoration.marker.line,\n      endBufferLine: decoration.marker.line\n    });\n    this._zonePool.push(this._zones[this._zones.length - 1]);\n    this._zonePoolIndex++;\n  }\n\n  public setPadding(padding: { [position: string]: number }): void {\n    this._linePadding = padding;\n  }\n\n  private _lineIntersectsZone(zone: IColorZone, line: number): boolean {\n    return (\n      line >= zone.startBufferLine &&\n      line <= zone.endBufferLine\n    );\n  }\n\n  private _lineAdjacentToZone(zone: IColorZone, line: number, position: IColorZone['position']): boolean {\n    return (\n      (line >= zone.startBufferLine - this._linePadding[position || 'full']) &&\n      (line <= zone.endBufferLine + this._linePadding[position || 'full'])\n    );\n  }\n\n  private _addLineToZone(zone: IColorZone, line: number): void {\n    zone.startBufferLine = Math.min(zone.startBufferLine, line);\n    zone.endBufferLine = Math.max(zone.endBufferLine, line);\n  }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ColorZoneStore, IColorZone, IColorZoneStore } from 'browser/decorations/ColorZoneStore';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { ICoreBrowserService, IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\n// Helper objects to avoid excessive calculation and garbage collection during rendering. These are\n// static values for each render and can be accessed using the decoration position as the key.\nconst drawHeight = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawWidth = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawX = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\n\nexport class OverviewRulerRenderer extends Disposable {\n  private readonly _canvas: HTMLCanvasElement;\n  private readonly _ctx: CanvasRenderingContext2D;\n  private readonly _colorZoneStore: IColorZoneStore = new ColorZoneStore();\n  private get _width(): number {\n    return this._optionsService.options.overviewRulerWidth || 0;\n  }\n  private _animationFrame: number | undefined;\n\n  private _shouldUpdateDimensions: boolean | undefined = true;\n  private _shouldUpdateAnchor: boolean | undefined = true;\n  private _lastKnownBufferLength: number = 0;\n\n  private _containerHeight: number | undefined;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowseService: ICoreBrowserService\n  ) {\n    super();\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add('xterm-decoration-overview-ruler');\n    this._refreshCanvasDimensions();\n    this._viewportElement.parentElement?.insertBefore(this._canvas, this._viewportElement);\n    const ctx = this._canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Ctx cannot be null');\n    } else {\n      this._ctx = ctx;\n    }\n    this._registerDecorationListeners();\n    this._registerBufferChangeListeners();\n    this._registerDimensionChangeListeners();\n    this.register(toDisposable(() => {\n      this._canvas?.remove();\n    }));\n  }\n\n  /**\n   * On decoration add or remove, redraw\n   */\n  private _registerDecorationListeners(): void {\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh(undefined, true)));\n    this.register(this._decorationService.onDecorationRemoved(() => this._queueRefresh(undefined, true)));\n  }\n\n  /**\n   * On buffer change, redraw\n   * and hide the canvas if the alt buffer is active\n   */\n  private _registerBufferChangeListeners(): void {\n    this.register(this._renderService.onRenderedViewportChange(() => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._canvas!.style.display = this._bufferService.buffer === this._bufferService.buffers.alt ? 'none' : 'block';\n    }));\n    this.register(this._bufferService.onScroll(() => {\n      if (this._lastKnownBufferLength !== this._bufferService.buffers.normal.lines.length) {\n        this._refreshDrawHeightConstants();\n        this._refreshColorZonePadding();\n      }\n    }));\n  }\n  /**\n   * On dimension change, update canvas dimensions\n   * and then redraw\n   */\n  private _registerDimensionChangeListeners(): void {\n    // container height changed\n    this.register(this._renderService.onRender((): void => {\n      if (!this._containerHeight || this._containerHeight !== this._screenElement.clientHeight) {\n        this._queueRefresh(true);\n        this._containerHeight = this._screenElement.clientHeight;\n      }\n    }));\n    // overview ruler width changed\n    this.register(this._optionsService.onSpecificOptionChange('overviewRulerWidth', () => this._queueRefresh(true)));\n    // device pixel ratio changed\n    this.register(addDisposableDomListener(this._coreBrowseService.window, 'resize', () => this._queueRefresh(true)));\n    // set the canvas dimensions\n    this._queueRefresh(true);\n  }\n\n  private _refreshDrawConstants(): void {\n    // width\n    const outerWidth = Math.floor(this._canvas.width / 3);\n    const innerWidth = Math.ceil(this._canvas.width / 3);\n    drawWidth.full = this._canvas.width;\n    drawWidth.left = outerWidth;\n    drawWidth.center = innerWidth;\n    drawWidth.right = outerWidth;\n    // height\n    this._refreshDrawHeightConstants();\n    // x\n    drawX.full = 0;\n    drawX.left = 0;\n    drawX.center = drawWidth.left;\n    drawX.right = drawWidth.left + drawWidth.center;\n  }\n\n  private _refreshDrawHeightConstants(): void {\n    drawHeight.full = Math.round(2 * this._coreBrowseService.dpr);\n    // Calculate actual pixels per line\n    const pixelsPerLine = this._canvas.height / this._bufferService.buffer.lines.length;\n    // Clamp actual pixels within a range\n    const nonFullHeight = Math.round(Math.max(Math.min(pixelsPerLine, 12), 6) * this._coreBrowseService.dpr);\n    drawHeight.left = nonFullHeight;\n    drawHeight.center = nonFullHeight;\n    drawHeight.right = nonFullHeight;\n  }\n\n  private _refreshColorZonePadding(): void {\n    this._colorZoneStore.setPadding({\n      full: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.full),\n      left: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.left),\n      center: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.center),\n      right: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.right)\n    });\n    this._lastKnownBufferLength = this._bufferService.buffers.normal.lines.length;\n  }\n\n  private _refreshCanvasDimensions(): void {\n    this._canvas.style.width = `${this._width}px`;\n    this._canvas.width = Math.round(this._width * this._coreBrowseService.dpr);\n    this._canvas.style.height = `${this._screenElement.clientHeight}px`;\n    this._canvas.height = Math.round(this._screenElement.clientHeight * this._coreBrowseService.dpr);\n    this._refreshDrawConstants();\n    this._refreshColorZonePadding();\n  }\n\n  private _refreshDecorations(): void {\n    if (this._shouldUpdateDimensions) {\n      this._refreshCanvasDimensions();\n    }\n    this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    this._colorZoneStore.clear();\n    for (const decoration of this._decorationService.decorations) {\n      this._colorZoneStore.addDecoration(decoration);\n    }\n    this._ctx.lineWidth = 1;\n    const zones = this._colorZoneStore.zones;\n    for (const zone of zones) {\n      if (zone.position !== 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    for (const zone of zones) {\n      if (zone.position === 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    this._shouldUpdateDimensions = false;\n    this._shouldUpdateAnchor = false;\n  }\n\n  private _renderColorZone(zone: IColorZone): void {\n    this._ctx.fillStyle = zone.color;\n    this._ctx.fillRect(\n      /* x */ drawX[zone.position || 'full'],\n      /* y */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        (zone.startBufferLine / this._bufferService.buffers.active.lines.length) - drawHeight[zone.position || 'full'] / 2\n      ),\n      /* w */ drawWidth[zone.position || 'full'],\n      /* h */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        ((zone.endBufferLine - zone.startBufferLine) / this._bufferService.buffers.active.lines.length) + drawHeight[zone.position || 'full']\n      )\n    );\n  }\n\n  private _queueRefresh(updateCanvasDimensions?: boolean, updateAnchor?: boolean): void {\n    this._shouldUpdateDimensions = updateCanvasDimensions || this._shouldUpdateDimensions;\n    this._shouldUpdateAnchor = updateAnchor || this._shouldUpdateAnchor;\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._coreBrowseService.window.requestAnimationFrame(() => {\n      this._refreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\nimport { C0 } from 'common/data/EscapeSequences';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n  public get isComposing(): boolean { return this._isComposing; }\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Data already sent due to keydown event.\n   */\n  private _dataAlreadySent: string;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n    this._dataAlreadySent = '';\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._dataAlreadySent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: Pick<CompositionEvent, 'data'>): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @returns Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          // Add length of data already sent due to keydown event,\n          // otherwise input characters can be duplicated. (Issue #3191)\n          currentCompositionPosition.start += this._dataAlreadySent.length;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          if (input.length > 0) {\n            this._coreService.triggerDataEvent(input, true);\n          }\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n\n        const diff = newValue.replace(oldValue, '');\n\n        this._dataAlreadySent = diff;\n\n        if (newValue.length > oldValue.length) {\n          this._coreService.triggerDataEvent(diff, true);\n        } else if (newValue.length < oldValue.length) {\n          this._coreService.triggerDataEvent(`${C0.DEL}`, true);\n        } else if ((newValue.length === oldValue.length) && (newValue !== oldValue)) {\n          this._coreService.triggerDataEvent(newValue, true);\n        }\n\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n\n      const cellHeight = this._renderService.dimensions.css.cell.height;\n      const cursorTop = this._bufferService.buffer.y * this._renderService.dimensions.css.cell.height;\n      const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.rawOptions.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      // Ensure the text area is at least 1x1, otherwise certain IMEs may break\n      this._textarea.style.width = Math.max(compositionViewBounds.width, 1) + 'px';\n      this._textarea.style.height = Math.max(compositionViewBounds.height, 1) + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(window: Pick<Window, 'getComputedStyle'>, event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  const elementStyle = window.getComputedStyle(element);\n  const leftPadding = parseInt(elementStyle.getPropertyValue('padding-left'));\n  const topPadding = parseInt(elementStyle.getPropertyValue('padding-top'));\n  return [\n    event.clientX - rect.left - leftPadding,\n    event.clientY - rect.top - topPadding\n  ];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param window The window object the element belongs to.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param hasValidCharSize Whether there is a valid character size available.\n * @param cssCellWidth The cell width device pixel render dimensions.\n * @param cssCellHeight The cell height device pixel render dimensions.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(window: Pick<Window, 'getComputedStyle'>, event: Pick<MouseEvent, 'clientX' | 'clientY'>, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, cssCellWidth: number, cssCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(window, event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? cssCellWidth / 2 : 0)) / cssCellWidth);\n  coords[1] = Math.ceil(coords[1] / cssCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(startY, bufferService), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line?.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(currentRow: number, bufferService: IBufferService): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line?.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line?.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param str The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DomRendererRowFactory, RowCss } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { WidthCache } from 'browser/renderer/dom/WidthCache';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { createRenderDimensions } from 'browser/renderer/shared/RendererUtils';\nimport { IRenderDimensions, IRenderer, IRequestRedrawEvent } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { ILinkifier2, ILinkifierEvent, ReadonlyColorSet } from 'browser/Types';\nimport { color } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IInstantiationService, IOptionsService } from 'common/services/Services';\n\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n  private _widthCache: WidthCache;\n\n  public dimensions: IRenderDimensions;\n\n  public readonly onRequestRedraw = this.register(new EventEmitter<IRequestRedrawEvent>()).event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService private readonly _themeService: IThemeService\n  ) {\n    super();\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = createRenderDimensions();\n    this._updateDimensions();\n    this.register(this._optionsService.onOptionChange(() => this._handleOptionsChanged()));\n\n    this.register(this._themeService.onChangeColors(e => this._injectCss(e)));\n    this._injectCss(this._themeService.colors);\n\n    this._rowFactory = instantiationService.createInstance(DomRendererRowFactory, document);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this.register(this._linkifier2.onShowLinkUnderline(e => this._handleLinkHover(e)));\n    this.register(this._linkifier2.onHideLinkUnderline(e => this._handleLinkLeave(e)));\n\n    this.register(toDisposable(() => {\n      this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n\n      // Outside influences such as React unmounts may manipulate the DOM before our disposal.\n      // https://github.com/xtermjs/xterm.js/issues/2960\n      this._rowContainer.remove();\n      this._selectionContainer.remove();\n      this._widthCache.dispose();\n      this._themeStyleElement.remove();\n      this._dimensionsStyleElement.remove();\n    }));\n\n    this._widthCache = new WidthCache(document);\n    this._widthCache.setFont(\n      this._optionsService.rawOptions.fontFamily,\n      this._optionsService.rawOptions.fontSize,\n      this._optionsService.rawOptions.fontWeight,\n      this._optionsService.rawOptions.fontWeightBold\n    );\n    this._setDefaultSpacing();\n  }\n\n  private _updateDimensions(): void {\n    const dpr = this._coreBrowserService.dpr;\n    this.dimensions.device.char.width = this._charSizeService.width * dpr;\n    this.dimensions.device.char.height = Math.ceil(this._charSizeService.height * dpr);\n    this.dimensions.device.cell.width = this.dimensions.device.char.width + Math.round(this._optionsService.rawOptions.letterSpacing);\n    this.dimensions.device.cell.height = Math.floor(this.dimensions.device.char.height * this._optionsService.rawOptions.lineHeight);\n    this.dimensions.device.char.left = 0;\n    this.dimensions.device.char.top = 0;\n    this.dimensions.device.canvas.width = this.dimensions.device.cell.width * this._bufferService.cols;\n    this.dimensions.device.canvas.height = this.dimensions.device.cell.height * this._bufferService.rows;\n    this.dimensions.css.canvas.width = Math.round(this.dimensions.device.canvas.width / dpr);\n    this.dimensions.css.canvas.height = Math.round(this.dimensions.device.canvas.height / dpr);\n    this.dimensions.css.cell.width = this.dimensions.css.canvas.width / this._bufferService.cols;\n    this.dimensions.css.cell.height = this.dimensions.css.canvas.height / this._bufferService.rows;\n\n    for (const element of this._rowElements) {\n      element.style.width = `${this.dimensions.css.canvas.width}px`;\n      element.style.height = `${this.dimensions.css.cell.height}px`;\n      element.style.lineHeight = `${this.dimensions.css.cell.height}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    }\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +   // TODO: find workaround for inline-block (creates ~20% render penalty)\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      `}`;\n\n    this._dimensionsStyleElement.textContent = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.css.canvas.width}px`;\n    this._screenElement.style.height = `${this.dimensions.css.canvas.height}px`;\n  }\n\n  private _injectCss(colors: ReadonlyColorSet): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${colors.foreground.css};` +\n      ` font-family: ${this._optionsService.rawOptions.fontFamily};` +\n      ` font-size: ${this._optionsService.rawOptions.fontSize}px;` +\n      ` font-kerning: none;` +\n      ` white-space: pre` +\n      `}`;\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .xterm-dim {` +\n      ` color: ${color.multiplyOpacity(colors.foreground, 0.5).css};` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${RowCss.BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${RowCss.BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${RowCss.ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    styles +=\n      `@keyframes blink_box_shadow` + `_` + this._terminalClass + ` {` +\n      ` 50% {` +\n      `  border-bottom-style: hidden;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes blink_block` + `_` + this._terminalClass + ` {` +\n      ` 0% {` +\n      `  background-color: ${colors.cursor.css};` +\n      `  color: ${colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: inherit;` +\n      `  color: ${colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_BLINK_CLASS}:not(.${RowCss.CURSOR_STYLE_BLOCK_CLASS}) {` +\n      ` animation: blink_box_shadow` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_BLINK_CLASS}.${RowCss.CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: blink_block` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${colors.cursor.css};` +\n      ` color: ${colors.cursorAccent.css};` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_OUTLINE_CLASS} {` +\n      ` outline: 1px solid ${colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.rawOptions.cursorWidth}px 0 0 ${colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` border-bottom: 1px ${colors.cursor.css};` +\n      ` border-bottom-style: solid;` +\n      ` height: calc(100% - 1px);` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector}.focus .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionBackgroundOpaque.css};` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionInactiveBackgroundOpaque.css};` +\n      `}`;\n    // Colors\n    for (const [i, c] of colors.ansi.entries()) {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i}.${RowCss.DIM_CLASS} { color: ${color.multiplyOpacity(c, 0.5).css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    }\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(colors.background).css}; }` +\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR}.${RowCss.DIM_CLASS} { color: ${color.multiplyOpacity(color.opaque(colors.background), 0.5).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${colors.foreground.css}; }`;\n\n    this._themeStyleElement.textContent = styles;\n  }\n\n  /**\n   * default letter spacing\n   * Due to rounding issues in dimensions dpr calc glyph might render\n   * slightly too wide or too narrow. The method corrects the stacking offsets\n   * by applying a default letter-spacing for all chars.\n   * The value gets passed to the row factory to avoid setting this value again\n   * (render speedup is roughly 10%).\n   */\n  private _setDefaultSpacing(): void {\n    // measure same char as in CharSizeService to get the base deviation\n    const spacing = this.dimensions.css.cell.width - this._widthCache.get('W', false, false);\n    this._rowContainer.style.letterSpacing = `${spacing}px`;\n    this._rowFactory.defaultSpacing = spacing;\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    this._updateDimensions();\n    this._widthCache.clear();\n    this._setDefaultSpacing();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public handleCharSizeChanged(): void {\n    this._updateDimensions();\n    this._widthCache.clear();\n    this._setDefaultSpacing();\n  }\n\n  public handleBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public handleFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n    this.renderRows(this._bufferService.buffer.y, this._bufferService.buffer.y);\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Remove all selections\n    this._selectionContainer.replaceChildren();\n    this._rowFactory.handleSelectionChanged(start, end, columnSelectMode);\n    this.renderRows(0, this._bufferService.rows - 1);\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      const isXFlipped = start[0] > end[0];\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, isXFlipped ? end[0] : start[0], isXFlipped ? start[0] : end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.css.cell.height}px`;\n    element.style.top = `${row * this.dimensions.css.cell.height}px`;\n    element.style.left = `${colStart * this.dimensions.css.cell.width}px`;\n    element.style.width = `${this.dimensions.css.cell.width * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public handleCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  private _handleOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    // Refresh CSS\n    this._injectCss(this._themeService.colors);\n    // update spacing cache\n    this._widthCache.setFont(\n      this._optionsService.rawOptions.fontFamily,\n      this._optionsService.rawOptions.fontSize,\n      this._optionsService.rawOptions.fontWeight,\n      this._optionsService.rawOptions.fontWeightBold\n    );\n    this._setDefaultSpacing();\n  }\n\n  public clear(): void {\n    for (const e of this._rowElements) {\n      /**\n       * NOTE: This used to be `e.innerText = '';` but that doesn't work when using `jsdom` and\n       * `@testing-library/react`\n       *\n       * references:\n       * - https://github.com/testing-library/react-testing-library/issues/1146\n       * - https://github.com/jsdom/jsdom/issues/1245\n       */\n      e.replaceChildren();\n    }\n  }\n\n  public renderRows(start: number, end: number): void {\n    const buffer = this._bufferService.buffer;\n    const cursorAbsoluteY = buffer.ybase + buffer.y;\n    const cursorX = Math.min(buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n    const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n    const cursorInactiveStyle = this._optionsService.rawOptions.cursorInactiveStyle;\n\n    for (let y = start; y <= end; y++) {\n      const row = y + buffer.ydisp;\n      const rowElement = this._rowElements[y];\n      const lineData = buffer.lines.get(row);\n      if (!rowElement || !lineData) {\n        break;\n      }\n      rowElement.replaceChildren(\n        ...this._rowFactory.createRow(\n          lineData,\n          row,\n          row === cursorAbsoluteY,\n          cursorStyle,\n          cursorInactiveStyle,\n          cursorX,\n          cursorBlink,\n          this.dimensions.css.cell.width,\n          this._widthCache,\n          -1,\n          -1\n        )\n      );\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  private _handleLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _handleLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    /**\n     * NOTE: The linkifier may send out of viewport y-values if:\n     * - negative y-value: the link started at a higher line\n     * - y-value >= maxY: the link ends at a line below viewport\n     *\n     * For negative y-values we can simply adjust x = 0,\n     * as higher up link start means, that everything from\n     * (0,0) is a link under top-down-left-right char progression\n     *\n     * Additionally there might be a small chance of out-of-sync x|y-values\n     * from a race condition of render updates vs. link event handler execution:\n     * - (sync) resize: chances terminal buffer in sync, schedules render update async\n     * - (async) link handler race condition: new buffer metrics, but still on old render state\n     * - (async) render update: brings term metrics and render state back in sync\n     */\n    // clip coords into viewport\n    if (y < 0) x = 0;\n    if (y2 < 0) x2 = 0;\n    const maxY = this._bufferService.rows - 1;\n    y = Math.max(Math.min(y, maxY), 0);\n    y2 = Math.max(Math.min(y2, maxY), 0);\n\n    cols = Math.min(cols, this._bufferService.cols);\n    const buffer = this._bufferService.buffer;\n    const cursorAbsoluteY = buffer.ybase + buffer.y;\n    const cursorX = Math.min(buffer.x, cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n    const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n    const cursorInactiveStyle = this._optionsService.rawOptions.cursorInactiveStyle;\n\n    // refresh rows within link range\n    for (let i = y; i <= y2; ++i) {\n      const row = i + buffer.ydisp;\n      const rowElement = this._rowElements[i];\n      const bufferline = buffer.lines.get(row);\n      if (!rowElement || !bufferline) {\n        break;\n      }\n      rowElement.replaceChildren(\n        ...this._rowFactory.createRow(\n          bufferline,\n          row,\n          row === cursorAbsoluteY,\n          cursorStyle,\n          cursorInactiveStyle,\n          cursorX,\n          cursorBlink,\n          this.dimensions.css.cell.width,\n          this._widthCache,\n          enabled ? (i === y ? x : 0) : -1,\n          enabled ? ((i === y2 ? x2 : cols) - 1) : -1\n        )\n      );\n    }\n  }\n}\n", "/**\n * Copyright (c) 2018, 2023 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, IColor } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { ICoreService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { color, rgba } from 'common/Color';\nimport { ICharacterJoinerService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\nimport { excludeFromContrastRatioDemands } from 'browser/renderer/shared/RendererUtils';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WidthCache } from 'browser/renderer/dom/WidthCache';\nimport { IColorContrastCache } from 'browser/Types';\n\n\nexport const enum RowCss {\n  BOLD_CLASS = 'xterm-bold',\n  DIM_CLASS = 'xterm-dim',\n  ITALIC_CLASS = 'xterm-italic',\n  UNDERLINE_CLASS = 'xterm-underline',\n  OVERLINE_CLASS = 'xterm-overline',\n  STRIKETHROUGH_CLASS = 'xterm-strikethrough',\n  CURSOR_CLASS = 'xterm-cursor',\n  CURSOR_BLINK_CLASS = 'xterm-cursor-blink',\n  CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block',\n  CURSOR_STYLE_OUTLINE_CLASS = 'xterm-cursor-outline',\n  CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar',\n  CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline'\n}\n\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  private _selectionStart: [number, number] | undefined;\n  private _selectionEnd: [number, number] | undefined;\n  private _columnSelectMode: boolean = false;\n\n  public defaultSpacing = 0;\n\n  constructor(\n    private readonly _document: Document,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IThemeService private readonly _themeService: IThemeService\n  ) {}\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionStart = start;\n    this._selectionEnd = end;\n    this._columnSelectMode = columnSelectMode;\n  }\n\n  public createRow(\n    lineData: IBufferLine,\n    row: number,\n    isCursorRow: boolean,\n    cursorStyle: string | undefined,\n    cursorInactiveStyle: string | undefined,\n    cursorX: number,\n    cursorBlink: boolean,\n    cellWidth: number,\n    widthCache: WidthCache,\n    linkStart: number,\n    linkEnd: number\n  ): HTMLSpanElement[] {\n\n    const elements: HTMLSpanElement[] = [];\n    const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n    const colors = this._themeService.colors;\n\n    let lineLength = lineData.getNoBgTrimmedLength();\n    if (isCursorRow && lineLength < cursorX + 1) {\n      lineLength = cursorX + 1;\n    }\n\n    let charElement: HTMLSpanElement | undefined;\n    let cellAmount = 0;\n    let text = '';\n    let oldBg = 0;\n    let oldFg = 0;\n    let oldExt = 0;\n    let oldLinkHover: number | boolean = false;\n    let oldSpacing = 0;\n    let oldIsInSelection: boolean = false;\n    let spacing = 0;\n    const classes: string[] = [];\n\n    const hasHover = linkStart !== -1 && linkEnd !== -1;\n\n    for (let x = 0; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      let width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      // If true, indicates that the current character(s) to draw were joined.\n      let isJoined = false;\n      let lastCharX = x;\n\n      // Process any joined character ranges as needed. Because of how the\n      // ranges are produced, we know that they are valid for the characters\n      // and attributes of our input.\n      let cell = this._workCell;\n      if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n        isJoined = true;\n        const range = joinedRanges.shift()!;\n\n        // We already know the exact start and end column of the joined range,\n        // so we get the string and width representing it directly\n        cell = new JoinedCellData(\n          this._workCell,\n          lineData.translateToString(true, range[0], range[1]),\n          range[1] - range[0]\n        );\n\n        // Skip over the cells occupied by this range in the loop\n        lastCharX = range[1] - 1;\n\n        // Recalculate width\n        width = cell.getWidth();\n      }\n\n      const isInSelection = this._isCellInSelection(x, row);\n      const isCursorCell = isCursorRow && x === cursorX;\n      const isLinkHover = hasHover && x >= linkStart && x <= linkEnd;\n\n      let isDecorated = false;\n      this._decorationService.forEachDecorationAtCell(x, row, undefined, d => {\n        isDecorated = true;\n      });\n\n      // get chars to render for this cell\n      let chars = cell.getChars() || WHITESPACE_CELL_CHAR;\n      if (chars === ' ' && (cell.isUnderline() || cell.isOverline())) {\n        chars = '\\xa0';\n      }\n\n      // lookup char render width and calc spacing\n      spacing = width * cellWidth - widthCache.get(chars, cell.isBold(), cell.isItalic());\n\n      if (!charElement) {\n        charElement = this._document.createElement('span');\n      } else {\n        /**\n         * chars can only be merged on existing span if:\n         * - existing span only contains mergeable chars (cellAmount != 0)\n         * - bg did not change (or both are in selection)\n         * - fg did not change (or both are in selection and selection fg is set)\n         * - ext did not change\n         * - underline from hover state did not change\n         * - cell content renders to same letter-spacing\n         * - cell is not cursor\n         */\n        if (\n          cellAmount\n          && (\n            (isInSelection && oldIsInSelection)\n            || (!isInSelection && !oldIsInSelection && cell.bg === oldBg)\n          )\n          && (\n            (isInSelection && oldIsInSelection && colors.selectionForeground)\n            || cell.fg === oldFg\n          )\n          && cell.extended.ext === oldExt\n          && isLinkHover === oldLinkHover\n          && spacing === oldSpacing\n          && !isCursorCell\n          && !isJoined\n          && !isDecorated\n        ) {\n          // no span alterations, thus only account chars skipping all code below\n          text += chars;\n          cellAmount++;\n          continue;\n        } else {\n          /**\n           * cannot merge:\n           * - apply left-over text to old span\n           * - create new span, reset state holders cellAmount & text\n           */\n          if (cellAmount) {\n            charElement.textContent = text;\n          }\n          charElement = this._document.createElement('span');\n          cellAmount = 0;\n          text = '';\n        }\n      }\n      // preserve conditions for next merger eval round\n      oldBg = cell.bg;\n      oldFg = cell.fg;\n      oldExt = cell.extended.ext;\n      oldLinkHover = isLinkHover;\n      oldSpacing = spacing;\n      oldIsInSelection = isInSelection;\n\n      if (isJoined) {\n        // The DOM renderer colors the background of the cursor but for ligatures all cells are\n        // joined. The workaround here is to show a cursor around the whole ligature so it shows up,\n        // the cursor looks the same when on any character of the ligature though\n        if (cursorX >= x && cursorX <= lastCharX) {\n          cursorX = x;\n        }\n      }\n\n      if (!this._coreService.isCursorHidden && isCursorCell) {\n        classes.push(RowCss.CURSOR_CLASS);\n        if (this._coreBrowserService.isFocused) {\n          if (cursorBlink) {\n            classes.push(RowCss.CURSOR_BLINK_CLASS);\n          }\n          classes.push(\n            cursorStyle === 'bar'\n              ? RowCss.CURSOR_STYLE_BAR_CLASS\n              : cursorStyle === 'underline'\n                ? RowCss.CURSOR_STYLE_UNDERLINE_CLASS\n                : RowCss.CURSOR_STYLE_BLOCK_CLASS\n          );\n        } else {\n          if (cursorInactiveStyle) {\n            switch (cursorInactiveStyle) {\n              case 'outline':\n                classes.push(RowCss.CURSOR_STYLE_OUTLINE_CLASS);\n                break;\n              case 'block':\n                classes.push(RowCss.CURSOR_STYLE_BLOCK_CLASS);\n                break;\n              case 'bar':\n                classes.push(RowCss.CURSOR_STYLE_BAR_CLASS);\n                break;\n              case 'underline':\n                classes.push(RowCss.CURSOR_STYLE_UNDERLINE_CLASS);\n                break;\n              default:\n                break;\n            }\n          }\n        }\n      }\n\n      if (cell.isBold()) {\n        classes.push(RowCss.BOLD_CLASS);\n      }\n\n      if (cell.isItalic()) {\n        classes.push(RowCss.ITALIC_CLASS);\n      }\n\n      if (cell.isDim()) {\n        classes.push(RowCss.DIM_CLASS);\n      }\n\n      if (cell.isInvisible()) {\n        text = WHITESPACE_CELL_CHAR;\n      } else {\n        text = cell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      if (cell.isUnderline()) {\n        classes.push(`${RowCss.UNDERLINE_CLASS}-${cell.extended.underlineStyle}`);\n        if (text === ' ') {\n          text = '\\xa0'; // = &nbsp;\n        }\n        if (!cell.isUnderlineColorDefault()) {\n          if (cell.isUnderlineColorRGB()) {\n            charElement.style.textDecorationColor = `rgb(${AttributeData.toColorRGB(cell.getUnderlineColor()).join(',')})`;\n          } else {\n            let fg = cell.getUnderlineColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            charElement.style.textDecorationColor = colors.ansi[fg].css;\n          }\n        }\n      }\n\n      if (cell.isOverline()) {\n        classes.push(RowCss.OVERLINE_CLASS);\n        if (text === ' ') {\n          text = '\\xa0'; // = &nbsp;\n        }\n      }\n\n      if (cell.isStrikethrough()) {\n        classes.push(RowCss.STRIKETHROUGH_CLASS);\n      }\n\n      // apply link hover underline late, effectively overrides any previous text-decoration\n      // settings\n      if (isLinkHover) {\n        charElement.style.textDecoration = 'underline';\n      }\n\n      let fg = cell.getFgColor();\n      let fgColorMode = cell.getFgColorMode();\n      let bg = cell.getBgColor();\n      let bgColorMode = cell.getBgColorMode();\n      const isInverse = !!cell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Apply any decoration foreground/background overrides, this must happen after inverse has\n      // been applied\n      let bgOverride: IColor | undefined;\n      let fgOverride: IColor | undefined;\n      let isTop = false;\n      this._decorationService.forEachDecorationAtCell(x, row, undefined, d => {\n        if (d.options.layer !== 'top' && isTop) {\n          return;\n        }\n        if (d.backgroundColorRGB) {\n          bgColorMode = Attributes.CM_RGB;\n          bg = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          bgOverride = d.backgroundColorRGB;\n        }\n        if (d.foregroundColorRGB) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          fgOverride = d.foregroundColorRGB;\n        }\n        isTop = d.options.layer === 'top';\n      });\n\n      // Apply selection\n      if (!isTop && isInSelection) {\n        // If in the selection, force the element to be above the selection to improve contrast and\n        // support opaque selections. The applies background is not actually needed here as\n        // selection is drawn in a seperate container, the main purpose of this to ensuring minimum\n        // contrast ratio\n        bgOverride = this._coreBrowserService.isFocused ? colors.selectionBackgroundOpaque : colors.selectionInactiveBackgroundOpaque;\n        bg = bgOverride.rgba >> 8 & 0xFFFFFF;\n        bgColorMode = Attributes.CM_RGB;\n        // Since an opaque selection is being rendered, the selection pretends to be a decoration to\n        // ensure text is drawn above the selection.\n        isTop = true;\n        // Apply selection foreground if applicable\n        if (colors.selectionForeground) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = colors.selectionForeground.rgba >> 8 & 0xFFFFFF;\n          fgOverride = colors.selectionForeground;\n        }\n      }\n\n      // If it's a top decoration, render above the selection\n      if (isTop) {\n        classes.push('xterm-decoration-top');\n      }\n\n      // Background\n      let resolvedBg: IColor;\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          resolvedBg = colors.ansi[bg];\n          classes.push(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          resolvedBg = rgba.toColor(bg >> 16, bg >> 8 & 0xFF, bg & 0xFF);\n          this._addStyle(charElement, `background-color:#${padStart((bg >>> 0).toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            resolvedBg = colors.foreground;\n            classes.push(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          } else {\n            resolvedBg = colors.background;\n          }\n      }\n\n      // If there is no background override by now it's the original color, so apply dim if needed\n      if (!bgOverride) {\n        if (cell.isDim()) {\n          bgOverride = color.multiplyOpacity(resolvedBg, 0.5);\n        }\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (cell.isBold() && fg < 8 && this._optionsService.rawOptions.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.ansi[fg], cell, bgOverride, undefined)) {\n            classes.push(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = rgba.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, resolvedBg, color, cell, bgOverride, fgOverride)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.foreground, cell, bgOverride, undefined)) {\n            if (isInverse) {\n              classes.push(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      // apply CSS classes\n      // slightly faster than using classList by omitting\n      // checks for doubled entries (code above should not have doublets)\n      if (classes.length) {\n        charElement.className = classes.join(' ');\n        classes.length = 0;\n      }\n\n      // exclude conditions for cell merging - never merge these\n      if (!isCursorCell && !isJoined && !isDecorated) {\n        cellAmount++;\n      } else {\n        charElement.textContent = text;\n      }\n      // apply letter-spacing rule\n      if (spacing !== this.defaultSpacing) {\n        charElement.style.letterSpacing = `${spacing}px`;\n      }\n\n      elements.push(charElement);\n      x = lastCharX;\n    }\n\n    // postfix text of last merged span\n    if (charElement && cellAmount) {\n      charElement.textContent = text;\n    }\n\n    return elements;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor, cell: ICellData, bgOverride: IColor | undefined, fgOverride: IColor | undefined): boolean {\n    if (this._optionsService.rawOptions.minimumContrastRatio === 1 || excludeFromContrastRatioDemands(cell.getCode())) {\n      return false;\n    }\n\n    // Try get from cache first, only use the cache when there are no decoration overrides\n    const cache = this._getContrastCache(cell);\n    let adjustedColor: IColor | undefined | null = undefined;\n    if (!bgOverride && !fgOverride) {\n      adjustedColor = cache.getColor(bg.rgba, fg.rgba);\n    }\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      // Dim cells only require half the contrast, otherwise they wouldn't be distinguishable from\n      // non-dim cells\n      const ratio = this._optionsService.rawOptions.minimumContrastRatio / (cell.isDim() ? 2 : 1);\n      adjustedColor = color.ensureContrastRatio(bgOverride || bg, fgOverride || fg, ratio);\n      cache.setColor((bgOverride || bg).rgba, (fgOverride || fg).rgba, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _getContrastCache(cell: ICellData): IColorContrastCache {\n    if (cell.isDim()) {\n      return this._themeService.colors.halfContrastCache;\n    }\n    return this._themeService.colors.contrastCache;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n\n  private _isCellInSelection(x: number, y: number): boolean {\n    const start = this._selectionStart;\n    const end = this._selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    if (this._columnSelectMode) {\n      if (start[0] <= end[0]) {\n        return x >= start[0] && y >= start[1] &&\n          x < end[0] && y <= end[1];\n      }\n      return x < start[0] && y >= start[1] &&\n        x >= end[0] && y <= end[1];\n    }\n    return (y > start[1] && y < end[1]) ||\n        (start[1] === end[1] && y === start[1] && x >= start[0] && x < end[0]) ||\n        (start[1] < end[1] && y === end[1] && x < end[0]) ||\n        (start[1] < end[1] && y === start[1] && x >= start[0]);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n", "/**\n * Copyright (c) 2023 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { FontWeight } from 'common/services/Services';\n\n\nexport const enum WidthCacheSettings {\n  /** sentinel for unset values in flat cache */\n  FLAT_UNSET = -9999,\n  /** size of flat cache, size-1 equals highest codepoint handled by flat */\n  FLAT_SIZE = 256,\n  /** char repeat for measuring */\n  REPEAT = 32\n}\n\n\nconst enum FontVariant {\n  REGULAR = 0,\n  BOLD = 1,\n  ITALIC = 2,\n  BOLD_ITALIC = 3\n}\n\n\nexport class WidthCache implements IDisposable {\n  // flat cache for regular variant up to CacheSettings.FLAT_SIZE\n  // NOTE: ~4x faster access than holey (serving >>80% of terminal content)\n  //       It has a small memory footprint (only 1MB for full BMP caching),\n  //       still the sweet spot is not reached before touching 32k different codepoints,\n  //       thus we store the remaining <<20% of terminal data in a holey structure.\n  protected _flat = new Float32Array(WidthCacheSettings.FLAT_SIZE);\n\n  // holey cache for bold, italic and bold&italic for any string\n  // FIXME: can grow really big over time (~8.5 MB for full BMP caching),\n  //        so a shared API across terminals is needed\n  protected _holey: Map<string, number> | undefined;\n\n  private _font = '';\n  private _fontSize = 0;\n  private _weight: FontWeight = 'normal';\n  private _weightBold: FontWeight = 'bold';\n  private _container: HTMLDivElement;\n  private _measureElements: HTMLSpanElement[] = [];\n\n  constructor(_document: Document) {\n    this._container = _document.createElement('div');\n    this._container.style.position = 'absolute';\n    this._container.style.top = '-50000px';\n    this._container.style.width = '50000px';\n    // SP should stack in spans\n    this._container.style.whiteSpace = 'pre';\n    // avoid undercuts in non-monospace fonts from kerning\n    this._container.style.fontKerning = 'none';\n\n    const regular = _document.createElement('span');\n\n    const bold = _document.createElement('span');\n    bold.style.fontWeight = 'bold';\n\n    const italic = _document.createElement('span');\n    italic.style.fontStyle = 'italic';\n\n    const boldItalic = _document.createElement('span');\n    boldItalic.style.fontWeight = 'bold';\n    boldItalic.style.fontStyle = 'italic';\n\n    // NOTE: must be in order of FontVariant\n    this._measureElements = [regular, bold, italic, boldItalic];\n    this._container.appendChild(regular);\n    this._container.appendChild(bold);\n    this._container.appendChild(italic);\n    this._container.appendChild(boldItalic);\n\n    _document.body.appendChild(this._container);\n\n    this.clear();\n  }\n\n  public dispose(): void {\n    this._container.remove();           // remove elements from DOM\n    this._measureElements.length = 0;   // release element refs\n    this._holey = undefined;            // free cache memory via GC\n  }\n\n  /**\n   * Clear the width cache.\n   */\n  public clear(): void {\n    this._flat.fill(WidthCacheSettings.FLAT_UNSET);\n    // .clear() has some overhead, re-assign instead (>3 times faster)\n    this._holey = new Map<string, number>();\n  }\n\n  /**\n   * Set the font for measuring.\n   * Must be called for any changes on font settings.\n   * Also clears the cache.\n   */\n  public setFont(font: string, fontSize: number, weight: FontWeight, weightBold: FontWeight): void {\n    // skip if nothing changed\n    if (font === this._font\n      && fontSize === this._fontSize\n      && weight === this._weight\n      && weightBold === this._weightBold\n    ) {\n      return;\n    }\n\n    this._font = font;\n    this._fontSize = fontSize;\n    this._weight = weight;\n    this._weightBold = weightBold;\n\n    this._container.style.fontFamily = this._font;\n    this._container.style.fontSize = `${this._fontSize}px`;\n    this._measureElements[FontVariant.REGULAR].style.fontWeight = `${weight}`;\n    this._measureElements[FontVariant.BOLD].style.fontWeight = `${weightBold}`;\n    this._measureElements[FontVariant.ITALIC].style.fontWeight = `${weight}`;\n    this._measureElements[FontVariant.BOLD_ITALIC].style.fontWeight = `${weightBold}`;\n\n    this.clear();\n  }\n\n  /**\n   * Get the render width for cell content `c` with current font settings.\n   * `variant` denotes the font variant to be used.\n   */\n  public get(c: string, bold: boolean | number, italic: boolean | number): number {\n    let cp = 0;\n    if (!bold && !italic && c.length === 1 && (cp = c.charCodeAt(0)) < WidthCacheSettings.FLAT_SIZE) {\n      return this._flat[cp] !== WidthCacheSettings.FLAT_UNSET\n        ? this._flat[cp]\n        : (this._flat[cp] = this._measure(c, 0));\n    }\n    let key = c;\n    if (bold) key += 'B';\n    if (italic) key += 'I';\n    let width = this._holey!.get(key);\n    if (width === undefined) {\n      let variant = 0;\n      if (bold) variant |= FontVariant.BOLD;\n      if (italic) variant |= FontVariant.ITALIC;\n      width = this._measure(c, variant);\n      this._holey!.set(key, width);\n    }\n    return width;\n  }\n\n  protected _measure(c: string, variant: FontVariant): number {\n    const el = this._measureElements[variant];\n    el.textContent = c.repeat(WidthCacheSettings.REPEAT);\n    return el.offsetWidth / WidthCacheSettings.REPEAT;\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox, isLegacyEdge } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\n\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox or Legacy Edge\n// would result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox || isLegacyEdge ? 'bottom' : 'ideographic';\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDimensions, IRenderDimensions } from 'browser/renderer/shared/Types';\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n\nexport function isPowerlineGlyph(codepoint: number): boolean {\n  // Only return true for Powerline symbols which require\n  // different padding and should be excluded from minimum contrast\n  // ratio standards\n  return 0xE0A4 <= codepoint && codepoint <= 0xE0D6;\n}\n\nexport function isRestrictedPowerlineGlyph(codepoint: number): boolean {\n  return 0xE0B0 <= codepoint && codepoint <= 0xE0B7;\n}\n\nfunction isBoxOrBlockGlyph(codepoint: number): boolean {\n  return 0x2500 <= codepoint && codepoint <= 0x259F;\n}\n\nexport function excludeFromContrastRatioDemands(codepoint: number): boolean {\n  return isPowerlineGlyph(codepoint) || isBoxOrBlockGlyph(codepoint);\n}\n\nexport function createRenderDimensions(): IRenderDimensions {\n  return {\n    css: {\n      canvas: createDimension(),\n      cell: createDimension()\n    },\n    device: {\n      canvas: createDimension(),\n      cell: createDimension(),\n      char: {\n        width: 0,\n        height: 0,\n        left: 0,\n        top: 0\n      }\n    }\n  };\n}\n\nfunction createDimension(): IDimensions {\n  return {\n    width: 0,\n    height: 0\n  };\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        // Ensure the trailing EOL isn't included when the selection ends on the right edge\n        if (startPlusLength % this._bufferService.cols === 0) {\n          return [this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols) - 1];\n        }\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        // Keep the whole wrapped word/line selected if the content wraps multiple lines\n        const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n        if (startPlusLength > this._bufferService.cols) {\n          return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n        }\n        return [Math.max(startPlusLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @returns Whether a refresh is necessary.\n   */\n  public handleTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { Disposable } from 'common/Lifecycle';\n\n\nconst enum MeasureSettings {\n  REPEAT = 32\n}\n\n\nexport class CharSizeService extends Disposable implements ICharSizeService {\n  public serviceBrand: undefined;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private readonly _onCharSizeChange = this.register(new EventEmitter<void>());\n  public readonly onCharSizeChange = this._onCharSizeChange.event;\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n    this.register(this._optionsService.onMultipleOptionChange(['fontFamily', 'fontSize'], () => this.measure()));\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses\n// ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W'.repeat(MeasureSettings.REPEAT);\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._measureElement.style.whiteSpace = 'pre';\n    this._measureElement.style.fontKerning = 'none';\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.rawOptions.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = {\n      height: Number(this._measureElement.offsetHeight),\n      width: Number(this._measureElement.offsetWidth)\n    };\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width / MeasureSettings.REPEAT;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoiner } from 'browser/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerService implements ICharacterJoinerService {\n  public serviceBrand: undefined;\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    @IBufferService private _bufferService: IBufferService\n  ) { }\n\n  public register(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregister(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    let allJoinedRanges: [number, number][] = [];\n    try {\n      allJoinedRanges = this._characterJoiners[0].handler(text);\n    } catch (error) {\n      console.error(error);\n    }\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      try {\n        const joinerRanges = this._characterJoiners[i].handler(text);\n        for (let j = 0; j < joinerRanges.length; j++) {\n          CharacterJoinerService._mergeRanges(allJoinedRanges, joinerRanges[j]);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    this._stringRangesToCellRanges(allJoinedRanges, lineData, startCol);\n    return allJoinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreBrowserService } from './Services';\n\nexport class CoreBrowserService implements ICoreBrowserService {\n  public serviceBrand: undefined;\n\n  private _isFocused = false;\n  private _cachedIsFocused: boolean | undefined = undefined;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement,\n    public readonly window: Window & typeof globalThis\n  ) {\n    this._textarea.addEventListener('focus', () => this._isFocused = true);\n    this._textarea.addEventListener('blur', () => this._isFocused = false);\n  }\n\n  public get dpr(): number {\n    return this.window.devicePixelRatio;\n  }\n\n  public get isFocused(): boolean {\n    if (this._cachedIsFocused === undefined) {\n      this._cachedIsFocused = this._isFocused && this._textarea.ownerDocument.hasFocus();\n      queueMicrotask(() => this._cachedIsFocused = undefined);\n    }\n    return this._cachedIsFocused;\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getCoordsRelativeToElement } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  public serviceBrand: undefined;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      window,\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.css.cell.width,\n      this._renderService.dimensions.css.cell.height,\n      isSelection\n    );\n  }\n\n  public getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined {\n    const coords = getCoordsRelativeToElement(window, event, element);\n    if (!this._charSizeService.hasValidSize) {\n      return undefined;\n    }\n    coords[0] = Math.min(Math.max(coords[0], 0), this._renderService.dimensions.css.canvas.width - 1);\n    coords[1] = Math.min(Math.max(coords[1], 0), this._renderService.dimensions.css.canvas.height - 1);\n    return {\n      col: Math.floor(coords[0] / this._renderService.dimensions.css.cell.width),\n      row: Math.floor(coords[1] / this._renderService.dimensions.css.cell.height),\n      x: Math.floor(coords[0]),\n      y: Math.floor(coords[1])\n    };\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, MutableDisposable } from 'common/Lifecycle';\nimport { DebouncedIdleTask } from 'common/TaskQueue';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\ninterface ISelectionState {\n  start: [number, number] | undefined;\n  end: [number, number] | undefined;\n  columnSelectMode: boolean;\n}\n\nexport class RenderService extends Disposable implements IRenderService {\n  public serviceBrand: undefined;\n\n  private _renderer: MutableDisposable<IRenderer> = this.register(new MutableDisposable());\n  private _renderDebouncer: IRenderDebouncerWithCallback;\n  private _screenDprMonitor: ScreenDprMonitor;\n  private _pausedResizeTask = new DebouncedIdleTask();\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _isNextRenderRedrawOnly: boolean = true;\n  private _needsSelectionRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n  private _selectionState: ISelectionState = {\n    start: undefined,\n    end: undefined,\n    columnSelectMode: false\n  };\n\n  private readonly _onDimensionsChange = this.register(new EventEmitter<IRenderDimensions>());\n  public readonly onDimensionsChange =  this._onDimensionsChange.event;\n  private readonly _onRenderedViewportChange = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRenderedViewportChange = this._onRenderedViewportChange.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onRefreshRequest = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRefreshRequest = this._onRefreshRequest.event;\n\n  public get dimensions(): IRenderDimensions { return this._renderer.value!.dimensions; }\n\n  constructor(\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IDecorationService decorationService: IDecorationService,\n    @IBufferService bufferService: IBufferService,\n    @ICoreBrowserService coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    this._renderDebouncer = new RenderDebouncer(coreBrowserService.window, (start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor(coreBrowserService.window);\n    this._screenDprMonitor.setListener(() => this.handleDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(bufferService.onResize(() => this._fullRefresh()));\n    this.register(bufferService.buffers.onBufferActivate(() => this._renderer.value?.clear()));\n    this.register(optionsService.onOptionChange(() => this._handleOptionsChanged()));\n    this.register(this._charSizeService.onCharSizeChange(() => this.handleCharSizeChanged()));\n\n    // Do a full refresh whenever any decoration is added or removed. This may not actually result\n    // in changes but since decorations should be used sparingly or added/removed all in the same\n    // frame this should have minimal performance impact.\n    this.register(decorationService.onDecorationRegistered(() => this._fullRefresh()));\n    this.register(decorationService.onDecorationRemoved(() => this._fullRefresh()));\n\n    // Clear the renderer when the a change that could affect glyphs occurs\n    this.register(optionsService.onMultipleOptionChange([\n      'customGlyphs',\n      'drawBoldTextInBrightColors',\n      'letterSpacing',\n      'lineHeight',\n      'fontFamily',\n      'fontSize',\n      'fontWeight',\n      'fontWeightBold',\n      'minimumContrastRatio'\n    ], () => {\n      this.clear();\n      this.handleResize(bufferService.cols, bufferService.rows);\n      this._fullRefresh();\n    }));\n\n    // Refresh the cursor line when the cursor changes\n    this.register(optionsService.onMultipleOptionChange([\n      'cursorBlink',\n      'cursorStyle'\n    ], () => this.refreshRows(bufferService.buffer.y, bufferService.buffer.y, true)));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(coreBrowserService.window, 'resize', () => this.handleDevicePixelRatioChange()));\n\n    this.register(themeService.onChangeColors(() => this._fullRefresh()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in coreBrowserService.window) {\n      const observer = new coreBrowserService.window.IntersectionObserver(e => this._handleIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _handleIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.isIntersecting === undefined ? (entry.intersectionRatio === 0) : !entry.isIntersecting;\n\n    // Terminal was hidden on open\n    if (!this._isPaused && !this._charSizeService.hasValidSize) {\n      this._charSizeService.measure();\n    }\n\n    if (!this._isPaused && this._needsFullRefresh) {\n      this._pausedResizeTask.flush();\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number, isRedrawOnly: boolean = false): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    if (!isRedrawOnly) {\n      this._isNextRenderRedrawOnly = false;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    if (!this._renderer.value) {\n      return;\n    }\n\n    // Since this is debounced, a resize event could have happened between the time a refresh was\n    // requested and when this triggers. Clamp the values of start and end to ensure they're valid\n    // given the current viewport state.\n    start = Math.min(start, this._rowCount - 1);\n    end = Math.min(end, this._rowCount - 1);\n\n    // Render\n    this._renderer.value.renderRows(start, end);\n\n    // Update selection if needed\n    if (this._needsSelectionRefresh) {\n      this._renderer.value.handleSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode);\n      this._needsSelectionRefresh = false;\n    }\n\n    // Fire render event only if it was not a redraw\n    if (!this._isNextRenderRedrawOnly) {\n      this._onRenderedViewportChange.fire({ start, end });\n    }\n    this._onRender.fire({ start, end });\n    this._isNextRenderRedrawOnly = true;\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  private _handleOptionsChanged(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.value.dimensions.css.canvas.width === this._canvasWidth && this._renderer.value.dimensions.css.canvas.height === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.value.dimensions);\n  }\n\n  public hasRenderer(): boolean {\n    return !!this._renderer.value;\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    this._renderer.value = renderer;\n    this._renderer.value.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // Force a refresh\n    this._needsSelectionRefresh = true;\n    this._fullRefresh();\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    return this._renderDebouncer.addRefreshCallback(callback);\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    this._renderer.value.clearTextureAtlas?.();\n    this._fullRefresh();\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    // Force char size measurement as DomMeasureStrategy(getBoundingClientRect) is not stable\n    // when devicePixelRatio changes\n    this._charSizeService.measure();\n\n    if (!this._renderer.value) {\n      return;\n    }\n    this._renderer.value.handleDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    if (this._isPaused) {\n      this._pausedResizeTask.set(() => this._renderer.value!.handleResize(cols, rows));\n    } else {\n      this._renderer.value.handleResize(cols, rows);\n    }\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public handleCharSizeChanged(): void {\n    this._renderer.value?.handleCharSizeChanged();\n  }\n\n  public handleBlur(): void {\n    this._renderer.value?.handleBlur();\n  }\n\n  public handleFocus(): void {\n    this._renderer.value?.handleFocus();\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionState.start = start;\n    this._selectionState.end = end;\n    this._selectionState.columnSelectMode = columnSelectMode;\n    this._renderer.value?.handleSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public handleCursorMove(): void {\n    this._renderer.value?.handleCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer.value?.clear();\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange, ILinkifier2 } from 'browser/Types';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { ISelectionRedrawRequestEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { ICoreBrowserService, IMouseService, IRenderService, ISelectionService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport * as Browser from 'common/Platform';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport { getRangeLength } from 'common/buffer/BufferRange';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService extends Disposable implements ISelectionService {\n  public serviceBrand: undefined;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n  private _oldHasSelection: boolean = false;\n  private _oldSelectionStart: [number, number] | undefined = undefined;\n  private _oldSelectionEnd: [number, number] | undefined = undefined;\n\n  private readonly _onLinuxMouseSelection = this.register(new EventEmitter<string>());\n  public readonly onLinuxMouseSelection = this._onLinuxMouseSelection.event;\n  private readonly _onRedrawRequest = this.register(new EventEmitter<ISelectionRedrawRequestEvent>());\n  public readonly onRequestRedraw = this._onRedrawRequest.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onRequestScrollLines = this.register(new EventEmitter<ISelectionRequestScrollLinesEvent>());\n  public readonly onRequestScrollLines = this._onRequestScrollLines.event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _linkifier: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n\n    // Init listeners\n    this._mouseMoveListener = event => this._handleMouseMove(event as MouseEvent);\n    this._mouseUpListener = event => this._handleMouseUp(event as MouseEvent);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._handleTrim(amount));\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._handleBufferActivate(e)));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n\n    this.register(toDisposable(() => {\n      this._removeMouseDownListeners();\n    }));\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      // For column selection it's not enough to rely on final selection's swapping of reversed\n      // values, it also needs the x coordinates to swap independently of the y coordinate is needed\n      const startCol = start[0] < end[0] ? start[0] : end[0];\n      const endCol = start[0] < end[0] ? end[0] : start[0];\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, startCol, endCol);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine?.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  private _isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  public isCellInSelection(x: number, y: number): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return this._areCoordsInSelection([x, y], start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  private _selectWordAtCursor(event: MouseEvent, allowWhitespaceOnlySelection: boolean): boolean {\n    // Check if there is a link under the cursor first and select that if so\n    const range = this._linkifier.currentLink?.link?.range;\n    if (range) {\n      this._model.selectionStart = [range.start.x - 1, range.start.y - 1];\n      this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, allowWhitespaceOnlySelection);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _handleTrim(amount: number): void {\n    const needsRefresh = this._model.handleTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(this._coreBrowserService.window, event, this._screenElement)[1];\n    const terminalHeight = this._renderService.dimensions.css.canvas.height;\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.rawOptions.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public handleMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._handleIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._handleSingleClick(event);\n      } else if (event.detail === 2) {\n        this._handleDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._handleTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = this._coreBrowserService.window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    this._coreBrowserService.window.clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _handleIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _handleSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current word.\n   * @param event The mouse event.\n   */\n  private _handleDoubleClick(event: MouseEvent): void {\n    if (this._selectWordAtCursor(event, true)) {\n      this._activeSelectionMode = SelectionMode.WORD;\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _handleTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.rawOptions.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _handleMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._onRequestScrollLines.fire({ amount: this._dragScrollAmount, suppressScrollEvent: false });\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _handleMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME && event.altKey && this._optionsService.rawOptions.altClickMovesCursor) {\n      if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else {\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  private _fireEventIfSelectionChanged(): void {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    const hasSelection = !!start && !!end && (start[0] !== end[0] || start[1] !== end[1]);\n\n    if (!hasSelection) {\n      if (this._oldHasSelection) {\n        this._fireOnSelectionChange(start, end, hasSelection);\n      }\n      return;\n    }\n\n    // Sanity check, these should not be undefined as there is a selection\n    if (!start || !end) {\n      return;\n    }\n\n    if (!this._oldSelectionStart || !this._oldSelectionEnd || (\n      start[0] !== this._oldSelectionStart[0] || start[1] !== this._oldSelectionStart[1] ||\n      end[0] !== this._oldSelectionEnd[0] || end[1] !== this._oldSelectionEnd[1])) {\n\n      this._fireOnSelectionChange(start, end, hasSelection);\n    }\n  }\n\n  private _fireOnSelectionChange(start: [number, number] | undefined, end: [number, number] | undefined, hasSelection: boolean): void {\n    this._oldSelectionStart = start;\n    this._oldSelectionEnd = end;\n    this._oldHasSelection = hasSelection;\n    this._onSelectionChange.fire();\n  }\n\n  private _handleBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._handleTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column (0 to cols - 1) to the character index on the\n   * buffer line, the latter takes into account wide and null characters.\n   * @param bufferLine The buffer line to use.\n   * @param x The x index in the buffer line to convert.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, x: number): number {\n    let charIndex = x;\n    for (let i = 0; x >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && x !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n    this._fireEventIfSelectionChanged();\n  }\n\n  public rightClickSelect(ev: MouseEvent): void {\n    if (!this._isClickInSelection(ev)) {\n      if (this._selectWordAtCursor(ev, false)) {\n        this.refresh(true);\n      }\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords[0]);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine?.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param cell The cell to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.rawOptions.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    const range: IBufferRange = {\n      start: { x: 0, y: wrappedRange.first },\n      end: { x: this._bufferService.cols - 1, y: wrappedRange.last }\n    };\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = undefined;\n    this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/shared/Types';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent as ISelectionRequestRedrawEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { AllColorIndex, IDisposable } from 'common/Types';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: undefined;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: undefined;\n\n  readonly isFocused: boolean;\n  /**\n   * Parent window that the terminal is rendered into. DOM and rendering APIs\n   * (e.g. requestAnimationFrame) should be invoked in the context of this\n   * window.\n   */\n  readonly window: Window & typeof globalThis;\n  /**\n   * Helper for getting the devicePixelRatio of the parent window.\n   */\n  readonly dpr: number;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: undefined;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: undefined;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  /**\n   * Fires when buffer changes are rendered. This does not fire when only cursor\n   * or selections are rendered.\n   */\n  onRenderedViewportChange: IEvent<{ start: number, end: number }>;\n  /**\n   * Fires on render\n   */\n  onRender: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  addRefreshCallback(callback: FrameRequestCallback): number;\n\n  refreshRows(start: number, end: number): void;\n  clearTextureAtlas(): void;\n  resize(cols: number, rows: number): void;\n  hasRenderer(): boolean;\n  setRenderer(renderer: IRenderer): void;\n  handleDevicePixelRatioChange(): void;\n  handleResize(cols: number, rows: number): void;\n  handleCharSizeChanged(): void;\n  handleBlur(): void;\n  handleFocus(): void;\n  handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void;\n  handleCursorMove(): void;\n  clear(): void;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: undefined;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRequestRedraw: IEvent<ISelectionRequestRedrawEvent>;\n  readonly onRequestScrollLines: IEvent<ISelectionRequestScrollLinesEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  rightClickSelect(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  handleMouseDown(event: MouseEvent): void;\n  isCellInSelection(x: number, y: number): boolean;\n}\n\nexport const ICharacterJoinerService = createDecorator<ICharacterJoinerService>('CharacterJoinerService');\nexport interface ICharacterJoinerService {\n  serviceBrand: undefined;\n\n  register(handler: (text: string) => [number, number][]): number;\n  deregister(joinerId: number): boolean;\n  getJoinedCharacters(row: number): [number, number][];\n}\n\nexport const IThemeService = createDecorator<IThemeService>('ThemeService');\nexport interface IThemeService {\n  serviceBrand: undefined;\n\n  readonly colors: ReadonlyColorSet;\n\n  readonly onChangeColors: IEvent<ReadonlyColorSet>;\n\n  restoreColor(slot?: AllColorIndex): void;\n  /**\n   * Allows external modifying of colors in the theme, this is used instead of {@link colors} to\n   * prevent accidental writes.\n   */\n  modifyColors(callback: (colors: IColorSet) => void): void;\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\nimport { IThemeService } from 'browser/services/Services';\nimport { IColorContrastCache, IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { channels, color, css, NULL_COLOR } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IOptionsService, ITheme } from 'common/services/Services';\nimport { AllColorIndex, IColor, SpecialColorIndex } from 'common/Types';\n\ninterface IRestoreColorSet {\n  foreground: IColor;\n  background: IColor;\n  cursor: IColor;\n  ansi: IColor[];\n}\n\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS.\nexport const DEFAULT_ANSI_COLORS = Object.freeze((() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})());\n\nexport class ThemeService extends Disposable implements IThemeService {\n  public serviceBrand: undefined;\n\n  private _colors: IColorSet;\n  private _contrastCache: IColorContrastCache = new ColorContrastCache();\n  private _halfContrastCache: IColorContrastCache = new ColorContrastCache();\n  private _restoreColors!: IRestoreColorSet;\n\n  public get colors(): ReadonlyColorSet { return this._colors; }\n\n  private readonly _onChangeColors = this.register(new EventEmitter<ReadonlyColorSet>());\n  public readonly onChangeColors = this._onChangeColors.event;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n\n    this._colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selectionForeground: undefined,\n      selectionBackgroundTransparent: DEFAULT_SELECTION,\n      selectionBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      selectionInactiveBackgroundTransparent: DEFAULT_SELECTION,\n      selectionInactiveBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache,\n      halfContrastCache: this._halfContrastCache\n    };\n    this._updateRestoreColors();\n    this._setTheme(this._optionsService.rawOptions.theme);\n\n    this.register(this._optionsService.onSpecificOptionChange('minimumContrastRatio', () => this._contrastCache.clear()));\n    this.register(this._optionsService.onSpecificOptionChange('theme', () => this._setTheme(this._optionsService.rawOptions.theme)));\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  private _setTheme(theme: ITheme = {}): void {\n    const colors = this._colors;\n    colors.foreground = parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    colors.background = parseColor(theme.background, DEFAULT_BACKGROUND);\n    colors.cursor = parseColor(theme.cursor, DEFAULT_CURSOR);\n    colors.cursorAccent = parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT);\n    colors.selectionBackgroundTransparent = parseColor(theme.selectionBackground, DEFAULT_SELECTION);\n    colors.selectionBackgroundOpaque = color.blend(colors.background, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundTransparent = parseColor(theme.selectionInactiveBackground, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundOpaque = color.blend(colors.background, colors.selectionInactiveBackgroundTransparent);\n    colors.selectionForeground = theme.selectionForeground ? parseColor(theme.selectionForeground, NULL_COLOR) : undefined;\n    if (colors.selectionForeground === NULL_COLOR) {\n      colors.selectionForeground = undefined;\n    }\n\n    /**\n     * If selection color is opaque, blend it with background with 0.3 opacity\n     * Issue #2737\n     */\n    if (color.isOpaque(colors.selectionBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionBackgroundTransparent = color.opacity(colors.selectionBackgroundTransparent, opacity);\n    }\n    if (color.isOpaque(colors.selectionInactiveBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionInactiveBackgroundTransparent = color.opacity(colors.selectionInactiveBackgroundTransparent, opacity);\n    }\n    colors.ansi = DEFAULT_ANSI_COLORS.slice();\n    colors.ansi[0] = parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    colors.ansi[1] = parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    colors.ansi[2] = parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    colors.ansi[3] = parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    colors.ansi[4] = parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    colors.ansi[5] = parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    colors.ansi[6] = parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    colors.ansi[7] = parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    colors.ansi[8] = parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    colors.ansi[9] = parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    colors.ansi[10] = parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    colors.ansi[11] = parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    colors.ansi[12] = parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    colors.ansi[13] = parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    colors.ansi[14] = parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    colors.ansi[15] = parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    if (theme.extendedAnsi) {\n      const colorCount = Math.min(colors.ansi.length - 16, theme.extendedAnsi.length);\n      for (let i = 0; i < colorCount; i++) {\n        colors.ansi[i + 16] = parseColor(theme.extendedAnsi[i], DEFAULT_ANSI_COLORS[i + 16]);\n      }\n    }\n    // Clear our the cache\n    this._contrastCache.clear();\n    this._halfContrastCache.clear();\n    this._updateRestoreColors();\n    this._onChangeColors.fire(this.colors);\n  }\n\n  public restoreColor(slot?: AllColorIndex): void {\n    this._restoreColor(slot);\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _restoreColor(slot: AllColorIndex | undefined): void {\n    // unset slot restores all ansi colors\n    if (slot === undefined) {\n      for (let i = 0; i < this._restoreColors.ansi.length; ++i) {\n        this._colors.ansi[i] = this._restoreColors.ansi[i];\n      }\n      return;\n    }\n    switch (slot) {\n      case SpecialColorIndex.FOREGROUND:\n        this._colors.foreground = this._restoreColors.foreground;\n        break;\n      case SpecialColorIndex.BACKGROUND:\n        this._colors.background = this._restoreColors.background;\n        break;\n      case SpecialColorIndex.CURSOR:\n        this._colors.cursor = this._restoreColors.cursor;\n        break;\n      default:\n        this._colors.ansi[slot] = this._restoreColors.ansi[slot];\n    }\n  }\n\n  public modifyColors(callback: (colors: IColorSet) => void): void {\n    callback(this._colors);\n    // Assume the change happened\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _updateRestoreColors(): void {\n    this._restoreColors = {\n      foreground: this._colors.foreground,\n      background: this._colors.background,\n      cursor: this._colors.cursor,\n      ansi: this._colors.ansi.slice()\n    };\n  }\n}\n\nfunction parseColor(\n  cssString: string | undefined,\n  fallback: IColor\n): IColor {\n  if (cssString !== undefined) {\n    try {\n      return css.toColor(cssString);\n    } catch {\n      // no-op\n    }\n  }\n  return fallback;\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> extends Disposable implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public readonly onDeleteEmitter = this.register(new EventEmitter<IDeleteEvent>());\n  public readonly onDelete = this.onDeleteEmitter.event;\n  public readonly onInsertEmitter = this.register(new EventEmitter<IInsertEvent>());\n  public readonly onInsert = this.onInsertEmitter.event;\n  public readonly onTrimEmitter = this.register(new EventEmitter<number>());\n  public readonly onTrim = this.onTrimEmitter.event;\n\n  constructor(\n    private _maxLength: number\n  ) {\n    super();\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @returns The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @returns The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n      this.onDeleteEmitter.fire({ index: start, amount: deleteCount });\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n    if (items.length) {\n      this.onInsertEmitter.fire({ index: start, amount: items.length });\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] && clone(val[key], depth - 1));\n  }\n\n  return clonedObject as T;\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\nimport { IColor, IColorRGB } from 'common/Types';\n\nlet $r = 0;\nlet $g = 0;\nlet $b = 0;\nlet $a = 0;\n\nexport const NULL_COLOR: IColor = {\n  css: '#00000000',\n  rgba: 0\n};\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    $a = (fg.rgba & 0xFF) / 255;\n    if ($a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    $r = bgR + Math.round((fgR - bgR) * $a);\n    $g = bgG + Math.round((fgG - bgG) * $a);\n    $b = bgB + Math.round((fgB - bgB) * $a);\n    const css = channels.toCss($r, $g, $b);\n    const rgba = channels.toRgba($r, $g, $b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    [$r, $g, $b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss($r, $g, $b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    $a = Math.round(opacity * 0xFF);\n    [$r, $g, $b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss($r, $g, $b, $a),\n      rgba: channels.toRgba($r, $g, $b, $a)\n    };\n  }\n\n  export function multiplyOpacity(color: IColor, factor: number): IColor {\n    $a = color.rgba & 0xFF;\n    return opacity(color, ($a * factor) / 0xFF);\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb',\n * '#rrggbbaa').\n */\nexport namespace css {\n  let $ctx: CanvasRenderingContext2D | undefined;\n  let $litmusColor: CanvasGradient | undefined;\n  if (!isNode) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d', {\n      willReadFrequently: true\n    });\n    if (ctx) {\n      $ctx = ctx;\n      $ctx.globalCompositeOperation = 'copy';\n      $litmusColor = $ctx.createLinearGradient(0, 0, 1, 1);\n    }\n  }\n\n  /**\n   * Converts a css string to an IColor, this should handle all valid CSS color strings and will\n   * throw if it's invalid. The ideal format to use is `#rrggbb[aa]` as it's the fastest to parse.\n   *\n   * Only `#rgb[a]`, `#rrggbb[aa]`, `rgb()` and `rgba()` formats are supported when run in a Node\n   * environment.\n   */\n  export function toColor(css: string): IColor {\n    // Formats: #rgb[a] and #rrggbb[aa]\n    if (css.match(/#[\\da-f]{3,8}/i)) {\n      switch (css.length) {\n        case 4: { // #rgb\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          return rgba.toColor($r, $g, $b);\n        }\n        case 5: { // #rgba\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          $a = parseInt(css.slice(4, 5).repeat(2), 16);\n          return rgba.toColor($r, $g, $b, $a);\n        }\n        case 7: // #rrggbb\n          return {\n            css,\n            rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n          };\n        case 9: // #rrggbbaa\n          return {\n            css,\n            rgba: parseInt(css.slice(1), 16) >>> 0\n          };\n      }\n    }\n\n    // Formats: rgb() or rgba()\n    const rgbaMatch = css.match(/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(,\\s*(0|1|\\d?\\.(\\d+))\\s*)?\\)/);\n    if (rgbaMatch) {\n      $r = parseInt(rgbaMatch[1]);\n      $g = parseInt(rgbaMatch[2]);\n      $b = parseInt(rgbaMatch[3]);\n      $a = Math.round((rgbaMatch[5] === undefined ? 1 : parseFloat(rgbaMatch[5])) * 0xFF);\n      return rgba.toColor($r, $g, $b, $a);\n    }\n\n    // Validate the context is available for canvas-based color parsing\n    if (!$ctx || !$litmusColor) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Validate the color using canvas fillStyle\n    // See https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    $ctx.fillStyle = $litmusColor;\n    $ctx.fillStyle = css;\n    if (typeof $ctx.fillStyle !== 'string') {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    $ctx.fillRect(0, 0, 1, 1);\n    [$r, $g, $b, $a] = $ctx.getImageData(0, 0, 1, 1).data;\n\n    // Validate the color is non-transparent as color hue gets lost when drawn to the canvas\n    if ($a !== 0xFF) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Extract the color from the canvas' fillStyle property which exposes the color value in rgba()\n    // format\n    // See https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n    return {\n      rgba: channels.toRgba($r, $g, $b, $a),\n      css\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  /**\n   * Given a foreground color and a background color, either increase or reduce the luminance of the\n   * foreground color until the specified contrast ratio is met. If pure white or black is hit\n   * without the contrast ratio being met, go the other direction using the background color as the\n   * foreground color and take either the first or second result depending on which has the higher\n   * contrast ratio.\n   *\n   * `undefined` will be returned if the contrast ratio is already met.\n   *\n   * @param bgRgba The background color in rgba format.\n   * @param fgRgba The foreground color in rgba format.\n   * @param ratio The contrast ratio to achieve.\n   */\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        const resultA = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n        if (resultARatio < ratio) {\n          const resultB = increaseLuminance(bgRgba, fgRgba, ratio);\n          const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n          return resultARatio > resultBRatio ? resultA : resultB;\n        }\n        return resultA;\n      }\n      const resultA = increaseLuminance(bgRgba, fgRgba, ratio);\n      const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n      if (resultARatio < ratio) {\n        const resultB = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n        return resultARatio > resultBRatio ? resultA : resultB;\n      }\n      return resultA;\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  // FIXME: Move this to channels NS?\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number, a?: number): IColor {\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n", "/**\n * Copyright (c) 2014-2020 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { Disposable, MutableDisposable, toDisposable } from 'common/Lifecycle';\nimport { IInstantiationService, IOptionsService, IBufferService, ILogService, ICharsetService, ICoreService, ICoreMouseService, IUnicodeService, LogLevelEnum, ITerminalOptions, IOscLinkService } from 'common/services/Services';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { LogService } from 'common/services/LogService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { IDisposable, IAttributeData, ICoreTerminal, IScrollEvent, ScrollSource } from 'common/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { IFunctionIdentifier, IParams } from 'common/parser/Types';\nimport { IBufferSet } from 'common/buffer/Types';\nimport { InputHandler } from 'common/InputHandler';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\nimport { OscLinkService } from 'common/services/OscLinkService';\n\n// Only trigger this warning a single time per session\nlet hasWriteSyncWarnHappened = false;\n\nexport abstract class CoreTerminal extends Disposable implements ICoreTerminal {\n  protected readonly _instantiationService: IInstantiationService;\n  protected readonly _bufferService: IBufferService;\n  protected readonly _logService: ILogService;\n  protected readonly _charsetService: ICharsetService;\n  protected readonly _oscLinkService: IOscLinkService;\n\n  public readonly coreMouseService: ICoreMouseService;\n  public readonly coreService: ICoreService;\n  public readonly unicodeService: IUnicodeService;\n  public readonly optionsService: IOptionsService;\n\n  protected _inputHandler: InputHandler;\n  private _writeBuffer: WriteBuffer;\n  private _windowsWrappingHeuristics = this.register(new MutableDisposable());\n\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  protected _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  protected readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  /**\n   * Internally we track the source of the scroll but this is meaningless outside the library so\n   * it's filtered out.\n   */\n  protected _onScrollApi?: EventEmitter<number, void>;\n  protected _onScroll = this.register(new EventEmitter<IScrollEvent, void>());\n  public get onScroll(): IEvent<number, void> {\n    if (!this._onScrollApi) {\n      this._onScrollApi = this.register(new EventEmitter<number, void>());\n      this._onScroll.event(ev => {\n        this._onScrollApi?.fire(ev.position);\n      });\n    }\n    return this._onScrollApi.event;\n  }\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n  public get buffers(): IBufferSet { return this._bufferService.buffers; }\n  public get options(): Required<ITerminalOptions> { return this.optionsService.options; }\n  public set options(options: ITerminalOptions) {\n    for (const key in options) {\n      this.optionsService.options[key] = options[key];\n    }\n  }\n\n  constructor(\n    options: Partial<ITerminalOptions>\n  ) {\n    super();\n\n    // Setup and initialize services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = this.register(new OptionsService(options));\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this.register(this._instantiationService.createInstance(BufferService));\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this.register(this._instantiationService.createInstance(LogService));\n    this._instantiationService.setService(ILogService, this._logService);\n    this.coreService = this.register(this._instantiationService.createInstance(CoreService));\n    this._instantiationService.setService(ICoreService, this.coreService);\n    this.coreMouseService = this.register(this._instantiationService.createInstance(CoreMouseService));\n    this._instantiationService.setService(ICoreMouseService, this.coreMouseService);\n    this.unicodeService = this.register(this._instantiationService.createInstance(UnicodeService));\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n    this._oscLinkService = this._instantiationService.createInstance(OscLinkService);\n    this._instantiationService.setService(IOscLinkService, this._oscLinkService);\n\n    // Register input handler and handle/forward events\n    this._inputHandler = this.register(new InputHandler(this._bufferService, this._charsetService, this.coreService, this._logService, this.optionsService, this._oscLinkService, this.coreMouseService, this.unicodeService));\n    this.register(forwardEvent(this._inputHandler.onLineFeed, this._onLineFeed));\n    this.register(this._inputHandler);\n\n    // Setup listeners\n    this.register(forwardEvent(this._bufferService.onResize, this._onResize));\n    this.register(forwardEvent(this.coreService.onData, this._onData));\n    this.register(forwardEvent(this.coreService.onBinary, this._onBinary));\n    this.register(this.coreService.onRequestScrollToBottom(() => this.scrollToBottom()));\n    this.register(this.coreService.onUserInput(() =>  this._writeBuffer.handleUserInput()));\n    this.register(this.optionsService.onMultipleOptionChange(['windowsMode', 'windowsPty'], () => this._handleWindowsPtyOptionChange()));\n    this.register(this._bufferService.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n    this.register(this._inputHandler.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n\n    // Setup WriteBuffer\n    this._writeBuffer = this.register(new WriteBuffer((data, promiseResult) => this._inputHandler.parse(data, promiseResult)));\n    this.register(forwardEvent(this._writeBuffer.onWriteParsed, this._onWriteParsed));\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  /**\n   * Write data to terminal synchonously.\n   *\n   * This method is unreliable with async parser handlers, thus should not\n   * be used anymore. If you need blocking semantics on data input consider\n   * `write` with a callback instead.\n   *\n   * @deprecated Unreliable, will be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    if (this._logService.logLevel <= LogLevelEnum.WARN && !hasWriteSyncWarnHappened) {\n      this._logService.warn('writeSync is unreliable and will be removed soon.');\n      hasWriteSyncWarnHappened = true;\n    }\n    this._writeBuffer.writeSync(data, maxSubsequentCalls);\n  }\n\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    x = Math.max(x, MINIMUM_COLS);\n    y = Math.max(y, MINIMUM_ROWS);\n\n    this._bufferService.resize(x, y);\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    this._bufferService.scroll(eraseAttr, isWrapped);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used to avoid\n   * unwanted events being handled by the viewport when the event was triggered from the viewport\n   * originally.\n   * @param source Which component the event came from.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    this._bufferService.scrollLines(disp, suppressScrollEvent, source);\n  }\n\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  public scrollToTop(): void {\n    this.scrollLines(-this._bufferService.buffer.ydisp);\n  }\n\n  public scrollToBottom(): void {\n    this.scrollLines(this._bufferService.buffer.ybase - this._bufferService.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this._bufferService.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerCsiHandler(id, callback);\n  }\n\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerOscHandler(ident, callback);\n  }\n\n  protected _setup(): void {\n    this._handleWindowsPtyOptionChange();\n  }\n\n  public reset(): void {\n    this._inputHandler.reset();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this.coreService.reset();\n    this.coreMouseService.reset();\n  }\n\n\n  private _handleWindowsPtyOptionChange(): void {\n    let value = false;\n    const windowsPty = this.optionsService.rawOptions.windowsPty;\n    if (windowsPty && windowsPty.buildNumber !== undefined && windowsPty.buildNumber !== undefined) {\n      value = !!(windowsPty.backend === 'conpty' && windowsPty.buildNumber < 21376);\n    } else if (this.optionsService.rawOptions.windowsMode) {\n      value = true;\n    }\n    if (value) {\n      this._enableWindowsWrappingHeuristics();\n    } else {\n      this._windowsWrappingHeuristics.clear();\n    }\n  }\n\n  protected _enableWindowsWrappingHeuristics(): void {\n    if (!this._windowsWrappingHeuristics.value) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.registerCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsWrappingHeuristics.value = toDisposable(() => {\n        for (const d of disposables) {\n          d.dispose();\n        }\n      });\n    }\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    this.clearListeners();\n    this._disposed = true;\n  }\n\n  public clearListeners(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n", "/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IAttributeData, IDisposable, IWindowOptions, IColorEvent, IParseStack, ColorIndex, ColorRequestType, SpecialColorIndex } from 'common/Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { StringToUtf32, stringFromCodePoint, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { IParsingState, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, ICoreMouseService, ICharsetService, IUnicodeService, LogLevelEnum, IOscLinkService } from 'common/services/Services';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\nimport { IBuffer } from 'common/buffer/Types';\nimport { parseColor } from 'common/input/XParseColor';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: { [key: string]: number } = { '(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2 };\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document xterm VT features here that are currently unsupported\n */\n// @vt: #E[Supported via xterm-addon-image.]  DCS   SIXEL       \"SIXEL Graphics\"          \"DCS Ps ; Ps ; Ps ; q \tPt ST\"  \"Draw SIXEL image.\"\n// @vt: #N  DCS   DECUDK      \"User Defined Keys\"       \"DCS Ps ; Ps \\| Pt ST\"           \"Definitions for user-defined keys.\"\n// @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\" \"DCS + q Pt ST\"                 \"Request Terminfo String.\"\n// @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"       \"DCS + p Pt ST\"                 \"Set Terminfo Data.\"\n// @vt: #N  OSC   1           \"Set Icon Name\"           \"OSC 1 ; Pt BEL\"                \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\nexport enum WindowsOptionsReportType {\n  GET_WIN_SIZE_PIXELS = 0,\n  GET_CELL_SIZE_PIXELS = 1\n}\n\n// create a warning log if an async handler takes longer than the limit (in ms)\nconst SLOW_ASYNC_LIMIT = 5000;\n\n// Work variables to avoid garbage collection\nlet $temp = 0;\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  private _dirtyRowTracker: IDirtyRowTracker;\n  protected _windowTitleStack: string[] = [];\n  protected _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  public getAttrData(): IAttributeData { return this._curAttrData; }\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _activeBuffer: IBuffer;\n\n  private readonly _onRequestBell = this.register(new EventEmitter<void>());\n  public readonly onRequestBell = this._onRequestBell.event;\n  private readonly _onRequestRefreshRows = this.register(new EventEmitter<number, number>());\n  public readonly onRequestRefreshRows = this._onRequestRefreshRows.event;\n  private readonly _onRequestReset = this.register(new EventEmitter<void>());\n  public readonly onRequestReset = this._onRequestReset.event;\n  private readonly _onRequestSendFocus = this.register(new EventEmitter<void>());\n  public readonly onRequestSendFocus = this._onRequestSendFocus.event;\n  private readonly _onRequestSyncScrollBar = this.register(new EventEmitter<void>());\n  public readonly onRequestSyncScrollBar = this._onRequestSyncScrollBar.event;\n  private readonly _onRequestWindowsOptionsReport = this.register(new EventEmitter<WindowsOptionsReportType>());\n  public readonly onRequestWindowsOptionsReport = this._onRequestWindowsOptionsReport.event;\n\n  private readonly _onA11yChar = this.register(new EventEmitter<string>());\n  public readonly onA11yChar = this._onA11yChar.event;\n  private readonly _onA11yTab = this.register(new EventEmitter<number>());\n  public readonly onA11yTab = this._onA11yTab.event;\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onColor = this.register(new EventEmitter<IColorEvent>());\n  public readonly onColor = this._onColor.event;\n\n  private _parseStack: IParseStack = {\n    paused: false,\n    cursorStartX: 0,\n    cursorStartY: 0,\n    decodedLength: 0,\n    position: 0\n  };\n\n  constructor(\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _oscLinkService: IOscLinkService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser()\n  ) {\n    super();\n    this.register(this._parser);\n    this._dirtyRowTracker = new DirtyRowTracker(this._bufferService);\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.registerCsiHandler({ final: '@' }, params => this.insertChars(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: '@' }, params => this.scrollLeft(params));\n    this._parser.registerCsiHandler({ final: 'A' }, params => this.cursorUp(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'A' }, params => this.scrollRight(params));\n    this._parser.registerCsiHandler({ final: 'B' }, params => this.cursorDown(params));\n    this._parser.registerCsiHandler({ final: 'C' }, params => this.cursorForward(params));\n    this._parser.registerCsiHandler({ final: 'D' }, params => this.cursorBackward(params));\n    this._parser.registerCsiHandler({ final: 'E' }, params => this.cursorNextLine(params));\n    this._parser.registerCsiHandler({ final: 'F' }, params => this.cursorPrecedingLine(params));\n    this._parser.registerCsiHandler({ final: 'G' }, params => this.cursorCharAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'H' }, params => this.cursorPosition(params));\n    this._parser.registerCsiHandler({ final: 'I' }, params => this.cursorForwardTab(params));\n    this._parser.registerCsiHandler({ final: 'J' }, params => this.eraseInDisplay(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'J' }, params => this.eraseInDisplay(params, true));\n    this._parser.registerCsiHandler({ final: 'K' }, params => this.eraseInLine(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'K' }, params => this.eraseInLine(params, true));\n    this._parser.registerCsiHandler({ final: 'L' }, params => this.insertLines(params));\n    this._parser.registerCsiHandler({ final: 'M' }, params => this.deleteLines(params));\n    this._parser.registerCsiHandler({ final: 'P' }, params => this.deleteChars(params));\n    this._parser.registerCsiHandler({ final: 'S' }, params => this.scrollUp(params));\n    this._parser.registerCsiHandler({ final: 'T' }, params => this.scrollDown(params));\n    this._parser.registerCsiHandler({ final: 'X' }, params => this.eraseChars(params));\n    this._parser.registerCsiHandler({ final: 'Z' }, params => this.cursorBackwardTab(params));\n    this._parser.registerCsiHandler({ final: '`' }, params => this.charPosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'a' }, params => this.hPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'b' }, params => this.repeatPrecedingCharacter(params));\n    this._parser.registerCsiHandler({ final: 'c' }, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.registerCsiHandler({ prefix: '>', final: 'c' }, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.registerCsiHandler({ final: 'd' }, params => this.linePosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'e' }, params => this.vPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'f' }, params => this.hVPosition(params));\n    this._parser.registerCsiHandler({ final: 'g' }, params => this.tabClear(params));\n    this._parser.registerCsiHandler({ final: 'h' }, params => this.setMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'h' }, params => this.setModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'l' }, params => this.resetMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'l' }, params => this.resetModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'm' }, params => this.charAttributes(params));\n    this._parser.registerCsiHandler({ final: 'n' }, params => this.deviceStatus(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'n' }, params => this.deviceStatusPrivate(params));\n    this._parser.registerCsiHandler({ intermediates: '!', final: 'p' }, params => this.softReset(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'q' }, params => this.setCursorStyle(params));\n    this._parser.registerCsiHandler({ final: 'r' }, params => this.setScrollRegion(params));\n    this._parser.registerCsiHandler({ final: 's' }, params => this.saveCursor(params));\n    this._parser.registerCsiHandler({ final: 't' }, params => this.windowOptions(params));\n    this._parser.registerCsiHandler({ final: 'u' }, params => this.restoreCursor(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '}' }, params => this.insertColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '~' }, params => this.deleteColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\"', final: 'q' }, params => this.selectProtected(params));\n    this._parser.registerCsiHandler({ intermediates: '$', final: 'p' }, params => this.requestMode(params, true));\n    this._parser.registerCsiHandler({ prefix: '?', intermediates: '$', final: 'p' }, params => this.requestMode(params, false));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.registerOscHandler(0, new OscHandler(data => { this.setTitle(data); this.setIconName(data); return true; }));\n    //   1 - icon name\n    this._parser.registerOscHandler(1, new OscHandler(data => this.setIconName(data)));\n    //   2 - title\n    this._parser.registerOscHandler(2, new OscHandler(data => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    this._parser.registerOscHandler(4, new OscHandler(data => this.setOrReportIndexedColor(data)));\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //   8 - create hyperlink (not in xterm spec, see https://gist.github.com/egmontkob/eb114294efbcd5adb1944c9f3cb5feda)\n    this._parser.registerOscHandler(8, new OscHandler(data => this.setHyperlink(data)));\n    //  10 - Change VT100 text foreground color to Pt.\n    this._parser.registerOscHandler(10, new OscHandler(data => this.setOrReportFgColor(data)));\n    //  11 - Change VT100 text background color to Pt.\n    this._parser.registerOscHandler(11, new OscHandler(data => this.setOrReportBgColor(data)));\n    //  12 - Change text cursor color to Pt.\n    this._parser.registerOscHandler(12, new OscHandler(data => this.setOrReportCursorColor(data)));\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    this._parser.registerOscHandler(104, new OscHandler(data => this.restoreIndexedColor(data)));\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    this._parser.registerOscHandler(110, new OscHandler(data => this.restoreFgColor(data)));\n    // 111 - Reset VT100 text background color.\n    this._parser.registerOscHandler(111, new OscHandler(data => this.restoreBgColor(data)));\n    // 112 - Reset text cursor color.\n    this._parser.registerOscHandler(112, new OscHandler(data => this.restoreCursorColor(data)));\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.registerEscHandler({ final: '7' }, () => this.saveCursor());\n    this._parser.registerEscHandler({ final: '8' }, () => this.restoreCursor());\n    this._parser.registerEscHandler({ final: 'D' }, () => this.index());\n    this._parser.registerEscHandler({ final: 'E' }, () => this.nextLine());\n    this._parser.registerEscHandler({ final: 'H' }, () => this.tabSet());\n    this._parser.registerEscHandler({ final: 'M' }, () => this.reverseIndex());\n    this._parser.registerEscHandler({ final: '=' }, () => this.keypadApplicationMode());\n    this._parser.registerEscHandler({ final: '>' }, () => this.keypadNumericMode());\n    this._parser.registerEscHandler({ final: 'c' }, () => this.fullReset());\n    this._parser.registerEscHandler({ final: 'n' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: 'o' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '|' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '}' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: '~' }, () => this.setgLevel(1));\n    this._parser.registerEscHandler({ intermediates: '%', final: '@' }, () => this.selectDefaultCharset());\n    this._parser.registerEscHandler({ intermediates: '%', final: 'G' }, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.registerEscHandler({ intermediates: '(', final: flag }, () => this.selectCharset('(' + flag));\n      this._parser.registerEscHandler({ intermediates: ')', final: flag }, () => this.selectCharset(')' + flag));\n      this._parser.registerEscHandler({ intermediates: '*', final: flag }, () => this.selectCharset('*' + flag));\n      this._parser.registerEscHandler({ intermediates: '+', final: flag }, () => this.selectCharset('+' + flag));\n      this._parser.registerEscHandler({ intermediates: '-', final: flag }, () => this.selectCharset('-' + flag));\n      this._parser.registerEscHandler({ intermediates: '.', final: flag }, () => this.selectCharset('.' + flag));\n      this._parser.registerEscHandler({ intermediates: '/', final: flag }, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.registerEscHandler({ intermediates: '#', final: '8' }, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.registerDcsHandler({ intermediates: '$', final: 'q' }, new DcsHandler((data, params) => this.requestStatusString(data, params)));\n  }\n\n  /**\n   * Async parse support.\n   */\n  private _preserveStack(cursorStartX: number, cursorStartY: number, decodedLength: number, position: number): void {\n    this._parseStack.paused = true;\n    this._parseStack.cursorStartX = cursorStartX;\n    this._parseStack.cursorStartY = cursorStartY;\n    this._parseStack.decodedLength = decodedLength;\n    this._parseStack.position = position;\n  }\n\n  private _logSlowResolvingAsync(p: Promise<boolean>): void {\n    // log a limited warning about an async handler taking too long\n    if (this._logService.logLevel <= LogLevelEnum.WARN) {\n      Promise.race([p, new Promise((res, rej) => setTimeout(() => rej('#SLOW_TIMEOUT'), SLOW_ASYNC_LIMIT))])\n        .catch(err => {\n          if (err !== '#SLOW_TIMEOUT') {\n            throw err;\n          }\n          console.warn(`async parser handler taking longer than ${SLOW_ASYNC_LIMIT} ms`);\n        });\n    }\n  }\n\n  private _getCurrentLinkId(): number {\n    return this._curAttrData.extended.urlId;\n  }\n\n  /**\n   * Parse call with async handler support.\n   *\n   * Whether the stack state got preserved for the next call, is indicated by the return value:\n   * - undefined (void):\n   *   all handlers were sync, no stack save, continue normally with next chunk\n   * - Promise\\<boolean\\>:\n   *   execution stopped at async handler, stack saved, continue with same chunk and the promise\n   *   resolve value as `promiseResult` until the method returns `undefined`\n   *\n   * Note: This method should only be called by `Terminal.write` to ensure correct execution order\n   * and proper continuation of async parser handlers.\n   */\n  public parse(data: string | Uint8Array, promiseResult?: boolean): void | Promise<boolean> {\n    let result: void | Promise<boolean>;\n    let cursorStartX = this._activeBuffer.x;\n    let cursorStartY = this._activeBuffer.y;\n    let start = 0;\n    const wasPaused = this._parseStack.paused;\n\n    if (wasPaused) {\n      // assumption: _parseBuffer never mutates between async calls\n      if (result = this._parser.parse(this._parseBuffer, this._parseStack.decodedLength, promiseResult)) {\n        this._logSlowResolvingAsync(result);\n        return result;\n      }\n      cursorStartX = this._parseStack.cursorStartX;\n      cursorStartY = this._parseStack.cursorStartY;\n      this._parseStack.paused = false;\n      if (data.length > MAX_PARSEBUFFER_LENGTH) {\n        start = this._parseStack.position + MAX_PARSEBUFFER_LENGTH;\n      }\n    }\n\n    // Log debug data, the log level gate is to prevent extra work in this hot path\n    if (this._logService.logLevel <= LogLevelEnum.DEBUG) {\n      this._logService.debug(`parsing data${typeof data === 'string' ? ` \"${data}\"` : ` \"${Array.prototype.map.call(data, e => String.fromCharCode(e)).join('')}\"`}`, typeof data === 'string'\n        ? data.split('').map(e => e.charCodeAt(0))\n        : data\n      );\n    }\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    // Important: do not clear between async calls, otherwise we lost pending update information.\n    if (!wasPaused) {\n      this._dirtyRowTracker.clearRange();\n    }\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = start; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, i);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    } else {\n      if (!wasPaused) {\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data, this._parseBuffer)\n          : this._utf8Decoder.decode(data, this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, 0);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    }\n\n    if (this._activeBuffer.x !== cursorStartX || this._activeBuffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing\n    this._onRequestRefreshRows.fire(this._dirtyRowTracker.start, this._dirtyRowTracker.end);\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.rawOptions.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._coreService.modes.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (this._activeBuffer.x && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x - 1) === 2) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x - 1, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = this._unicodeService.wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._onA11yChar.fire(stringFromCodePoint(code));\n      }\n      if (this._getCurrentLinkId()) {\n        this._oscLinkService.addLineToLink(this._getCurrentLinkId(), this._activeBuffer.ybase + this._activeBuffer.y);\n      }\n\n      // insert combining char at last cursor position\n      // this._activeBuffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for this._activeBuffer.x to avoid overflow left\n      if (!chWidth && this._activeBuffer.x) {\n        if (!bufferRow.getWidth(this._activeBuffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (this._activeBuffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          // clear left over cells to the right\n          while (this._activeBuffer.x < cols) {\n            bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n          }\n          this._activeBuffer.x = 0;\n          this._activeBuffer.y++;\n          if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n            this._activeBuffer.y--;\n            this._bufferService.scroll(this._eraseAttrData(), true);\n          } else {\n            if (this._activeBuffer.y >= this._bufferService.rows) {\n              this._activeBuffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        } else {\n          this._activeBuffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(this._activeBuffer.x, chWidth, this._activeBuffer.getNullCell(curAttr), curAttr);\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x++, code, chWidth, curAttr.fg, curAttr.bg, curAttr.extended);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that this._activeBuffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 0, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end - start > 0) {\n      bufferRow.loadCell(this._activeBuffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (this._activeBuffer.x < cols && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x) === 0 && !bufferRow.hasContent(this._activeBuffer.x)) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Forward registerCsiHandler from parser.\n   */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.registerCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.registerCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward registerDcsHandler from parser.\n   */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward registerEscHandler from parser.\n   */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerEscHandler(id, callback);\n  }\n\n  /**\n   * Forward registerOscHandler from parser.\n   */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): boolean {\n    this._onRequestBell.fire();\n    return true;\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): boolean {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._optionsService.rawOptions.convertEol) {\n      this._activeBuffer.x = 0;\n    }\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    } else {\n      // There was an explicit line feed (not just a carriage return), so clear the wrapped state of\n      // the line. This is particularly important on conpty/Windows where revisiting lines to\n      // reprint is common, especially on resize. Note that the windowsMode wrapped line heuristics\n      // can mess with this so windowsMode should be disabled, which is recommended on Windows build\n      // 21376 and above.\n      this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      this._activeBuffer.x--;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    this._onLineFeed.fire();\n    return true;\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): boolean {\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   * By default it is not possible to move the cursor past the leftmost position.\n   * If `reverse wrap-around` (`CSI ? 45 h`) is set, a previous soft line wrap (DECAWM)\n   * can be undone with BS within the scroll margins. In that case the cursor will wrap back\n   * to the end of the previous row. Note that it is not possible to peek back into the scrollbuffer\n   * with the cursor, thus at the home position (top-leftmost cell) this has no effect.\n   */\n  public backspace(): boolean {\n    // reverse wrap-around is disabled\n    if (!this._coreService.decPrivateModes.reverseWraparound) {\n      this._restrictCursor();\n      if (this._activeBuffer.x > 0) {\n        this._activeBuffer.x--;\n      }\n      return true;\n    }\n\n    // reverse wrap-around is enabled\n    // other than for normal operation mode, reverse wrap-around allows the cursor\n    // to be at x=cols to be able to address the last cell of a row by BS\n    this._restrictCursor(this._bufferService.cols);\n\n    if (this._activeBuffer.x > 0) {\n      this._activeBuffer.x--;\n    } else {\n      /**\n       * reverse wrap-around handling:\n       * Our implementation deviates from xterm on purpose. Details:\n       * - only previous soft NLs can be reversed (isWrapped=true)\n       * - only works within scrollborders (top/bottom, left/right not yet supported)\n       * - cannot peek into scrollbuffer\n       * - any cursor movement sequence keeps working as expected\n       */\n      if (this._activeBuffer.x === 0\n        && this._activeBuffer.y > this._activeBuffer.scrollTop\n        && this._activeBuffer.y <= this._activeBuffer.scrollBottom\n        && this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)?.isWrapped) {\n        this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n        this._activeBuffer.y--;\n        this._activeBuffer.x = this._bufferService.cols - 1;\n        // find last taken cell - last cell can have 3 different states:\n        // - hasContent(true) + hasWidth(1): narrow char - we are done\n        // - hasWidth(0): second part of wide char - we are done\n        // - hasContent(false) + hasWidth(1): empty cell due to early wrapping wide char, go one\n        //   cell further back\n        const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        if (line.hasWidth(this._activeBuffer.x) && !line.hasContent(this._activeBuffer.x)) {\n          this._activeBuffer.x--;\n          // We do this only once, since width=1 + hasContent=false currently happens only once\n          // before early wrapping of a wide char.\n          // This needs to be fixed once we support graphemes taking more than 2 cells.\n        }\n      }\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    const originalX = this._activeBuffer.x;\n    this._activeBuffer.x = this._activeBuffer.nextStop();\n    if (this._optionsService.rawOptions.screenReaderMode) {\n      this._onA11yTab.fire(this._activeBuffer.x - originalX);\n    }\n    return true;\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): boolean {\n    this._charsetService.setgLevel(1);\n    return true;\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): boolean {\n    this._charsetService.setgLevel(0);\n    return true;\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(maxCol: number = this._bufferService.cols - 1): void {\n    this._activeBuffer.x = Math.min(maxCol, Math.max(0, this._activeBuffer.x));\n    this._activeBuffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._activeBuffer.scrollBottom, Math.max(this._activeBuffer.scrollTop, this._activeBuffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._activeBuffer.y));\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = this._activeBuffer.scrollTop + y;\n    } else {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._activeBuffer.x + x, this._activeBuffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): boolean {\n    // stop at scrollTop\n    const diffToTop = this._activeBuffer.y - this._activeBuffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): boolean {\n    // stop at scrollBottom\n    const diffToBottom = this._activeBuffer.scrollBottom - this._activeBuffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): boolean {\n    this._moveCursor(-(params.params[0] || 1), 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): boolean {\n    this.cursorDown(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): boolean {\n    this.cursorUp(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): boolean {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1\n    );\n    return true;\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): boolean {\n    this._setCursor(this._activeBuffer.x, (params.params[0] || 1) - 1);\n    return true;\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): boolean {\n    this._moveCursor(0, params.params[0] || 1);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): boolean {\n    this.cursorPosition(params);\n    return true;\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): boolean {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._activeBuffer.tabs[this._activeBuffer.x];\n    } else if (param === 3) {\n      this._activeBuffer.tabs = {};\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.nextStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.prevStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps \" q  Select Character Protection Attribute (DECSCA).\n   *\n   * @vt: #Y CSI DECSCA   \"Select Character Protection Attribute\"  \"CSI Ps \" q\"  \"Whether DECSED and DECSEL can erase (0=default, 2) or not (1).\"\n   */\n  public selectProtected(params: IParams): boolean {\n    const p = params.params[0];\n    if (p === 1) this._curAttrData.bg |= BgFlags.PROTECTED;\n    if (p === 2 || p === 0) this._curAttrData.bg &= ~BgFlags.PROTECTED;\n    return true;\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y The row index relative to the viewport.\n   * @param start The start x index of the range to be erased.\n   * @param end The end x index of the range to be erased (exclusive).\n   * @param clearWrap clear the isWrapped flag\n   * @param respectProtect Whether to respect the protection attribute (DECSCA).\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.replaceCells(\n      start,\n      end,\n      this._activeBuffer.getNullCell(this._eraseAttrData()),\n      this._eraseAttrData(),\n      respectProtect\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row. The cell gets replaced with the eraseChar of\n   * the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y);\n    if (line) {\n      line.fill(this._activeBuffer.getNullCell(this._eraseAttrData()), respectProtect);\n      this._bufferService.buffer.clearMarkers(this._activeBuffer.ybase + y);\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #Y CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Same as ED with respecting protection flag.\"\n   */\n  public eraseInDisplay(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        this._eraseInBufferLine(j++, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(j);\n        break;\n      case 1:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._activeBuffer.x + 1, true, respectProtect);\n        if (this._activeBuffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._activeBuffer.lines.get(j + 1)!.isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowTracker.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._activeBuffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._activeBuffer.lines.trimStart(scrollBackSize);\n          this._activeBuffer.ybase = Math.max(this._activeBuffer.ybase - scrollBackSize, 0);\n          this._activeBuffer.ydisp = Math.max(this._activeBuffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #Y CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Same as EL with respecting protecting flag.\"\n   */\n  public eraseInLine(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._activeBuffer.y, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._activeBuffer.x + 1, false, respectProtect);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._bufferService.cols, true, respectProtect);\n        break;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + this._activeBuffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      this._activeBuffer.lines.splice(row, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    j = this._bufferService.rows - 1 + this._activeBuffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(row, 1);\n      this._activeBuffer.lines.splice(j, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the\n   * blank characters. Text between the cursor and right margin moves to the right. Characters moved\n   * past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.insertCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to\n   * the left. Character attributes move with the characters. The terminal adds blank characters at\n   * the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.deleteCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 0, this._activeBuffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll\n   * margins, moving content to the right. Content at the right margin is lost. DECIC has no effect\n   * outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.replaceCells(\n        this._activeBuffer.x,\n        this._activeBuffer.x + (params.params[0] || 1),\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty, the\n   * preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is\n   * set. REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): boolean {\n    if (!this._parser.precedingCodepoint) {\n      return true;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n    return true;\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    if (this._is('xterm') || this._is('rxvt-unicode') || this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n    return true;\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n    return true;\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  private _is(term: string): boolean {\n    return (this._optionsService.rawOptions.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM).               | #Y      |\n   */\n  public setMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = true;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | Reverse wrap-around.                                    | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1016  | Enable SGR-Pixels Mouse Mode.                           | #Y      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = true;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._coreService.decPrivateModes.sendFocus = true;\n          this._onRequestSendFocus.fire();\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'SGR_PIXELS';\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n        // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM).                 | #Y      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = false;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | No reverse wrap-around.                                 | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1016  | Disable SGR-Pixels Mouse Mode.                          | #Y      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = false;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._coreService.decPrivateModes.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n        // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps $ p Request ANSI Mode (DECRQM).\n   *\n   * Reports CSI Ps; Pm $ y (DECRPM), where Ps is the mode number as in SM/RM,\n   * and Pm is the mode value:\n   *    0 - not recognized\n   *    1 - set\n   *    2 - reset\n   *    3 - permanently set\n   *    4 - permanently reset\n   *\n   * @vt: #Y  CSI   DECRQM  \"Request Mode\"  \"CSI Ps $p\"  \"Request mode state.\"\n   * Returns a report as `CSI Ps; Pm $ y` (DECRPM), where `Ps` is the mode number as in SM/RM\n   * or DECSET/DECRST, and `Pm` is the mode value:\n   * - 0: not recognized\n   * - 1: set\n   * - 2: reset\n   * - 3: permanently set\n   * - 4: permanently reset\n   *\n   * For modes not understood xterm.js always returns `notRecognized`. In general this means,\n   * that a certain operation mode is not implemented and cannot be used.\n   *\n   * Modes changing the active terminal buffer (47, 1047, 1049) are not subqueried\n   * and only report, whether the alternate buffer is set.\n   *\n   * Mouse encodings and mouse protocols are handled mutual exclusive,\n   * thus only one of each of those can be set at a given time.\n   *\n   * There is a chance, that some mode reports are not fully in line with xterm.js' behavior,\n   * e.g. if the default implementation already exposes a certain behavior. If you find\n   * discrepancies in the mode reports, please file a bug.\n   */\n  public requestMode(params: IParams, ansi: boolean): boolean {\n    // return value as in DECRPM\n    const enum V {\n      NOT_RECOGNIZED = 0,\n      SET = 1,\n      RESET = 2,\n      PERMANENTLY_SET = 3,\n      PERMANENTLY_RESET = 4\n    }\n\n    // access helpers\n    const dm = this._coreService.decPrivateModes;\n    const { activeProtocol: mouseProtocol, activeEncoding: mouseEncoding } = this._coreMouseService;\n    const cs = this._coreService;\n    const { buffers, cols } = this._bufferService;\n    const { active, alt } = buffers;\n    const opts = this._optionsService.rawOptions;\n\n    const f = (m: number, v: V): boolean => {\n      cs.triggerDataEvent(`${C0.ESC}[${ansi ? '' : '?'}${m};${v}$y`);\n      return true;\n    };\n    const b2v = (value: boolean): V => value ? V.SET : V.RESET;\n\n    const p = params.params[0];\n\n    if (ansi) {\n      if (p === 2) return f(p, V.PERMANENTLY_RESET);\n      if (p === 4) return f(p, b2v(cs.modes.insertMode));\n      if (p === 12) return f(p, V.PERMANENTLY_SET);\n      if (p === 20) return f(p, b2v(opts.convertEol));\n      return f(p, V.NOT_RECOGNIZED);\n    }\n\n    if (p === 1) return f(p, b2v(dm.applicationCursorKeys));\n    if (p === 3) return f(p, opts.windowOptions.setWinLines ? (cols === 80 ? V.RESET : cols === 132 ? V.SET : V.NOT_RECOGNIZED) : V.NOT_RECOGNIZED);\n    if (p === 6) return f(p, b2v(dm.origin));\n    if (p === 7) return f(p, b2v(dm.wraparound));\n    if (p === 8) return f(p, V.PERMANENTLY_SET);\n    if (p === 9) return f(p, b2v(mouseProtocol === 'X10'));\n    if (p === 12) return f(p, b2v(opts.cursorBlink));\n    if (p === 25) return f(p, b2v(!cs.isCursorHidden));\n    if (p === 45) return f(p, b2v(dm.reverseWraparound));\n    if (p === 66) return f(p, b2v(dm.applicationKeypad));\n    if (p === 67) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1000) return f(p, b2v(mouseProtocol === 'VT200'));\n    if (p === 1002) return f(p, b2v(mouseProtocol === 'DRAG'));\n    if (p === 1003) return f(p, b2v(mouseProtocol === 'ANY'));\n    if (p === 1004) return f(p, b2v(dm.sendFocus));\n    if (p === 1005) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1006) return f(p, b2v(mouseEncoding === 'SGR'));\n    if (p === 1015) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1016) return f(p, b2v(mouseEncoding === 'SGR_PIXELS'));\n    if (p === 1048) return f(p, V.SET); // xterm always returns SET here\n    if (p === 47 || p === 1047 || p === 1049) return f(p, b2v(active === alt));\n    if (p === 2004) return f(p, b2v(dm.bracketedPasteMode));\n    return f(p, V.NOT_RECOGNIZED);\n  }\n\n  /**\n   * Helper to write color information packed with color mode.\n   */\n  private _updateAttrColor(color: number, mode: number, c1: number, c2: number, c3: number): number {\n    if (mode === 2) {\n      color |= Attributes.CM_RGB;\n      color &= ~Attributes.RGB_MASK;\n      color |= AttributeData.fromColorRGB([c1, c2, c3]);\n    } else if (mode === 5) {\n      color &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n      color |= Attributes.CM_P256 | (c1 & 0xff);\n    }\n    return color;\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance)!;\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n        || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    switch (accu[0]) {\n      case 38:\n        attr.fg = this._updateAttrColor(attr.fg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 48:\n        attr.bg = this._updateAttrColor(attr.bg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 58:\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = this._updateAttrColor(attr.extended.underlineColor, accu[1], accu[3], accu[4], accu[5]);\n    }\n\n    return advance;\n  }\n\n  /**\n   * SGR 4 subparams:\n   *    4:0   -   equal to SGR 24 (turn off all underline)\n   *    4:1   -   equal to SGR 4 (single underline)\n   *    4:2   -   equal to SGR 21 (double underline)\n   *    4:3   -   curly underline\n   *    4:4   -   dotted underline\n   *    4:5   -   dashed underline\n   */\n  private _processUnderline(style: number, attr: IAttributeData): void {\n    // treat extended attrs as immutable, thus always clone from old one\n    // this is needed since the buffer only holds references to it\n    attr.extended = attr.extended.clone();\n\n    // default to 1 == single underline\n    if (!~style || style > 5) {\n      style = 1;\n    }\n    attr.extended.underlineStyle = style;\n    attr.fg |= FgFlags.UNDERLINE;\n\n    // 0 deactivates underline\n    if (style === 0) {\n      attr.fg &= ~FgFlags.UNDERLINE;\n    }\n\n    // update HAS_EXTENDED in BG\n    attr.updateExtended();\n  }\n\n  private _processSGR0(attr: IAttributeData): void {\n    attr.fg = DEFAULT_ATTR_DATA.fg;\n    attr.bg = DEFAULT_ATTR_DATA.bg;\n    attr.extended = attr.extended.clone();\n    // Reset underline style and color. Note that we don't want to reset other\n    // fields such as the url id.\n    attr.extended.underlineStyle = UnderlineStyle.NONE;\n    attr.extended.underlineColor &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    attr.updateExtended();\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined (see below for style support).                | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters (strikethrough).                  | #Y      |\n   * | 21        | Doubly underlined.                                       | #Y      |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out (strikethrough).                         | #Y      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 53        | Overlined.                                               | #Y      |\n   * | 55        | Not Overlined.                                           | #Y      |\n   * | 58        | Underline color: Extended color.                         | #P[Support for RGB and indexed colors, see below.] |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Underline supports subparams to denote the style in the form `4 : x`:\n   *\n   * | x      | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | No underline. Same as `SGR 24 m`.                             | #Y      |\n   * | 1      | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   * | 2      | Double underline.                                             | #Y      |\n   * | 3      | Curly underline.                                              | #Y      |\n   * | 4      | Dotted underline.                                             | #Y      |\n   * | 5      | Dashed underline.                                             | #Y      |\n   * | other  | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38), background (Ps=48) and underline (Ps=58)\n   * as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): boolean {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._processSGR0(this._curAttrData);\n      return true;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        this._processSGR0(attr);\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n        this._processUnderline(params.hasSubParams(i) ? params.getSubParams(i)![0] : UnderlineStyle.SINGLE, attr);\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 9) {\n        // strikethrough\n        attr.fg |= FgFlags.STRIKETHROUGH;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 21) {\n        // double underline\n        this._processUnderline(UnderlineStyle.DOUBLE, attr);\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n        this._processUnderline(UnderlineStyle.NONE, attr);\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 29) {\n        // not strikethrough\n        attr.fg &= ~FgFlags.STRIKETHROUGH;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48 || p === 58) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 53) {\n        // overline\n        attr.bg |= BgFlags.OVERLINE;\n      } else if (p === 55) {\n        // not overline\n        attr.bg &= ~BgFlags.OVERLINE;\n      } else if (p === 59) {\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = -1;\n        attr.updateExtended();\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): boolean {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n    return true;\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): boolean {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full\n   * terminal bootstrap, DECSTR only resets certain attributes. For most needs DECSTR should be\n   * sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): boolean {\n    this._coreService.isCursorHidden = false;\n    this._onRequestSyncScrollBar.fire();\n    this._activeBuffer.scrollTop = 0;\n    this._activeBuffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._activeBuffer.savedX = 0;\n    this._activeBuffer.savedY = this._activeBuffer.ybase;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n    return true;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): boolean {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): boolean {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) > this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._activeBuffer.scrollTop = top - 1;\n      this._activeBuffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): boolean {\n    if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n      return true;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (second !== 2) {\n          this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_WIN_SIZE_PIXELS);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_CELL_SIZE_PIXELS);\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop()!);\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop()!);\n          }\n        }\n        break;\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): boolean {\n    this._activeBuffer.savedX = this._activeBuffer.x;\n    this._activeBuffer.savedY = this._activeBuffer.ybase + this._activeBuffer.y;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n    return true;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): boolean {\n    this._activeBuffer.x = this._activeBuffer.savedX || 0;\n    this._activeBuffer.y = Math.max(this._activeBuffer.savedY - this._activeBuffer.ybase, 0);\n    this._curAttrData.fg = this._activeBuffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._activeBuffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._activeBuffer.savedCharset) {\n      this._charsetService.charset = this._activeBuffer.savedCharset;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event\n   * `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): boolean {\n    this._windowTitle = data;\n    this._onTitleChange.fire(data);\n    return true;\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): boolean {\n    this._iconName = data;\n    return true;\n  }\n\n  /**\n   * OSC 4; <num> ; <text> ST (set ANSI color <num> to <text>)\n   *\n   * @vt: #Y    OSC    4    \"Set ANSI color\"   \"OSC 4 ; c ; spec BEL\" \"Change color number `c` to the color specified by `spec`.\"\n   * `c` is the color index between 0 and 255. The color format of `spec` is derived from\n   * `XParseColor` (see OSC 10 for supported formats). There may be multipe `c ; spec` pairs present\n   * in the same instruction. If `spec` contains `?` the terminal returns a sequence with the\n   * currently set color.\n   */\n  public setOrReportIndexedColor(data: string): boolean {\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    while (slots.length > 1) {\n      const idx = slots.shift() as string;\n      const spec = slots.shift() as string;\n      if (/^\\d+$/.exec(idx)) {\n        const index = parseInt(idx);\n        if (isValidColorIndex(index)) {\n          if (spec === '?') {\n            event.push({ type: ColorRequestType.REPORT, index });\n          } else {\n            const color = parseColor(spec);\n            if (color) {\n              event.push({ type: ColorRequestType.SET, index, color });\n            }\n          }\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 8 ; <params> ; <uri> ST - create hyperlink\n   * OSC 8 ; ; ST - finish hyperlink\n   *\n   * Test case:\n   *\n   * ```sh\n   * printf '\\e]8;;http://example.com\\e\\\\This is a link\\e]8;;\\e\\\\\\n'\n   * ```\n   *\n   * @vt: #Y    OSC    8    \"Create hyperlink\"   \"OSC 8 ; params ; uri BEL\" \"Create a hyperlink to `uri` using `params`.\"\n   * `uri` is a hyperlink starting with `http://`, `https://`, `ftp://`, `file://` or `mailto://`. `params` is an\n   * optional list of key=value assignments, separated by the : character.\n   * Example: `id=xyz123:foo=bar:baz=quux`.\n   * Currently only the id key is defined. Cells that share the same ID and URI share hover\n   * feedback. Use `OSC 8 ; ; BEL` to finish the current hyperlink.\n   */\n  public setHyperlink(data: string): boolean {\n    const args = data.split(';');\n    if (args.length < 2) {\n      return false;\n    }\n    if (args[1]) {\n      return this._createHyperlink(args[0], args[1]);\n    }\n    if (args[0]) {\n      return false;\n    }\n    return this._finishHyperlink();\n  }\n\n  private _createHyperlink(params: string, uri: string): boolean {\n    // It's legal to open a new hyperlink without explicitly finishing the previous one\n    if (this._getCurrentLinkId()) {\n      this._finishHyperlink();\n    }\n    const parsedParams = params.split(':');\n    let id: string | undefined;\n    const idParamIndex = parsedParams.findIndex(e => e.startsWith('id='));\n    if (idParamIndex !== -1) {\n      id = parsedParams[idParamIndex].slice(3) || undefined;\n    }\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = this._oscLinkService.registerLink({ id, uri });\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  private _finishHyperlink(): boolean {\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = 0;\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  // special colors - OSC 10 | 11 | 12\n  private _specialColors = [SpecialColorIndex.FOREGROUND, SpecialColorIndex.BACKGROUND, SpecialColorIndex.CURSOR];\n\n  /**\n   * Apply colors requests for special colors in OSC 10 | 11 | 12.\n   * Since these commands are stacking from multiple parameters,\n   * we handle them in a loop with an entry offset to `_specialColors`.\n   */\n  private _setOrReportSpecialColor(data: string, offset: number): boolean {\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i, ++offset) {\n      if (offset >= this._specialColors.length) break;\n      if (slots[i] === '?') {\n        this._onColor.fire([{ type: ColorRequestType.REPORT, index: this._specialColors[offset] }]);\n      } else {\n        const color = parseColor(slots[i]);\n        if (color) {\n          this._onColor.fire([{ type: ColorRequestType.SET, index: this._specialColors[offset], color }]);\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * OSC 10 ; <xcolor name>|<?> ST - set or query default foreground color\n   *\n   * @vt: #Y  OSC   10    \"Set or query default foreground color\"   \"OSC 10 ; Pt BEL\"  \"Set or query default foreground color.\"\n   * To set the color, the following color specification formats are supported:\n   * - `rgb:<red>/<green>/<blue>` for  `<red>, <green>, <blue>` in `h | hh | hhh | hhhh`, where\n   *   `h` is a single hexadecimal digit (case insignificant). The different widths scale\n   *   from 4 bit (`h`) to 16 bit (`hhhh`) and get converted to 8 bit (`hh`).\n   * - `#RGB` - 4 bits per channel, expanded to `#R0G0B0`\n   * - `#RRGGBB` - 8 bits per channel\n   * - `#RRRGGGBBB` - 12 bits per channel, truncated to `#RRGGBB`\n   * - `#RRRRGGGGBBBB` - 16 bits per channel, truncated to `#RRGGBB`\n   *\n   * **Note:** X11 named colors are currently unsupported.\n   *\n   * If `Pt` contains `?` instead of a color specification, the terminal\n   * returns a sequence with the current default foreground color\n   * (use that sequence to restore the color after changes).\n   *\n   * **Note:** Other than xterm, xterm.js does not support OSC 12 - 19.\n   * Therefore stacking multiple `Pt` separated by `;` only works for the first two entries.\n   */\n  public setOrReportFgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 0);\n  }\n\n  /**\n   * OSC 11 ; <xcolor name>|<?> ST - set or query default background color\n   *\n   * @vt: #Y  OSC   11    \"Set or query default background color\"   \"OSC 11 ; Pt BEL\"  \"Same as OSC 10, but for default background.\"\n   */\n  public setOrReportBgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 1);\n  }\n\n  /**\n   * OSC 12 ; <xcolor name>|<?> ST - set or query default cursor color\n   *\n   * @vt: #Y  OSC   12    \"Set or query default cursor color\"   \"OSC 12 ; Pt BEL\"  \"Same as OSC 10, but for default cursor color.\"\n   */\n  public setOrReportCursorColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 2);\n  }\n\n  /**\n   * OSC 104 ; <num> ST - restore ANSI color <num>\n   *\n   * @vt: #Y  OSC   104    \"Reset ANSI color\"   \"OSC 104 ; c BEL\" \"Reset color number `c` to themed color.\"\n   * `c` is the color index between 0 and 255. This function restores the default color for `c` as\n   * specified by the loaded theme. Any number of `c` parameters may be given.\n   * If no parameters are given, the entire indexed color table will be reset.\n   */\n  public restoreIndexedColor(data: string): boolean {\n    if (!data) {\n      this._onColor.fire([{ type: ColorRequestType.RESTORE }]);\n      return true;\n    }\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i) {\n      if (/^\\d+$/.exec(slots[i])) {\n        const index = parseInt(slots[i]);\n        if (isValidColorIndex(index)) {\n          event.push({ type: ColorRequestType.RESTORE, index });\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 110 ST - restore default foreground color\n   *\n   * @vt: #Y  OSC   110    \"Restore default foreground color\"   \"OSC 110 BEL\"  \"Restore default foreground to themed color.\"\n   */\n  public restoreFgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.FOREGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 111 ST - restore default background color\n   *\n   * @vt: #Y  OSC   111    \"Restore default background color\"   \"OSC 111 BEL\"  \"Restore default background to themed color.\"\n   */\n  public restoreBgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.BACKGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 112 ST - restore default cursor color\n   *\n   * @vt: #Y  OSC   112    \"Restore default cursor color\"   \"OSC 112 BEL\"  \"Restore default cursor to themed color.\"\n   */\n  public restoreCursorColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.CURSOR }]);\n    return true;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): boolean {\n    this._activeBuffer.x = 0;\n    this.index();\n    return true;\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): boolean {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): boolean {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): boolean {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n    return true;\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): boolean {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return true;\n    }\n    if (collectAndFlag[0] === '/') {\n      return true;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return true;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): boolean {\n    this._restrictCursor();\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): boolean {\n    this._activeBuffer.tabs[this._activeBuffer.x] = true;\n    return true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): boolean {\n    this._restrictCursor();\n    if (this._activeBuffer.y === this._activeBuffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = this._activeBuffer.scrollBottom - this._activeBuffer.scrollTop;\n      this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase + this._activeBuffer.y, scrollRegionHeight, 1);\n      this._activeBuffer.lines.set(this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    } else {\n      this._activeBuffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n    return true;\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): boolean {\n    this._parser.reset();\n    this._onRequestReset.fire();\n    return true;\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): boolean {\n    this._charsetService.setgLevel(level);\n    return true;\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): boolean {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = this._activeBuffer.ybase + this._activeBuffer.y + yOffset;\n      const line = this._activeBuffer.lines.get(row);\n      if (line) {\n        line.fill(cell);\n        line.isWrapped = false;\n      }\n    }\n    this._dirtyRowTracker.markAllDirty();\n    this._setCursor(0, 0);\n    return true;\n  }\n\n\n  /**\n   * DCS $ q Pt ST\n   *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n   *   Request Status String (DECRQSS), VT420 and up.\n   *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n   *\n   * @vt: #P[Limited support, see below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n   * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the\n   * corresponding CSI string, `ESC P 0 ST` for invalid requests.\n   *\n   * Supported requests and responses:\n   *\n   * | Type                             | Request           | Response (`Pt`)                                       |\n   * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n   * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n   * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n   * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n   * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | `Ps \" q` (DECSCA 2 is reported as Ps = 0)             |\n   * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n   *\n   *\n   * TODO:\n   * - fix SGR report\n   * - either check which conformance is better suited or remove the report completely\n   *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n   */\n  public requestStatusString(data: string, params: IParams): boolean {\n    const f = (s: string): boolean => {\n      this._coreService.triggerDataEvent(`${C0.ESC}${s}${C0.ESC}\\\\`);\n      return true;\n    };\n\n    // access helpers\n    const b = this._bufferService.buffer;\n    const opts = this._optionsService.rawOptions;\n    const STYLES: { [key: string]: number } = { 'block': 2, 'underline': 4, 'bar': 6 };\n\n    if (data === '\"q') return f(`P1$r${this._curAttrData.isProtected() ? 1 : 0}\"q`);\n    if (data === '\"p') return f(`P1$r61;1\"p`);\n    if (data === 'r') return f(`P1$r${b.scrollTop + 1};${b.scrollBottom + 1}r`);\n    // FIXME: report real SGR settings instead of 0m\n    if (data === 'm') return f(`P1$r0m`);\n    if (data === ' q') return f(`P1$r${STYLES[opts.cursorStyle] - (opts.cursorBlink ? 1 : 0)} q`);\n    return f(`P0$r`);\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    this._dirtyRowTracker.markRangeDirty(y1, y2);\n  }\n}\n\nexport interface IDirtyRowTracker {\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nclass DirtyRowTracker implements IDirtyRowTracker {\n  public start!: number;\n  public end!: number;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this.start = this._bufferService.buffer.y;\n    this.end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this.start) {\n      this.start = y;\n    } else if (y > this.end) {\n      this.end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      $temp = y1;\n      y1 = y2;\n      y2 = $temp;\n    }\n    if (y1 < this.start) {\n      this.start = y1;\n    }\n    if (y2 > this.end) {\n      this.end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n\nfunction isValidColorIndex(value: number): value is ColorIndex {\n  return 0 <= value && value < 256;\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\n  private _value?: T;\n  private _isDisposed = false;\n\n  /**\n   * Gets the value if it exists.\n   */\n  public get value(): T | undefined {\n    return this._isDisposed ? undefined : this._value;\n  }\n\n  /**\n   * Sets the value, disposing of the old value if it exists.\n   */\n  public set value(value: T | undefined) {\n    if (this._isDisposed || value === this._value) {\n      return;\n    }\n    this._value?.dispose();\n    this._value = value;\n  }\n\n  /**\n   * Resets the stored value and disposes of the previously stored value.\n   */\n  public clear(): void {\n    this.value = undefined;\n  }\n\n  public dispose(): void {\n    this._isDisposed = true;\n    this._value?.dispose();\n    this._value = undefined;\n  }\n}\n\n/**\n * Wrap a function in a disposable.\n */\nexport function toDisposable(f: () => void): IDisposable {\n  return { dispose: f };\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class TwoKeyMap<TFirst extends string | number, TSecond extends string | number, TValue> {\n  private _data: { [bg: string | number]: { [fg: string | number]: TValue | undefined } | undefined } = {};\n\n  public set(first: TFirst, second: TSecond, value: TValue): void {\n    if (!this._data[first]) {\n      this._data[first] = {};\n    }\n    this._data[first as string | number]![second] = value;\n  }\n\n  public get(first: TFirst, second: TSecond): TValue | undefined {\n    return this._data[first as string | number] ? this._data[first as string | number]![second] : undefined;\n  }\n\n  public clear(): void {\n    this._data = {};\n  }\n}\n\nexport class FourKeyMap<TFirst extends string | number, TSecond extends string | number, TThird extends string | number, TFourth extends string | number, TValue> {\n  private _data: TwoKeyMap<TFirst, TSecond, TwoKeyMap<TThird, TFourth, TValue>> = new TwoKeyMap();\n\n  public set(first: TFirst, second: TSecond, third: TThird, fourth: TFourth, value: TValue): void {\n    if (!this._data.get(first, second)) {\n      this._data.set(first, second, new TwoKeyMap());\n    }\n    this._data.get(first, second)!.set(third, fourth, value);\n  }\n\n  public get(first: TFirst, second: TSecond, third: TThird, fourth: TFourth): TValue | undefined {\n    return this._data.get(first, second)?.get(third, fourth);\n  }\n\n  public clear(): void {\n    this._data.clear();\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nexport const isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\nexport function getSafariVersion(): number {\n  if (!isSafari) {\n    return 0;\n  }\n  const majorVersion = userAgent.match(/Version\\/(\\d+)/);\n  if (majorVersion === null || majorVersion.length < 2) {\n    return 0;\n  }\n  return parseInt(majorVersion[1]);\n}\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n// Note that when this is true, isLinux will also be true.\nexport const isChromeOS = /\\bCrOS\\b/.test(userAgent);\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// Work variables to avoid garbage collection.\nlet i = 0;\n\n/**\n * A generic list that is maintained in sorted order and allows values with duplicate keys. This\n * list is based on binary search and as such locating a key will take O(log n) amortized, this\n * includes the by key iterator.\n */\nexport class SortedList<T> {\n  private readonly _array: T[] = [];\n\n  constructor(\n    private readonly _getKey: (value: T) => number\n  ) {\n  }\n\n  public clear(): void {\n    this._array.length = 0;\n  }\n\n  public insert(value: T): void {\n    if (this._array.length === 0) {\n      this._array.push(value);\n      return;\n    }\n    i = this._search(this._getKey(value));\n    this._array.splice(i, 0, value);\n  }\n\n  public delete(value: T): boolean {\n    if (this._array.length === 0) {\n      return false;\n    }\n    const key = this._getKey(value);\n    if (key === undefined) {\n      return false;\n    }\n    i = this._search(key);\n    if (i === -1) {\n      return false;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return false;\n    }\n    do {\n      if (this._array[i] === value) {\n        this._array.splice(i, 1);\n        return true;\n      }\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n    return false;\n  }\n\n  public *getKeyIterator(key: number): IterableIterator<T> {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      yield this._array[i];\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public forEachByKey(key: number, callback: (value: T) => void): void {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      callback(this._array[i]);\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public values(): IterableIterator<T> {\n    // Duplicate the array to avoid issues when _array changes while iterating\n    return [...this._array].values();\n  }\n\n  private _search(key: number): number {\n    let min = 0;\n    let max = this._array.length - 1;\n    while (max >= min) {\n      let mid = (min + max) >> 1;\n      const midKey = this._getKey(this._array[mid]);\n      if (midKey > key) {\n        max = mid - 1;\n      } else if (midKey < key) {\n        min = mid + 1;\n      } else {\n        // key in list, walk to lowest duplicate\n        while (mid > 0 && this._getKey(this._array[mid - 1]) === key) {\n          mid--;\n        }\n        return mid;\n      }\n    }\n    // key not in list\n    // still return closest min (also used as insert position)\n    return min;\n  }\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\n\ninterface ITaskQueue {\n  /**\n   * Adds a task to the queue which will run in a future idle callback.\n   * To avoid perceivable stalls on the mainthread, tasks with heavy workload\n   * should split their work into smaller pieces and return `true` to get\n   * called again until the work is done (on falsy return value).\n   */\n  enqueue(task: () => boolean | void): void;\n\n  /**\n   * Flushes the queue, running all remaining tasks synchronously.\n   */\n  flush(): void;\n\n  /**\n   * Clears any remaining tasks from the queue, these will not be run.\n   */\n  clear(): void;\n}\n\ninterface ITaskDeadline {\n  timeRemaining(): number;\n}\ntype CallbackWithDeadline = (deadline: ITaskDeadline) => void;\n\nabstract class TaskQueue implements ITaskQueue {\n  private _tasks: (() => boolean | void)[] = [];\n  private _idleCallback?: number;\n  private _i = 0;\n\n  protected abstract _requestCallback(callback: CallbackWithDeadline): number;\n  protected abstract _cancelCallback(identifier: number): void;\n\n  public enqueue(task: () => boolean | void): void {\n    this._tasks.push(task);\n    this._start();\n  }\n\n  public flush(): void {\n    while (this._i < this._tasks.length) {\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n    }\n    this.clear();\n  }\n\n  public clear(): void {\n    if (this._idleCallback) {\n      this._cancelCallback(this._idleCallback);\n      this._idleCallback = undefined;\n    }\n    this._i = 0;\n    this._tasks.length = 0;\n  }\n\n  private _start(): void {\n    if (!this._idleCallback) {\n      this._idleCallback = this._requestCallback(this._process.bind(this));\n    }\n  }\n\n  private _process(deadline: ITaskDeadline): void {\n    this._idleCallback = undefined;\n    let taskDuration = 0;\n    let longestTask = 0;\n    let lastDeadlineRemaining = deadline.timeRemaining();\n    let deadlineRemaining = 0;\n    while (this._i < this._tasks.length) {\n      taskDuration = Date.now();\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n      // other than performance.now, Date.now might not be stable (changes on wall clock changes),\n      // this is not an issue here as a clock change during a short running task is very unlikely\n      // in case it still happened and leads to negative duration, simply assume 1 msec\n      taskDuration = Math.max(1, Date.now() - taskDuration);\n      longestTask = Math.max(taskDuration, longestTask);\n      // Guess the following task will take a similar time to the longest task in this batch, allow\n      // additional room to try avoid exceeding the deadline\n      deadlineRemaining = deadline.timeRemaining();\n      if (longestTask * 1.5 > deadlineRemaining) {\n        // Warn when the time exceeding the deadline is over 20ms, if this happens in practice the\n        // task should be split into sub-tasks to ensure the UI remains responsive.\n        if (lastDeadlineRemaining - taskDuration < -20) {\n          console.warn(`task queue exceeded allotted deadline by ${Math.abs(Math.round(lastDeadlineRemaining - taskDuration))}ms`);\n        }\n        this._start();\n        return;\n      }\n      lastDeadlineRemaining = deadlineRemaining;\n    }\n    this.clear();\n  }\n}\n\n/**\n * A queue of that runs tasks over several tasks via setTimeout, trying to maintain above 60 frames\n * per second. The tasks will run in the order they are enqueued, but they will run some time later,\n * and care should be taken to ensure they're non-urgent and will not introduce race conditions.\n */\nexport class PriorityTaskQueue extends TaskQueue {\n  protected _requestCallback(callback: CallbackWithDeadline): number {\n    return setTimeout(() => callback(this._createDeadline(16)));\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    clearTimeout(identifier);\n  }\n\n  private _createDeadline(duration: number): ITaskDeadline {\n    const end = Date.now() + duration;\n    return {\n      timeRemaining: () => Math.max(0, end - Date.now())\n    };\n  }\n}\n\nclass IdleTaskQueueInternal extends TaskQueue {\n  protected _requestCallback(callback: IdleRequestCallback): number {\n    return requestIdleCallback(callback);\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    cancelIdleCallback(identifier);\n  }\n}\n\n/**\n * A queue of that runs tasks over several idle callbacks, trying to respect the idle callback's\n * deadline given by the environment. The tasks will run in the order they are enqueued, but they\n * will run some time later, and care should be taken to ensure they're non-urgent and will not\n * introduce race conditions.\n *\n * This reverts to a {@link PriorityTaskQueue} if the environment does not support idle callbacks.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const IdleTaskQueue = (!isNode && 'requestIdleCallback' in window) ? IdleTaskQueueInternal : PriorityTaskQueue;\n\n/**\n * An object that tracks a single debounced task that will run on the next idle frame. When called\n * multiple times, only the last set task will run.\n */\nexport class DebouncedIdleTask {\n  private _queue: ITaskQueue;\n\n  constructor() {\n    this._queue = new IdleTaskQueue();\n  }\n\n  public set(task: () => boolean | void): void {\n    this._queue.clear();\n    this._queue.enqueue(task);\n  }\n\n  public flush(): void {\n    this._queue.flush();\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle, ExtFlags } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     {\n    if (this.hasExtendedAttrs() && this.extended.underlineStyle !== UnderlineStyle.NONE) {\n      return 1;\n    }\n    return this.fg & FgFlags.UNDERLINE;\n  }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n  public isProtected(): number     { return this.bg & BgFlags.PROTECTED; }\n  public isOverline(): number      { return this.bg & BgFlags.OVERLINE; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  private _ext: number = 0;\n  public get ext(): number {\n    if (this._urlId) {\n      return (\n        (this._ext & ~ExtFlags.UNDERLINE_STYLE) |\n        (this.underlineStyle << 26)\n      );\n    }\n    return this._ext;\n  }\n  public set ext(value: number) { this._ext = value; }\n\n  public get underlineStyle(): UnderlineStyle {\n    // Always return the URL style if it has one\n    if (this._urlId) {\n      return UnderlineStyle.DASHED;\n    }\n    return (this._ext & ExtFlags.UNDERLINE_STYLE) >> 26;\n  }\n  public set underlineStyle(value: UnderlineStyle) {\n    this._ext &= ~ExtFlags.UNDERLINE_STYLE;\n    this._ext |= (value << 26) & ExtFlags.UNDERLINE_STYLE;\n  }\n\n  public get underlineColor(): number {\n    return this._ext & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n  public set underlineColor(value: number) {\n    this._ext &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    this._ext |= value & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n\n  private _urlId: number = 0;\n  public get urlId(): number {\n    return this._urlId;\n  }\n  public set urlId(value: number) {\n    this._urlId = value;\n  }\n\n  constructor(\n    ext: number = 0,\n    urlId: number = 0\n  ) {\n    this._ext = ext;\n    this._urlId = urlId;\n  }\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this._ext, this._urlId);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE && this._urlId === 0;\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IdleTaskQueue } from 'common/TaskQueue';\nimport { IAttributeData, IBufferLine, ICellData, ICharset } from 'common/Types';\nimport { ExtendedAttrs } from 'common/buffer/AttributeData';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { getWrappedLineTrimmedLength, reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths } from 'common/buffer/BufferReflow';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_CODE, NULL_CELL_WIDTH, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_CODE, WHITESPACE_CELL_WIDTH } from 'common/buffer/Constants';\nimport { Marker } from 'common/buffer/Marker';\nimport { IBuffer } from 'common/buffer/Types';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  public tabs: { [column: number]: boolean | undefined } = {};\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | undefined = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n  private _isClearing: boolean = false;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n      this._nullCell.extended = attr.extended;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n      this._nullCell.extended = new ExtendedAttrs();\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n      this._whitespaceCell.extended = attr.extended;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n      this._whitespaceCell.extended = new ExtendedAttrs();\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.rawOptions.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // count bufferlines with overly big memory to be cleaned afterwards\n    let dirtyMemoryLines = 0;\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.rawOptions.windowsMode || this._optionsService.rawOptions.windowsPty.backend !== undefined || this._optionsService.rawOptions.windowsPty.buildNumber !== undefined) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n\n    this._memoryCleanupQueue.clear();\n    // schedule memory cleanup only, if more than 10% of the lines are affected\n    if (dirtyMemoryLines > 0.1 * this.lines.length) {\n      this._memoryCleanupPosition = 0;\n      this._memoryCleanupQueue.enqueue(() => this._batchedMemoryCleanup());\n    }\n  }\n\n  private _memoryCleanupQueue = new IdleTaskQueue();\n  private _memoryCleanupPosition = 0;\n\n  private _batchedMemoryCleanup(): boolean {\n    let normalRun = true;\n    if (this._memoryCleanupPosition >= this.lines.length) {\n      // cleanup made it once through all lines, thus rescan in loop below to also catch shifted\n      // lines, which should finish rather quick if there are no more cleanups pending\n      this._memoryCleanupPosition = 0;\n      normalRun = false;\n    }\n    let counted = 0;\n    while (this._memoryCleanupPosition < this.lines.length) {\n      counted += this.lines.get(this._memoryCleanupPosition++)!.cleanupMemory();\n      // cleanup max 100 lines per batch\n      if (counted > 100) {\n        return true;\n      }\n    }\n    // normal runs always need another rescan afterwards\n    // if we made it here with normalRun=false, we are in a final run\n    // and can end the cleanup task for sure\n    return normalRun;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    const windowsPty = this._optionsService.rawOptions.windowsPty;\n    if (windowsPty && windowsPty.buildNumber) {\n      return this._hasScrollback && windowsPty.backend === 'conpty' && windowsPty.buildNumber >= 21376;\n    }\n    return this._hasScrollback && !this._optionsService.rawOptions.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        if (wrappedLines[destLineIndex] === undefined) {\n          // Sanity check that the line exists, this has been known to fail for an unknown reason\n          // which would stop the reflow from happening if an exception would throw.\n          break;\n        }\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param lineIndex The absolute index of the line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.rawOptions.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Clears markers on single line.\n   * @param y The line to clear.\n   */\n  public clearMarkers(y: number): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      if (this.markers[i].line === y) {\n        this.markers[i].dispose();\n        this.markers.splice(i--, 1);\n      }\n    }\n    this._isClearing = false;\n  }\n\n  /**\n   * Clears markers on all lines\n   */\n  public clearAllMarkers(): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      this.markers[i].dispose();\n      this.markers.splice(i--, 1);\n    }\n    this._isClearing = false;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    if (!this._isClearing) {\n      this.markers.splice(this.markers.indexOf(marker), 1);\n    }\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IAttributeData, IBufferLine, ICellData, IExtendedAttrs } from 'common/Types';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\nimport { CellData } from 'common/buffer/CellData';\nimport { Attributes, BgFlags, CHAR_DATA_ATTR_INDEX, CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, Content, NULL_CELL_CHAR, NULL_CELL_CODE, NULL_CELL_WIDTH, WHITESPACE_CELL_CHAR } from 'common/buffer/Constants';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n// Work variables to avoid garbage collection\nlet $startIndex = 0;\n\n/** Factor when to cleanup underlying array buffer after shrinking. */\nconst CLEANUP_THRESHOLD = 2;\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  protected _extendedAttrs: {[index: number]: IExtendedAttrs | undefined} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /** Get state of protected flag. */\n  public isProtected(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG] & BgFlags.PROTECTED;\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    $startIndex = index * CELL_SIZE;\n    cell.content = this._data[$startIndex + Cell.CONTENT];\n    cell.fg = this._data[$startIndex + Cell.FG];\n    cell.bg = this._data[$startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      cell.extended = this._extendedAttrs[index]!;\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = cell.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number, eAttrs: IExtendedAttrs): void {\n    if (bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = eAttrs;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodePoint(this.length - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodePoint(pos, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, eraseAttr?: IAttributeData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      if (start && this.getWidth(start - 1) === 2 && !this.isProtected(start - 1)) {\n        this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      if (end < this.length && this.getWidth(end - 1) === 2 && !this.isProtected(end)) {\n        this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      while (start < end  && start < this.length) {\n        if (!this.isProtected(start)) {\n          this.setCell(start, fillCellData);\n        }\n        start++;\n      }\n      return;\n    }\n\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  /**\n   * Resize BufferLine to `cols` filling excess cells with `fillCellData`.\n   * The underlying array buffer will not change if there is still enough space\n   * to hold the new buffer line data.\n   * Returns a boolean indicating, whether a `cleanupMemory` call would free\n   * excess memory (true after shrinking > CLEANUP_THRESHOLD).\n   */\n  public resize(cols: number, fillCellData: ICellData): boolean {\n    if (cols === this.length) {\n      return this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n    }\n    const uint32Cells = cols * CELL_SIZE;\n    if (cols > this.length) {\n      if (this._data.buffer.byteLength >= uint32Cells * 4) {\n        // optimization: avoid alloc and data copy if buffer has enough room\n        this._data = new Uint32Array(this._data.buffer, 0, uint32Cells);\n      } else {\n        // slow path: new alloc and full data copy\n        const data = new Uint32Array(uint32Cells);\n        data.set(this._data);\n        this._data = data;\n      }\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      // optimization: just shrink the view on existing buffer\n      this._data = this._data.subarray(0, uint32Cells);\n      // Remove any cut off combined data\n      const keys = Object.keys(this._combined);\n      for (let i = 0; i < keys.length; i++) {\n        const key = parseInt(keys[i], 10);\n        if (key >= cols) {\n          delete this._combined[key];\n        }\n      }\n      // remove any cut off extended attributes\n      const extKeys = Object.keys(this._extendedAttrs);\n      for (let i = 0; i < extKeys.length; i++) {\n        const key = parseInt(extKeys[i], 10);\n        if (key >= cols) {\n          delete this._extendedAttrs[key];\n        }\n      }\n    }\n    this.length = cols;\n    return uint32Cells * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n  }\n\n  /**\n   * Cleanup underlying array buffer.\n   * A cleanup will be triggered if the array buffer exceeds the actual used\n   * memory by a factor of CLEANUP_THRESHOLD.\n   * Returns 0 or 1 indicating whether a cleanup happened.\n   */\n  public cleanupMemory(): number {\n    if (this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength) {\n      const data = new Uint32Array(this._data.length);\n      data.set(this._data);\n      this._data = data;\n      return 1;\n    }\n    return 0;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      for (let i = 0; i < this.length; ++i) {\n        if (!this.isProtected(i)) {\n          this.setCell(i, fillCellData);\n        }\n      }\n      return;\n    }\n    this._combined = {};\n    this._extendedAttrs = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this._extendedAttrs = {};\n    for (const el in line._extendedAttrs) {\n      this._extendedAttrs[el] = line._extendedAttrs[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    for (const el in this._extendedAttrs) {\n      newLine._extendedAttrs[el] = this._extendedAttrs[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public getNoBgTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK) || (this._data[i * CELL_SIZE + Cell.BG] & Attributes.CM_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    }\n\n    // Move any combined data over as needed, FIXME: repeat for extended attrs\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange } from 'xterm';\n\nexport function getRangeLength(range: IBufferRange, bufferCols: number): number {\n  if (range.start.y > range.end.y) {\n    throw new Error(`Buffer range end (${range.end.x}, ${range.end.y}) cannot be before start (${range.start.x}, ${range.start.y})`);\n  }\n  return bufferCols * (range.end.y - range.start.y) + (range.end.x - range.start.x + 1);\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param oldCols The columns before resize\n * @param newCols The columns after resize.\n * @param bufferAbsoluteY The absolute y position of the cursor (baseY + cursorY).\n * @param nullCell The cell data to use when filling in empty cells.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends Disposable implements IBufferSet {\n  private _normal!: Buffer;\n  private _alt!: Buffer;\n  private _activeBuffer!: Buffer;\n\n  private readonly _onBufferActivate = this.register(new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>());\n  public readonly onBufferActivate = this._onBufferActivate.event;\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   */\n  constructor(\n    private readonly _optionsService: IOptionsService,\n    private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.reset();\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.resize(this._bufferService.cols, this._bufferService.rows)));\n    this.register(this._optionsService.onSpecificOptionChange('tabStopWidth', () => this.setupTabStops()));\n  }\n\n  public reset(): void {\n    this._normal = new Buffer(true, this._optionsService, this._bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, this._optionsService, this._bufferService);\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clearAllMarkers();\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n    this.setupTabStops(newCols);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 0;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\nexport const DEFAULT_EXT = 0;\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 2 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000,\n  PROTECTED = 0x20000000,\n  OVERLINE = 0x40000000\n}\n\nexport const enum ExtFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  UNDERLINE_STYLE = 0x1C000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { disposeArray } from 'common/Lifecycle';\nimport { IDisposable, IMarker } from 'common/Types';\n\nexport class Marker implements IMarker {\n  private static _nextId = 1;\n\n  public isDisposed: boolean = false;\n  private readonly _disposables: IDisposable[] = [];\n\n  private readonly _id: number = Marker._nextId++;\n  public get id(): number { return this._id; }\n\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  constructor(\n    public line: number\n  ) {\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n    disposeArray(this._disposables);\n    this._disposables.length = 0;\n  }\n\n  public register<T extends IDisposable>(disposable: T): T {\n    this._disposables.push(disposable);\n    return disposable;\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | undefined } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | undefined = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = undefined;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\nexport namespace C1_ESCAPED {\n  export const ST = `${C0.ESC}\\\\`;\n}\n", "/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = ev.altKey ? C0.ESC + C0.CR : C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.ESC;\n      }\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[5;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[6;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping?.[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          let keyString = String.fromCharCode(keyCode);\n          if (ev.shiftKey) {\n            keyString = keyString.toUpperCase();\n          }\n          result.key = C0.ESC + keyString;\n        } else if (ev.keyCode === 32) {\n          result.key = C0.ESC + (ev.ctrlKey ? C0.NUL : ' ');\n        } else if (ev.key === 'Dead' && ev.code.startsWith('Key')) {\n          // Reference: https://github.com/xtermjs/xterm.js/issues/3725\n          // Alt will produce a \"dead key\" (initate composition) with some\n          // of the letters in US layout (e.g. N/E/U).\n          // It's safe to match against Key* since no other `code` values begin with \"Key\".\n          // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values#code_values_on_mac\n          let keyString = ev.code.slice(3, 4);\n          if (!ev.shiftKey) {\n            keyString = keyString.toLowerCase();\n          }\n          result.key = C0.ESC + keyString;\n          result.cancel = true;\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && !ev.shiftKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock,\n        // volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n        if (ev.key === '@') { // ^ + shift + 2 = ^ + @\n          result.key = C0.NUL;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate\n      // pair conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider } from 'common/services/Services';\n\ntype CharWidth = 0 | 1 | 2;\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      table.fill(1);\n      table[0] = 0;\n      // control chars\n      table.fill(0, 1, 32);\n      table.fill(0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      table.fill(2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      table.fill(2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      table.fill(2, 0xac00, 0xd7a4);\n      table.fill(2, 0xf900, 0xfb00);\n      table.fill(2, 0xfe10, 0xfe1a);\n      table.fill(2, 0xfe30, 0xfe70);\n      table.fill(2, 0xff00, 0xff61);\n      table.fill(2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        table.fill(0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): CharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as CharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n}\n", "\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\nexport class WriteBuffer extends Disposable {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n  private _isSyncWriting = false;\n  private _syncCalls = 0;\n  private _didUserInput = false;\n\n  private readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  constructor(private _action: (data: string | Uint8Array, promiseResult?: boolean) => void | Promise<boolean>) {\n    super();\n  }\n\n  public handleUserInput(): void {\n    this._didUserInput = true;\n  }\n\n  /**\n   * @deprecated Unreliable, to be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    // stop writeSync recursions with maxSubsequentCalls argument\n    // This is dangerous to use as it will lose the current data chunk\n    // and return immediately.\n    if (maxSubsequentCalls !== undefined && this._syncCalls > maxSubsequentCalls) {\n      // comment next line if a whole loop block should only contain x `writeSync` calls\n      // (total flat vs. deep nested limit)\n      this._syncCalls = 0;\n      return;\n    }\n    // append chunk to buffer\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(undefined);\n\n    // increase recursion counter\n    this._syncCalls++;\n    // exit early if another writeSync loop is active\n    if (this._isSyncWriting) {\n      return;\n    }\n    this._isSyncWriting = true;\n\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    // we have to do it here as single loop steps to not corrupt loop subject\n    // by another writeSync call triggered from _action\n    let chunk: string | Uint8Array | undefined;\n    while (chunk = this._writeBuffer.shift()) {\n      this._action(chunk);\n      const cb = this._callbacks.shift();\n      if (cb) cb();\n    }\n    // reset to avoid reprocessing of chunks with scheduled innerWrite call\n    // stopping scheduled innerWrite by offset > length condition\n    this._pendingData = 0;\n    this._bufferOffset = 0x7FFFFFFF;\n\n    // allow another writeSync to loop\n    this._isSyncWriting = false;\n    this._syncCalls = 0;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n\n      // If this is the first write call after the user has done some input,\n      // parse it immediately to minimize input latency,\n      // otherwise schedule for the next event\n      if (this._didUserInput) {\n        this._didUserInput = false;\n        this._pendingData += data.length;\n        this._writeBuffer.push(data);\n        this._callbacks.push(callback);\n        this._innerWrite();\n        return;\n      }\n\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Inner write call, that enters the sliced chunk processing by timing.\n   *\n   * `lastTime` indicates, when the last _innerWrite call had started.\n   * It is used to aggregate async handler execution under a timeout constraint\n   * effectively lowering the redrawing needs, schematically:\n   *\n   *   macroTask _innerWrite:\n   *     if (Date.now() - (lastTime | 0) < WRITE_TIMEOUT_MS):\n   *        schedule microTask _innerWrite(lastTime)\n   *     else:\n   *        schedule macroTask _innerWrite(0)\n   *\n   *   overall execution order on task queues:\n   *\n   *   macrotasks:  [...]  -->  _innerWrite(0)  -->  [...]  -->  screenUpdate  -->  [...]\n   *         m  t:                    |\n   *         i  a:                  [...]\n   *         c  s:                    |\n   *         r  k:              while < timeout:\n   *         o  s:                _innerWrite(timeout)\n   *\n   * `promiseResult` depicts the promise resolve value of an async handler.\n   * This value gets carried forward through all saved stack states of the\n   * paused parser for proper continuation.\n   *\n   * Note, for pure sync code `lastTime` and `promiseResult` have no meaning.\n   */\n  protected _innerWrite(lastTime: number = 0, promiseResult: boolean = true): void {\n    const startTime = lastTime || Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const result = this._action(data, promiseResult);\n      if (result) {\n        /**\n         * If we get a promise as return value, we re-schedule the continuation\n         * as thenable on the promise and exit right away.\n         *\n         * The exit here means, that we block input processing at the current active chunk,\n         * the exact execution position within the chunk is preserved by the saved\n         * stack content in InputHandler and EscapeSequenceParser.\n         *\n         * Resuming happens automatically from that saved stack state.\n         * Also the resolved promise value is passed along the callstack to\n         * `EscapeSequenceParser.parse` to correctly resume the stopped handler loop.\n         *\n         * Exceptions on async handlers will be logged to console async, but do not interrupt\n         * the input processing (continues with next handler at the current input position).\n         */\n\n        /**\n         * If a promise takes long to resolve, we should schedule continuation behind setTimeout.\n         * This might already be too late, if our .then enters really late (executor + prev thens\n         * took very long). This cannot be solved here for the handler itself (it is the handlers\n         * responsibility to slice hard work), but we can at least schedule a screen update as we\n         * gain control.\n         */\n        const continuation: (r: boolean) => void = (r: boolean) => Date.now() - startTime >= WRITE_TIMEOUT_MS\n          ? setTimeout(() => this._innerWrite(0, r))\n          : this._innerWrite(startTime, r);\n\n        /**\n         * Optimization considerations:\n         * The continuation above favors FPS over throughput by eval'ing `startTime` on resolve.\n         * This might schedule too many screen updates with bad throughput drops (in case a slow\n         * resolving handler sliced its work properly behind setTimeout calls). We cannot spot\n         * this condition here, also the renderer has no way to spot nonsense updates either.\n         * FIXME: A proper fix for this would track the FPS at the renderer entry level separately.\n         *\n         * If favoring of FPS shows bad throughtput impact, use the following instead. It favors\n         * throughput by eval'ing `startTime` upfront pulling at least one more chunk into the\n         * current microtask queue (executed before setTimeout).\n         */\n        // const continuation: (r: boolean) => void = Date.now() - startTime >= WRITE_TIMEOUT_MS\n        //   ? r => setTimeout(() => this._innerWrite(0, r))\n        //   : r => this._innerWrite(startTime, r);\n\n        // Handle exceptions synchronously to current band position, idea:\n        // 1. spawn a single microtask which we allow to throw hard\n        // 2. spawn a promise immediately resolving to `true`\n        // (executed on the same queue, thus properly aligned before continuation happens)\n        result.catch(err => {\n          queueMicrotask(() => {throw err;});\n          return Promise.resolve(false);\n        }).then(continuation);\n        return;\n      }\n\n      const cb = this._callbacks[this._bufferOffset];\n      if (cb) cb();\n      this._bufferOffset++;\n      this._pendingData -= data.length;\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite());\n    } else {\n      this._writeBuffer.length = 0;\n      this._callbacks.length = 0;\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n    this._onWriteParsed.fire();\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n\n// 'rgb:' rule - matching: r/g/b | rr/gg/bb | rrr/ggg/bbb | rrrr/gggg/bbbb (hex digits)\nconst RGB_REX = /^([\\da-f])\\/([\\da-f])\\/([\\da-f])$|^([\\da-f]{2})\\/([\\da-f]{2})\\/([\\da-f]{2})$|^([\\da-f]{3})\\/([\\da-f]{3})\\/([\\da-f]{3})$|^([\\da-f]{4})\\/([\\da-f]{4})\\/([\\da-f]{4})$/;\n// '#...' rule - matching any hex digits\nconst HASH_REX = /^[\\da-f]+$/;\n\n/**\n * Parse color spec to RGB values (8 bit per channel).\n * See `man xparsecolor` for details about certain format specifications.\n *\n * Supported formats:\n * - rgb:<red>/<green>/<blue> with <red>, <green>, <blue> in h | hh | hhh | hhhh\n * - #RGB, #RRGGBB, #RRRGGGBBB, #RRRRGGGGBBBB\n *\n * All other formats like rgbi: or device-independent string specifications\n * with float numbering are not supported.\n */\nexport function parseColor(data: string): [number, number, number] | undefined {\n  if (!data) return;\n  // also handle uppercases\n  let low = data.toLowerCase();\n  if (low.indexOf('rgb:') === 0) {\n    // 'rgb:' specifier\n    low = low.slice(4);\n    const m = RGB_REX.exec(low);\n    if (m) {\n      const base = m[1] ? 15 : m[4] ? 255 : m[7] ? 4095 : 65535;\n      return [\n        Math.round(parseInt(m[1] || m[4] || m[7] || m[10], 16) / base * 255),\n        Math.round(parseInt(m[2] || m[5] || m[8] || m[11], 16) / base * 255),\n        Math.round(parseInt(m[3] || m[6] || m[9] || m[12], 16) / base * 255)\n      ];\n    }\n  } else if (low.indexOf('#') === 0) {\n    // '#' specifier\n    low = low.slice(1);\n    if (HASH_REX.exec(low) && [3, 6, 9, 12].includes(low.length)) {\n      const adv = low.length / 3;\n      const result: [number, number, number] = [0, 0, 0];\n      for (let i = 0; i < 3; ++i) {\n        const c = parseInt(low.slice(adv * i, adv * i + adv), 16);\n        result[i] = adv === 1 ? c << 4 : adv === 2 ? c : adv === 3 ? c >> 4 : c >> 8;\n      }\n      return result;\n    }\n  }\n\n  // Named colors are currently not supported due to the large addition to the xterm.js bundle size\n  // they would add. In order to support named colors, we would need some way of optionally loading\n  // additional payloads so startup/download time is not bloated (see #3530).\n}\n\n// pad hex output to requested bit width\nfunction pad(n: number, bits: number): string {\n  const s = n.toString(16);\n  const s2 = s.length < 2 ? '0' + s : s;\n  switch (bits) {\n    case 4:\n      return s[0];\n    case 8:\n      return s2;\n    case 12:\n      return (s2 + s2).slice(0, 3);\n    default:\n      return s2 + s2;\n  }\n}\n\n/**\n * Convert a given color to rgb:../../.. string of `bits` depth.\n */\nexport function toRgbString(color: [number, number, number], bits: number = 16): string {\n  const [r, g, b] = color;\n  return `rgb:${pad(r, bits)}/${pad(g, bits)}/${pad(b, bits)}`;\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n * Internal actions of EscapeSequenceParser.\n */\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType, ISubParserStackState } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public registerHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    // force cleanup leftover handlers\n    if (this._active.length) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let handlerResult: boolean | Promise<boolean> = false;\n      let j = this._active.length - 1;\n      let fallThrough = false;\n      if (this._stack.paused) {\n        j = this._stack.loopPosition - 1;\n        handlerResult = promiseResult;\n        fallThrough = this._stack.fallThrough;\n        this._stack.paused = false;\n      }\n      if (!fallThrough && handlerResult === false) {\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].unhook(success);\n          if (handlerResult === true) {\n            break;\n          } else if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = false;\n            return handlerResult;\n          }\n        }\n        j--;\n      }\n      // cleanup left over handlers (fallThrough for async)\n      for (; j >= 0; j--) {\n        handlerResult = this._active[j].unhook(false);\n        if (handlerResult instanceof Promise) {\n          this._stack.paused = true;\n          this._stack.loopPosition = j;\n          this._stack.fallThrough = true;\n          return handlerResult;\n        }\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n// predefine empty params as [0] (ZDM)\nconst EMPTY_PARAMS = new Params();\nEMPTY_PARAMS.addParam(0);\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams = EMPTY_PARAMS;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => boolean | Promise<boolean>) { }\n\n  public hook(params: IParams): void {\n    // since we need to preserve params until `unhook`, we have to clone it\n    // (only borrowed from parser and spans multiple parser states)\n    // perf optimization:\n    // clone only, if we have non empty params, otherwise stick with default\n    this._params = (params.length > 1 || params.params[0]) ? params.clone() : EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params);\n      if (ret instanceof Promise) {\n        // need to hold data and params until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._params = EMPTY_PARAMS;\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._params = EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType, IParserStackState, ParserStackType, ResumableHandlersType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    this.table.fill(action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: { [flag: number]: ExecuteHandlerType };\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected readonly _oscParser: IOscParser;\n  protected readonly _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  // parser stack save for async handler support\n  protected _parseStack: IParserStackState = {\n    state: ParserStackType.NONE,\n    handlers: [],\n    handlerPos: 0,\n    transition: 0,\n    chunkPos: 0\n  };\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this.register(toDisposable(() => {\n      this._csiHandlers = Object.create(null);\n      this._executeHandlers = Object.create(null);\n      this._escHandlers = Object.create(null);\n    }));\n    this._oscParser = this.register(new OscParser());\n    this._dcsParser = this.register(new DcsParser());\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.registerEscHandler({ final: '\\\\' }, () => true);\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public registerEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public registerCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public registerDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.registerHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public registerOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.registerHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  /**\n   * Reset parser to initial values.\n   *\n   * This can also be used to lift the improper continuation error condition\n   * when dealing with async handlers. Use this only as a last resort to silence\n   * that error when the terminal has no pending data to be processed. Note that\n   * the interrupted async handler might continue its work in the future messing\n   * up the terminal state even further.\n   */\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n    // abort pending continuation from async handler\n    // Here the RESET type indicates, that the next parse call will\n    // ignore any saved stack, instead continues sync with next codepoint from GROUND\n    if (this._parseStack.state !== ParserStackType.NONE) {\n      this._parseStack.state = ParserStackType.RESET;\n      this._parseStack.handlers = []; // also release handlers ref\n    }\n  }\n\n  /**\n   * Async parse support.\n   */\n  protected _preserveStack(\n    state: ParserStackType,\n    handlers: ResumableHandlersType,\n    handlerPos: number,\n    transition: number,\n    chunkPos: number\n  ): void {\n    this._parseStack.state = state;\n    this._parseStack.handlers = handlers;\n    this._parseStack.handlerPos = handlerPos;\n    this._parseStack.transition = transition;\n    this._parseStack.chunkPos = chunkPos;\n  }\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   *\n   * Note on asynchronous handler support:\n   * Any handler returning a promise will be treated as asynchronous.\n   * To keep the in-band blocking working for async handlers, `parse` pauses execution,\n   * creates a stack save and returns the promise to the caller.\n   * For proper continuation of the paused state it is important\n   * to await the promise resolving. On resolve the parse must be repeated\n   * with the same chunk of data and the resolved value in `promiseResult`\n   * until no promise is returned.\n   *\n   * Important: With only sync handlers defined, parsing is completely synchronous as well.\n   * As soon as an async handler is involved, synchronous parsing is not possible anymore.\n   *\n   * Boilerplate for proper parsing of multiple chunks with async handlers:\n   *\n   * ```typescript\n   * async function parseMultipleChunks(chunks: Uint32Array[]): Promise<void> {\n   *   for (const chunk of chunks) {\n   *     let result: void | Promise<boolean>;\n   *     let prev: boolean | undefined;\n   *     while (result = parser.parse(chunk, chunk.length, prev)) {\n   *       prev = await result;\n   *     }\n   *   }\n   *   // finished parsing all chunks...\n   * }\n   * ```\n   */\n  public parse(data: Uint32Array, length: number, promiseResult?: boolean): void | Promise<boolean> {\n    let code = 0;\n    let transition = 0;\n    let start = 0;\n    let handlerResult: void | boolean | Promise<boolean>;\n\n    // resume from async handler\n    if (this._parseStack.state) {\n      // allow sync parser reset even in continuation mode\n      // Note: can be used to recover parser from improper continuation error below\n      if (this._parseStack.state === ParserStackType.RESET) {\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1; // continue with next codepoint in GROUND\n      } else {\n        if (promiseResult === undefined || this._parseStack.state === ParserStackType.FAIL) {\n          /**\n           * Reject further parsing on improper continuation after pausing. This is a really bad\n           * condition with screwed up execution order and prolly messed up terminal state,\n           * therefore we exit hard with an exception and reject any further parsing.\n           *\n           * Note: With `Terminal.write` usage this exception should never occur, as the top level\n           * calls are guaranteed to handle async conditions properly. If you ever encounter this\n           * exception in your terminal integration it indicates, that you injected data chunks to\n           * `InputHandler.parse` or `EscapeSequenceParser.parse` synchronously without waiting for\n           * continuation of a running async handler.\n           *\n           * It is possible to get rid of this error by calling `reset`. But dont rely on that, as\n           * the pending async handler still might mess up the terminal later. Instead fix the\n           * faulty async handling, so this error will not be thrown anymore.\n           */\n          this._parseStack.state = ParserStackType.FAIL;\n          throw new Error('improper continuation due to previous async handler, giving up parsing');\n        }\n\n        // we have to resume the old handler loop if:\n        // - return value of the promise was `false`\n        // - handlers are not exhausted yet\n        const handlers = this._parseStack.handlers;\n        let handlerPos = this._parseStack.handlerPos - 1;\n        switch (this._parseStack.state) {\n          case ParserStackType.CSI:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as CsiHandlerType[])[handlerPos](this._params);\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.ESC:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as EscHandlerType[])[handlerPos]();\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.DCS:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n          case ParserStackType.OSC:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n        }\n        // cleanup before continuing with the main sync loop\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1;\n        this.precedingCodepoint = 0;\n        this.currentState = this._parseStack.transition & TableAccess.TRANSITION_STATE_MASK;\n      }\n    }\n\n    // continue with main sync loop\n\n    // process input string\n    for (let i = start; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = this._transitions.table[this.currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState: this.currentState,\n              collect: this._collect,\n              params: this._params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[this._collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlers[j](this._params);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.CSI, handlers, j, transition, i);\n              return handlerResult;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(this._collect << 8 | code, this._params);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                this._params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                this._params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                this._params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          this._collect <<= 8;\n          this._collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[this._collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlersEsc[jj]();\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.ESC, handlersEsc, jj, transition, i);\n              return handlerResult;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(this._collect << 8 | code);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.CLEAR:\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          this._dcsParser.hook(this._collect << 8 | code, this._params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._dcsParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.DCS, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.OSC_START:\n          this._oscParser.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._oscParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.OSC, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n      }\n      this.currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser, ISubParserStackState } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\nconst EMPTY_HANDLERS: IOscHandler[] = [];\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _active = EMPTY_HANDLERS;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public registerHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public reset(): void {\n    // force cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].end(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    this._active = this._handlers[this._id] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n\n      if (!this._active.length) {\n        this._handlerFb(this._id, 'END', success);\n      } else {\n        let handlerResult: boolean | Promise<boolean> = false;\n        let j = this._active.length - 1;\n        let fallThrough = false;\n        if (this._stack.paused) {\n          j = this._stack.loopPosition - 1;\n          handlerResult = promiseResult;\n          fallThrough = this._stack.fallThrough;\n          this._stack.paused = false;\n        }\n        if (!fallThrough && handlerResult === false) {\n          for (; j >= 0; j--) {\n            handlerResult = this._active[j].end(success);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._stack.paused = true;\n              this._stack.loopPosition = j;\n              this._stack.fallThrough = false;\n              return handlerResult;\n            }\n          }\n          j--;\n        }\n        // cleanup left over handlers\n        // we always have to call .end for proper cleanup,\n        // here we use `success` to indicate whether a handler should execute\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].end(false);\n          if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = true;\n            return handlerResult;\n          }\n        }\n      }\n\n    }\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => boolean | Promise<boolean>) { }\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n      if (ret instanceof Promise) {\n        // need to hold data until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (Array.isArray(values[0])) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (Array.isArray(value)) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(terminal as any);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi } from 'xterm';\nimport { IBuffer } from 'common/buffer/Types';\nimport { BufferLineApiView } from 'common/public/BufferLineApiView';\nimport { CellData } from 'common/buffer/CellData';\n\nexport class BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBufferCell as IBufferCellApi, IBufferLine as IBufferLineApi } from 'xterm';\n\nexport class BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, cell as ICellData);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi } from 'xterm';\nimport { BufferApiView } from 'common/public/BufferApiView';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreTerminal } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\nexport class BufferNamespaceApi extends Disposable implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n\n  private readonly _onBufferChange = this.register(new EventEmitter<IBufferApi>());\n  public readonly onBufferChange = this._onBufferChange.event;\n\n  constructor(private _core: ICoreTerminal) {\n    super();\n    this._normal = new BufferApiView(this._core.buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._core.buffers.alt, 'alternate');\n    this._core.buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._core.buffers.active === this._core.buffers.normal) { return this.normal; }\n    if (this._core.buffers.active === this._core.buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._core.buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._core.buffers.alt);\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParams } from 'common/parser/Types';\nimport { IDisposable, IFunctionIdentifier, IParser } from 'xterm';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class ParserApi implements IParser {\n  constructor(private _core: ICoreTerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreTerminal } from 'common/Types';\nimport { IUnicodeHandling, IUnicodeVersionProvider } from 'xterm';\n\nexport class UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ICoreTerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData, IBufferLine, ScrollSource } from 'common/Types';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService extends Disposable implements IBufferService {\n  public serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n  /** Whether the user is scrolling (locks the scroll position) */\n  public isUserScrolling: boolean = false;\n\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  /** An IBufferline to clone/copy from for new blank lines */\n  private _cachedBlankLine: IBufferLine | undefined;\n\n  constructor(@IOptionsService optionsService: IOptionsService) {\n    super();\n    this.cols = Math.max(optionsService.rawOptions.cols || 0, MINIMUM_COLS);\n    this.rows = Math.max(optionsService.rawOptions.rows || 0, MINIMUM_ROWS);\n    this.buffers = this.register(new BufferSet(optionsService, this));\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n    this.buffers.resize(cols, rows);\n    // TODO: This doesn't fire when scrollback changes - add a resize event to BufferSet and forward\n    //       event\n    this._onResize.fire({ cols, rows });\n  }\n\n  public reset(): void {\n    this.buffers.reset();\n    this.isUserScrolling = false;\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    const buffer = this.buffer;\n\n    let newLine: IBufferLine | undefined;\n    newLine = this._cachedBlankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = buffer.getBlankLine(eraseAttr, isWrapped);\n      this._cachedBlankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = buffer.ybase + buffer.scrollTop;\n    const bottomRow = buffer.ybase + buffer.scrollBottom;\n\n    if (buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          buffer.lines.push(newLine.clone());\n        }\n      } else {\n        buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this.isUserScrolling) {\n          buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this.isUserScrolling) {\n          buffer.ydisp = Math.max(buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this.isUserScrolling) {\n      buffer.ydisp = buffer.ybase;\n    }\n\n    this._onScroll.fire(buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    const buffer = this.buffer;\n    if (disp < 0) {\n      if (buffer.ydisp === 0) {\n        return;\n      }\n      this.isUserScrolling = true;\n    } else if (disp + buffer.ydisp >= buffer.ybase) {\n      this.isUserScrolling = false;\n    }\n\n    const oldYdisp = buffer.ydisp;\n    buffer.ydisp = Math.max(Math.min(buffer.ydisp + disp, buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(buffer.ydisp);\n    }\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  public serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public glevel: number = 0;\n\n  private _charsets: (ICharset | undefined)[] = [];\n\n  public reset(): void {\n    this.charset = undefined;\n    this._charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this._charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset | undefined): void {\n    this._charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: { [key: string]: ICoreMouseProtocol } = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: { [key: string]: CoreMouseEncoding } = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  },\n  SGR_PIXELS: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.x};${e.y}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService extends Disposable implements ICoreMouseService {\n  private _protocols: { [name: string]: ICoreMouseProtocol } = {};\n  private _encodings: { [name: string]: CoreMouseEncoding } = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  private readonly _onProtocolChange = this.register(new EventEmitter<CoreMouseEventType>());\n  public readonly onProtocolChange =  this._onProtocolChange.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    super();\n    // register default protocols and encodings\n    for (const name of Object.keys(DEFAULT_PROTOCOLS)) this.addProtocol(name, DEFAULT_PROTOCOLS[name]);\n    for (const name of Object.keys(DEFAULT_ENCODINGS)) this.addEncoding(name, DEFAULT_ENCODINGS[name]);\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public get areMouseEventsActive(): boolean {\n    return this._protocols[this._activeProtocol].events !== 0;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n      || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move events at grid or pixel level\n    if (e.action === CoreMouseAction.MOVE\n      && this._lastEvent\n      && this._equalEvents(this._lastEvent, e, this._activeEncoding === 'SGR_PIXELS')\n    ) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): { [event: string]: boolean } {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _equalEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent, pixels: boolean): boolean {\n    if (pixels) {\n      if (e1.x !== e2.x) return false;\n      if (e1.y !== e2.y) return false;\n    } else {\n      if (e1.col !== e2.col) return false;\n      if (e1.row !== e2.row) return false;\n    }\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { clone } from 'common/Clone';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDecPrivateModes, IModes } from 'common/Types';\nimport { IBufferService, ICoreService, ILogService, IOptionsService } from 'common/services/Services';\n\nconst DEFAULT_MODES: IModes = Object.freeze({\n  insertMode: false\n});\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  bracketedPasteMode: false,\n  origin: false,\n  reverseWraparound: false,\n  sendFocus: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService extends Disposable implements ICoreService {\n  public serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public modes: IModes;\n  public decPrivateModes: IDecPrivateModes;\n\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  private readonly _onUserInput = this.register(new EventEmitter<void>());\n  public readonly onUserInput = this._onUserInput.event;\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onRequestScrollToBottom = this.register(new EventEmitter<void>());\n  public readonly onRequestScrollToBottom = this._onRequestScrollToBottom.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (wasUserInput && this._optionsService.rawOptions.scrollOnUserInput && buffer.ybase !== buffer.ydisp) {\n      this._onRequestScrollToBottom.fire();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { css } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDecorationService, IInternalDecoration } from 'common/services/Services';\nimport { SortedList } from 'common/SortedList';\nimport { IColor } from 'common/Types';\nimport { IDecoration, IDecorationOptions, IMarker } from 'xterm';\n\n// Work variables to avoid garbage collection\nlet $xmin = 0;\nlet $xmax = 0;\n\nexport class DecorationService extends Disposable implements IDecorationService {\n  public serviceBrand: any;\n\n  /**\n   * A list of all decorations, sorted by the marker's line value. This relies on the fact that\n   * while marker line values do change, they should all change by the same amount so this should\n   * never become out of order.\n   */\n  private readonly _decorations: SortedList<IInternalDecoration> = new SortedList(e => e?.marker.line);\n\n  private readonly _onDecorationRegistered = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRegistered = this._onDecorationRegistered.event;\n  private readonly _onDecorationRemoved = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRemoved = this._onDecorationRemoved.event;\n\n  public get decorations(): IterableIterator<IInternalDecoration> { return this._decorations.values(); }\n\n  constructor() {\n    super();\n\n    this.register(toDisposable(() => this.reset()));\n  }\n\n  public registerDecoration(options: IDecorationOptions): IDecoration | undefined {\n    if (options.marker.isDisposed) {\n      return undefined;\n    }\n    const decoration = new Decoration(options);\n    if (decoration) {\n      const markerDispose = decoration.marker.onDispose(() => decoration.dispose());\n      decoration.onDispose(() => {\n        if (decoration) {\n          if (this._decorations.delete(decoration)) {\n            this._onDecorationRemoved.fire(decoration);\n          }\n          markerDispose.dispose();\n        }\n      });\n      this._decorations.insert(decoration);\n      this._onDecorationRegistered.fire(decoration);\n    }\n    return decoration;\n  }\n\n  public reset(): void {\n    for (const d of this._decorations.values()) {\n      d.dispose();\n    }\n    this._decorations.clear();\n  }\n\n  public *getDecorationsAtCell(x: number, line: number, layer?: 'bottom' | 'top'): IterableIterator<IInternalDecoration> {\n    let xmin = 0;\n    let xmax = 0;\n    for (const d of this._decorations.getKeyIterator(line)) {\n      xmin = d.options.x ?? 0;\n      xmax = xmin + (d.options.width ?? 1);\n      if (x >= xmin && x < xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        yield d;\n      }\n    }\n  }\n\n  public forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void {\n    this._decorations.forEachByKey(line, d => {\n      $xmin = d.options.x ?? 0;\n      $xmax = $xmin + (d.options.width ?? 1);\n      if (x >= $xmin && x < $xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        callback(d);\n      }\n    });\n  }\n}\n\nclass Decoration extends Disposable implements IInternalDecoration {\n  public readonly marker: IMarker;\n  public element: HTMLElement | undefined;\n  public get isDisposed(): boolean { return this._isDisposed; }\n\n  public readonly onRenderEmitter = this.register(new EventEmitter<HTMLElement>());\n  public readonly onRender = this.onRenderEmitter.event;\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  private _cachedBg: IColor | undefined | null = null;\n  public get backgroundColorRGB(): IColor | undefined {\n    if (this._cachedBg === null) {\n      if (this.options.backgroundColor) {\n        this._cachedBg = css.toColor(this.options.backgroundColor);\n      } else {\n        this._cachedBg = undefined;\n      }\n    }\n    return this._cachedBg;\n  }\n\n  private _cachedFg: IColor | undefined | null = null;\n  public get foregroundColorRGB(): IColor | undefined {\n    if (this._cachedFg === null) {\n      if (this.options.foregroundColor) {\n        this._cachedFg = css.toColor(this.options.foregroundColor);\n      } else {\n        this._cachedFg = undefined;\n      }\n    }\n    return this._cachedFg;\n  }\n\n  constructor(\n    public readonly options: IDecorationOptions\n  ) {\n    super();\n    this.marker = options.marker;\n    if (this.options.overviewRulerOptions && !this.options.overviewRulerOptions.position) {\n      this.options.overviewRulerOptions.position = 'full';\n    }\n  }\n\n  public override dispose(): void {\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  public set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  public forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    for (const [key, value] of this._entries.entries()) {\n      callback(key, value);\n    }\n  }\n\n  public has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  public get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  public serviceBrand: undefined;\n\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { ILogService, IOptionsService, LogLevelEnum } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevelEnum } = {\n  trace: LogLevelEnum.TRACE,\n  debug: LogLevelEnum.DEBUG,\n  info: LogLevelEnum.INFO,\n  warn: LogLevelEnum.WARN,\n  error: LogLevelEnum.ERROR,\n  off: LogLevelEnum.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService extends Disposable implements ILogService {\n  public serviceBrand: any;\n\n  private _logLevel: LogLevelEnum = LogLevelEnum.OFF;\n  public get logLevel(): LogLevelEnum { return this._logLevel; }\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._updateLogLevel();\n    this.register(this._optionsService.onSpecificOptionChange('logLevel', () => this._updateLogLevel()));\n\n    // For trace logging, assume the latest created log service is valid\n    traceLogger = this;\n  }\n\n  private _updateLogLevel(): void {\n    this._logLevel = optionsKeyToLogLevel[this._optionsService.rawOptions.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, (this._optionsService.options.logger ? '' : LOG_PREFIX) + message, ...optionalParams);\n  }\n\n  public trace(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.TRACE) {\n      this._log(this._optionsService.options.logger?.trace.bind(this._optionsService.options.logger) ?? console.log, message, optionalParams);\n    }\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.DEBUG) {\n      this._log(this._optionsService.options.logger?.debug.bind(this._optionsService.options.logger) ?? console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.INFO) {\n      this._log(this._optionsService.options.logger?.info.bind(this._optionsService.options.logger) ?? console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.WARN) {\n      this._log(this._optionsService.options.logger?.warn.bind(this._optionsService.options.logger) ?? console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.ERROR) {\n      this._log(this._optionsService.options.logger?.error.bind(this._optionsService.options.logger) ?? console.error, message, optionalParams);\n    }\n  }\n}\n\nlet traceLogger: ILogService;\nexport function setTraceLogger(logger: ILogService): void {\n  traceLogger = logger;\n}\n\n/**\n * A decorator that can be used to automatically log trace calls to the decorated function.\n */\nexport function traceCall(_target: any, key: string, descriptor: any): any {\n  if (typeof descriptor.value !== 'function') {\n    throw new Error('not supported');\n  }\n  const fnKey = 'value';\n  const fn = descriptor.value;\n  descriptor[fnKey] = function (...args: any[]) {\n    // Early exit\n    if (traceLogger.logLevel !== LogLevelEnum.TRACE) {\n      return fn.apply(this, args);\n    }\n\n    traceLogger.trace(`GlyphRenderer#${fn.name}(${args.map(e => JSON.stringify(e)).join(', ')})`);\n    const result = fn.apply(this, args);\n    traceLogger.trace(`GlyphRenderer#${fn.name} return`, result);\n    return result;\n  };\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { isMac } from 'common/Platform';\nimport { CursorStyle, IDisposable } from 'common/Types';\nimport { FontWeight, IOptionsService, ITerminalOptions } from 'common/services/Services';\n\nexport const DEFAULT_OPTIONS: Readonly<Required<ITerminalOptions>> = {\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  cursorInactiveStyle: 'outline',\n  customGlyphs: true,\n  drawBoldTextInBrightColors: true,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  ignoreBracketedPasteMode: false,\n  lineHeight: 1.0,\n  letterSpacing: 0,\n  linkHandler: null,\n  logLevel: 'info',\n  logger: null,\n  scrollback: 1000,\n  scrollOnUserInput: true,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  smoothScrollDuration: 0,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowProposedApi: false,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  windowOptions: {},\n  windowsMode: false,\n  windowsPty: {},\n  wordSeparator: ' ()[]{}\\',\"`',\n  altClickMovesCursor: true,\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false,\n  overviewRulerWidth: 0\n};\n\nconst FONT_WEIGHT_OPTIONS: Extract<FontWeight, string>[] = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\nexport class OptionsService extends Disposable implements IOptionsService {\n  public serviceBrand: any;\n\n  public readonly rawOptions: Required<ITerminalOptions>;\n  public options: Required<ITerminalOptions>;\n\n  private readonly _onOptionChange = this.register(new EventEmitter<keyof ITerminalOptions>());\n  public readonly onOptionChange = this._onOptionChange.event;\n\n  constructor(options: Partial<ITerminalOptions>) {\n    super();\n    // set the default value of each option\n    const defaultOptions = { ...DEFAULT_OPTIONS };\n    for (const key in options) {\n      if (key in defaultOptions) {\n        try {\n          const newValue = options[key];\n          defaultOptions[key] = this._sanitizeAndValidateOption(key, newValue);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n\n    // set up getters and setters for each option\n    this.rawOptions = defaultOptions;\n    this.options = { ... defaultOptions };\n    this._setupOptions();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (value: ITerminalOptions[T]) => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (eventKey === key) {\n        listener(this.rawOptions[key]);\n      }\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (keys.indexOf(eventKey) !== -1) {\n        listener();\n      }\n    });\n  }\n\n  private _setupOptions(): void {\n    const getter = (propName: string): any => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n      return this.rawOptions[propName];\n    };\n\n    const setter = (propName: string, value: any): void => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n\n      value = this._sanitizeAndValidateOption(propName, value);\n      // Don't fire an option change event if they didn't change\n      if (this.rawOptions[propName] !== value) {\n        this.rawOptions[propName] = value;\n        this._onOptionChange.fire(propName);\n      }\n    };\n\n    for (const propName in this.rawOptions) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this.options, propName, desc);\n    }\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'cursorStyle':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        if (!isCursorStyle(value)) {\n          throw new Error(`\"${value}\" is not a valid value for ${key}`);\n        }\n        break;\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'fontWeight':\n      case 'fontWeightBold':\n        if (typeof value === 'number' && 1 <= value && value <= 1000) {\n          // already valid numeric value\n          break;\n        }\n        value = FONT_WEIGHT_OPTIONS.includes(value) ? value : DEFAULT_OPTIONS[key];\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n        break;\n      case 'rows':\n      case 'cols':\n        if (!value && value !== 0) {\n          throw new Error(`${key} must be numeric, value: ${value}`);\n        }\n        break;\n      case 'windowsPty':\n        value = value ?? {};\n        break;\n    }\n    return value;\n  }\n}\n\nfunction isCursorStyle(value: unknown): value is CursorStyle {\n  return value === 'block' || value === 'underline' || value === 'bar';\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, IOscLinkService } from 'common/services/Services';\nimport { IMarker, IOscLinkData } from 'common/Types';\n\nexport class OscLinkService implements IOscLinkService {\n  public serviceBrand: any;\n\n  private _nextId = 1;\n\n  /**\n   * A map of the link key to link entry. This is used to add additional lines to links with ids.\n   */\n  private _entriesWithId: Map<string, IOscLinkEntryWithId> = new Map();\n\n  /**\n   * A map of the link id to the link entry. The \"link id\" (number) which is the numberic\n   * representation of a unique link should not be confused with \"id\" (string) which comes in with\n   * `id=` in the OSC link's properties.\n   */\n  private _dataByLinkId: Map<number, IOscLinkEntryNoId | IOscLinkEntryWithId> = new Map();\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n  }\n\n  public registerLink(data: IOscLinkData): number {\n    const buffer = this._bufferService.buffer;\n\n    // Links with no id will only ever be registered a single time\n    if (data.id === undefined) {\n      const marker = buffer.addMarker(buffer.ybase + buffer.y);\n      const entry: IOscLinkEntryNoId = {\n        data,\n        id: this._nextId++,\n        lines: [marker]\n      };\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n      this._dataByLinkId.set(entry.id, entry);\n      return entry.id;\n    }\n\n    // Add the line to the link if it already exists\n    const castData = data as Required<IOscLinkData>;\n    const key = this._getEntryIdKey(castData);\n    const match = this._entriesWithId.get(key);\n    if (match) {\n      this.addLineToLink(match.id, buffer.ybase + buffer.y);\n      return match.id;\n    }\n\n    // Create the link\n    const marker = buffer.addMarker(buffer.ybase + buffer.y);\n    const entry: IOscLinkEntryWithId = {\n      id: this._nextId++,\n      key: this._getEntryIdKey(castData),\n      data: castData,\n      lines: [marker]\n    };\n    marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    this._entriesWithId.set(entry.key, entry);\n    this._dataByLinkId.set(entry.id, entry);\n    return entry.id;\n  }\n\n  public addLineToLink(linkId: number, y: number): void {\n    const entry = this._dataByLinkId.get(linkId);\n    if (!entry) {\n      return;\n    }\n    if (entry.lines.every(e => e.line !== y)) {\n      const marker = this._bufferService.buffer.addMarker(y);\n      entry.lines.push(marker);\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    }\n  }\n\n  public getLinkData(linkId: number): IOscLinkData | undefined {\n    return this._dataByLinkId.get(linkId)?.data;\n  }\n\n  private _getEntryIdKey(linkData: Required<IOscLinkData>): string {\n    return `${linkData.id};;${linkData.uri}`;\n  }\n\n  private _removeMarkerFromLink(entry: IOscLinkEntryNoId | IOscLinkEntryWithId, marker: IMarker): void {\n    const index = entry.lines.indexOf(marker);\n    if (index === -1) {\n      return;\n    }\n    entry.lines.splice(index, 1);\n    if (entry.lines.length === 0) {\n      if (entry.data.id !== undefined) {\n        this._entriesWithId.delete((entry as IOscLinkEntryWithId).key);\n      }\n      this._dataByLinkId.delete(entry.id);\n    }\n  }\n}\n\ninterface IOscLinkEntry<T extends IOscLinkData> {\n  data: T;\n  id: number;\n  lines: IMarker[];\n}\n\ninterface IOscLinkEntryNoId extends IOscLinkEntry<IOscLinkData> {\n}\n\ninterface IOscLinkEntryWithId extends IOscLinkEntry<Required<IOscLinkData>> {\n  key: string;\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent, IEventEmitter } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource, IDisposable, IColor, CursorStyle, CursorInactiveStyle, IOscLinkData } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDecorationOptions, IDecoration, ILinkHandler, IWindowsPty, ILogger } from 'xterm';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n  readonly onRequestScrollToBottom: IEvent<void>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasUserInput Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer if option scrollOnUserInput is true.\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<TArgs extends any[]> = TArgs extends [] ? []\n  : TArgs extends [...infer TFirst, infer TLast] ? TLast extends IBrandedService ? GetLeadingNonServiceArgs<TFirst> : TArgs\n    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport enum LogLevelEnum {\n  TRACE = 0,\n  DEBUG = 1,\n  INFO = 2,\n  WARN = 3,\n  ERROR = 4,\n  OFF = 5\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  readonly logLevel: LogLevelEnum;\n\n  trace(message: any, ...optionalParams: any[]): void;\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  /**\n   * Read only access to the raw options object, this is an internal-only fast path for accessing\n   * single options without any validation as we trust TypeScript to enforce correct usage\n   * internally.\n   */\n  readonly rawOptions: Required<ITerminalOptions>;\n\n  /**\n   * Options as exposed through the public API, this property uses getters and setters with\n   * validation which makes it safer but slower. {@link rawOptions} should be used for pretty much\n   * all internal usage for performance reasons.\n   */\n  readonly options: Required<ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when any option changes.\n   */\n  readonly onOptionChange: IEvent<keyof ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when a specific option changes, this is a convenience method that is\n   * preferred over {@link onOptionChange} when only a single option is being listened to.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (arg1: Required<ITerminalOptions>[T]) => any): IDisposable;\n\n  /**\n   * Adds an event listener for when a set of specific options change, this is a convenience method\n   * that is preferred over {@link onOptionChange} when multiple options are being listened to and\n   * handled the same way.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'trace' | 'debug' | 'info' | 'warn' | 'error' | 'off';\n\nexport interface ITerminalOptions {\n  allowProposedApi?: boolean;\n  allowTransparency?: boolean;\n  altClickMovesCursor?: boolean;\n  cols?: number;\n  convertEol?: boolean;\n  cursorBlink?: boolean;\n  cursorStyle?: CursorStyle;\n  cursorWidth?: number;\n  cursorInactiveStyle?: CursorInactiveStyle;\n  customGlyphs?: boolean;\n  disableStdin?: boolean;\n  drawBoldTextInBrightColors?: boolean;\n  fastScrollModifier?: 'none' | 'alt' | 'ctrl' | 'shift';\n  fastScrollSensitivity?: number;\n  fontSize?: number;\n  fontFamily?: string;\n  fontWeight?: FontWeight;\n  fontWeightBold?: FontWeight;\n  ignoreBracketedPasteMode?: boolean;\n  letterSpacing?: number;\n  lineHeight?: number;\n  linkHandler?: ILinkHandler | null;\n  logLevel?: LogLevel;\n  logger?: ILogger | null;\n  macOptionIsMeta?: boolean;\n  macOptionClickForcesSelection?: boolean;\n  minimumContrastRatio?: number;\n  rightClickSelectsWord?: boolean;\n  rows?: number;\n  screenReaderMode?: boolean;\n  scrollback?: number;\n  scrollOnUserInput?: boolean;\n  scrollSensitivity?: number;\n  smoothScrollDuration?: number;\n  tabStopWidth?: number;\n  theme?: ITheme;\n  windowsMode?: boolean;\n  windowsPty?: IWindowsPty;\n  windowOptions?: IWindowOptions;\n  wordSeparator?: string;\n  overviewRulerWidth?: number;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selectionForeground?: string;\n  selectionBackground?: string;\n  selectionInactiveBackground?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n  extendedAnsi?: string[];\n}\n\nexport const IOscLinkService = createDecorator<IOscLinkService>('OscLinkService');\nexport interface IOscLinkService {\n  serviceBrand: undefined;\n  /**\n   * Registers a link to the service, returning the link ID. The link data is managed by this\n   * service and will be freed when this current cursor position is trimmed off the buffer.\n   */\n  registerLink(linkData: IOscLinkData): number;\n  /**\n   * Adds a line to a link if needed.\n   */\n  addLineToLink(linkId: number, y: number): void;\n  /** Get the link data associated with a link ID. */\n  getLinkData(linkId: number): IOscLinkData | undefined;\n}\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): number;\n  getStringCellWidth(s: string): number;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): 0 | 1 | 2;\n}\n\nexport const IDecorationService = createDecorator<IDecorationService>('DecorationService');\nexport interface IDecorationService extends IDisposable {\n  serviceBrand: undefined;\n  readonly decorations: IterableIterator<IInternalDecoration>;\n  readonly onDecorationRegistered: IEvent<IInternalDecoration>;\n  readonly onDecorationRemoved: IEvent<IInternalDecoration>;\n  registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined;\n  reset(): void;\n  /**\n   * Trigger a callback over the decoration at a cell (in no particular order). This uses a callback\n   * instead of an iterator as it's typically used in hot code paths.\n   */\n  forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void;\n}\nexport interface IInternalDecoration extends IDecoration {\n  readonly options: IDecorationOptions;\n  readonly backgroundColorRGB: IColor | undefined;\n  readonly foregroundColorRGB: IColor | undefined;\n  readonly onRenderEmitter: IEventEmitter<HTMLElement>;\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { EventEmitter } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\nimport { IUnicodeService, IUnicodeVersionProvider } from 'common/services/Services';\n\nexport class UnicodeService implements IUnicodeService {\n  public serviceBrand: any;\n\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n\n  private readonly _onChange = new EventEmitter<string>();\n  public readonly onChange = this._onChange.event;\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public dispose(): void {\n    this._onChange.dispose();\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): number {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      result += this.wcwidth(code);\n    }\n    return result;\n  }\n}\n", "// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { Terminal as TerminalCore } from 'browser/Terminal';\nimport { IBufferRange, ITerminal } from 'browser/Types';\nimport { IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ITerminalOptions } from 'common/Types';\nimport { AddonManager } from 'common/public/AddonManager';\nimport { BufferNamespaceApi } from 'common/public/BufferNamespaceApi';\nimport { ParserApi } from 'common/public/ParserApi';\nimport { UnicodeApi } from 'common/public/UnicodeApi';\nimport { IBufferNamespace as IBufferNamespaceApi, IDecoration, IDecorationOptions, IDisposable, ILinkProvider, ILocalizableStrings, IMarker, IModes, IParser, ITerminalAddon, Terminal as ITerminalApi, ITerminalInitOnlyOptions, IUnicodeHandling } from 'xterm';\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class Terminal extends Disposable implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser | undefined;\n  private _buffer: BufferNamespaceApi | undefined;\n  private _publicOptions: Required<ITerminalOptions>;\n\n  constructor(options?: ITerminalOptions & ITerminalInitOnlyOptions) {\n    super();\n\n    this._core = this.register(new TerminalCore(options));\n    this._addonManager = this.register(new AddonManager());\n\n    this._publicOptions = { ... this._core.options };\n    const getter = (propName: string): any => {\n      return this._core.options[propName];\n    };\n    const setter = (propName: string, value: any): void => {\n      this._checkReadonlyOptions(propName);\n      this._core.options[propName] = value;\n    };\n\n    for (const propName in this._core.options) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this._publicOptions, propName, desc);\n    }\n  }\n\n  private _checkReadonlyOptions(propName: string): void {\n    // Throw an error if any constructor only option is modified\n    // from terminal.options\n    // Modifications from anywhere else are allowed\n    if (CONSTRUCTOR_ONLY_OPTIONS.includes(propName)) {\n      throw new Error(`Option \"${propName}\" can only be set in the constructor`);\n    }\n  }\n\n  private _checkProposedApi(): void {\n    if (!this._core.optionsService.rawOptions.allowProposedApi) {\n      throw new Error('You must set the allowProposedApi option to true to use proposed API');\n    }\n  }\n\n  public get onBell(): IEvent<void> { return this._core.onBell; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onWriteParsed(): IEvent<void> { return this._core.onWriteParsed; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    this._checkProposedApi();\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi {\n    if (!this._buffer) {\n      this._buffer = this.register(new BufferNamespaceApi(this._core));\n    }\n    return this._buffer;\n  }\n  public get markers(): ReadonlyArray<IMarker> {\n    this._checkProposedApi();\n    return this._core.markers;\n  }\n  public get modes(): IModes {\n    const m = this._core.coreService.decPrivateModes;\n    let mouseTrackingMode: 'none' | 'x10' | 'vt200' | 'drag' | 'any' = 'none';\n    switch (this._core.coreMouseService.activeProtocol) {\n      case 'X10': mouseTrackingMode = 'x10'; break;\n      case 'VT200': mouseTrackingMode = 'vt200'; break;\n      case 'DRAG': mouseTrackingMode = 'drag'; break;\n      case 'ANY': mouseTrackingMode = 'any'; break;\n    }\n    return {\n      applicationCursorKeysMode: m.applicationCursorKeys,\n      applicationKeypadMode: m.applicationKeypad,\n      bracketedPasteMode: m.bracketedPasteMode,\n      insertMode: this._core.coreService.modes.insertMode,\n      mouseTrackingMode: mouseTrackingMode,\n      originMode: m.origin,\n      reverseWraparoundMode: m.reverseWraparound,\n      sendFocusMode: m.sendFocus,\n      wraparoundMode: m.wraparound\n    };\n  }\n  public get options(): Required<ITerminalOptions> {\n    return this._publicOptions;\n  }\n  public set options(options: ITerminalOptions) {\n    for (const propName in options) {\n      this._publicOptions[propName] = options[propName];\n    }\n  }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    this._checkProposedApi();\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number = 0): IMarker {\n    this._verifyIntegers(cursorYOffset);\n    return this._core.registerMarker(cursorYOffset);\n  }\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    this._checkProposedApi();\n    this._verifyPositiveIntegers(decorationOptions.x ?? 0, decorationOptions.width ?? 0, decorationOptions.height ?? 0);\n    return this._core.registerDecoration(decorationOptions);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): IBufferRange | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    super.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public clearTextureAtlas(): void {\n    this._core.clearTextureAtlas();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    }\n  }\n\n  private _verifyPositiveIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value && (value === Infinity || isNaN(value) || value % 1 !== 0 || value < 0)) {\n        throw new Error('This API only accepts positive integers');\n      }\n    }\n  }\n}\n", "(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FitAddon\"] = factory();\n\telse\n\t\troot[\"FitAddon\"] = factory();\n})(self, function() {\nreturn ", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal, ITerminalAddon } from 'xterm';\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\n\ninterface ITerminalDimensions {\n  /**\n   * The number of rows in the terminal.\n   */\n  rows: number;\n\n  /**\n   * The number of columns in the terminal.\n   */\n  cols: number;\n}\n\nconst MINIMUM_COLS = 2;\nconst MINIMUM_ROWS = 1;\n\nexport class FitAddon implements ITerminalAddon {\n  private _terminal: Terminal | undefined;\n\n  constructor() {}\n\n  public activate(terminal: Terminal): void {\n    this._terminal = terminal;\n  }\n\n  public dispose(): void {}\n\n  public fit(): void {\n    const dims = this.proposeDimensions();\n    if (!dims || !this._terminal || isNaN(dims.cols) || isNaN(dims.rows)) {\n      return;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (this._terminal as any)._core;\n\n    // Force a full render\n    if (this._terminal.rows !== dims.rows || this._terminal.cols !== dims.cols) {\n      core._renderService.clear();\n      this._terminal.resize(dims.cols, dims.rows);\n    }\n  }\n\n  public proposeDimensions(): ITerminalDimensions | undefined {\n    if (!this._terminal) {\n      return undefined;\n    }\n\n    if (!this._terminal.element || !this._terminal.element.parentElement) {\n      return undefined;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (this._terminal as any)._core;\n    const dims: IRenderDimensions = core._renderService.dimensions;\n\n    if (dims.css.cell.width === 0 || dims.css.cell.height === 0) {\n      return undefined;\n    }\n\n    const scrollbarWidth = this._terminal.options.scrollback === 0 ?\n      0 : core.viewport.scrollBarWidth;\n\n    const parentElementStyle = window.getComputedStyle(this._terminal.element.parentElement);\n    const parentElementHeight = parseInt(parentElementStyle.getPropertyValue('height'));\n    const parentElementWidth = Math.max(0, parseInt(parentElementStyle.getPropertyValue('width')));\n    const elementStyle = window.getComputedStyle(this._terminal.element);\n    const elementPadding = {\n      top: parseInt(elementStyle.getPropertyValue('padding-top')),\n      bottom: parseInt(elementStyle.getPropertyValue('padding-bottom')),\n      right: parseInt(elementStyle.getPropertyValue('padding-right')),\n      left: parseInt(elementStyle.getPropertyValue('padding-left'))\n    };\n    const elementPaddingVer = elementPadding.top + elementPadding.bottom;\n    const elementPaddingHor = elementPadding.right + elementPadding.left;\n    const availableHeight = parentElementHeight - elementPaddingVer;\n    const availableWidth = parentElementWidth - elementPaddingHor - scrollbarWidth;\n    const geometry = {\n      cols: Math.max(MINIMUM_COLS, Math.floor(availableWidth / dims.css.cell.width)),\n      rows: Math.max(MINIMUM_ROWS, Math.floor(availableHeight / dims.css.cell.height))\n    };\n    return geometry;\n  }\n}\n", null, null, "'use strict';\n\nmodule.exports = ({onlyFirst = false} = {}) => {\n\tconst pattern = [\n\t\t'[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)',\n\t\t'(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))'\n\t].join('|');\n\n\treturn new RegExp(pattern, onlyFirst ? undefined : 'g');\n};\n", "'use strict';\nconst ansiRegex = require('ansi-regex');\n\nmodule.exports = string => typeof string === 'string' ? string.replace(ansiRegex(), '') : string;\n", "/* eslint-disable yoda */\n'use strict';\n\nconst isFullwidthCodePoint = codePoint => {\n\tif (Number.isNaN(codePoint)) {\n\t\treturn false;\n\t}\n\n\t// Code points are derived from:\n\t// http://www.unix.org/Public/UNIDATA/EastAsianWidth.txt\n\tif (\n\t\tcodePoint >= 0x1100 && (\n\t\t\tcodePoint <= 0x115F || // Hangul Jamo\n\t\t\tcodePoint === 0x2329 || // LEFT-POINTING ANGLE BRACKET\n\t\t\tcodePoint === 0x232A || // RIGHT-POINTING ANGLE BRACKET\n\t\t\t// CJK Radicals Supplement .. Enclosed CJK Letters and Months\n\t\t\t(0x2E80 <= codePoint && codePoint <= 0x3247 && codePoint !== 0x303F) ||\n\t\t\t// Enclosed CJK Letters and Months .. CJK Unified Ideographs Extension A\n\t\t\t(0x3250 <= codePoint && codePoint <= 0x4DBF) ||\n\t\t\t// CJK Unified Ideographs .. Yi Radicals\n\t\t\t(0x4E00 <= codePoint && codePoint <= 0xA4C6) ||\n\t\t\t// Hangul Jamo Extended-A\n\t\t\t(0xA960 <= codePoint && codePoint <= 0xA97C) ||\n\t\t\t// Hangul Syllables\n\t\t\t(0xAC00 <= codePoint && codePoint <= 0xD7A3) ||\n\t\t\t// CJK Compatibility Ideographs\n\t\t\t(0xF900 <= codePoint && codePoint <= 0xFAFF) ||\n\t\t\t// Vertical Forms\n\t\t\t(0xFE10 <= codePoint && codePoint <= 0xFE19) ||\n\t\t\t// CJK Compatibility Forms .. Small Form Variants\n\t\t\t(0xFE30 <= codePoint && codePoint <= 0xFE6B) ||\n\t\t\t// Halfwidth and Fullwidth Forms\n\t\t\t(0xFF01 <= codePoint && codePoint <= 0xFF60) ||\n\t\t\t(0xFFE0 <= codePoint && codePoint <= 0xFFE6) ||\n\t\t\t// Kana Supplement\n\t\t\t(0x1B000 <= codePoint && codePoint <= 0x1B001) ||\n\t\t\t// Enclosed Ideographic Supplement\n\t\t\t(0x1F200 <= codePoint && codePoint <= 0x1F251) ||\n\t\t\t// CJK Unified Ideographs Extension B .. Tertiary Ideographic Plane\n\t\t\t(0x20000 <= codePoint && codePoint <= 0x3FFFD)\n\t\t)\n\t) {\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\nmodule.exports = isFullwidthCodePoint;\nmodule.exports.default = isFullwidthCodePoint;\n", "\"use strict\";\n\nmodule.exports = function () {\n  // https://mths.be/emoji\n  return /\\uD83C\\uDFF4\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73)\\uDB40\\uDC7F|\\uD83D\\uDC68(?:\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFE])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D[\\uDC66\\uDC67])|[\\u2695\\u2696\\u2708]\\uFE0F|\\uD83D[\\uDC66\\uDC67]|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|(?:\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708])\\uFE0F|\\uD83C\\uDFFB\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C[\\uDFFB-\\uDFFF])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)\\uD83C\\uDFFB|\\uD83E\\uDDD1(?:\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1)|(?:\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFB-\\uDFFE])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83D\\uDC69(?:\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFB\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFC-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]))|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|(?:\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83D\\uDC69(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|(?:(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)\\uFE0F|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF])\\u200D[\\u2640\\u2642]|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|\\u200D[\\u2640\\u2642])|\\uD83C\\uDFF4\\u200D\\u2620)\\uFE0F|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|\\uD83D\\uDC15\\u200D\\uD83E\\uDDBA|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83C\\uDDF6\\uD83C\\uDDE6|[#\\*0-9]\\uFE0F\\u20E3|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC70\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDCAA\\uDD74\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD36\\uDDB5\\uDDB6\\uDDBB\\uDDD2-\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5\\uDEEB\\uDEEC\\uDEF4-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])|(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDED5\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])\\uFE0F|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDC8F\\uDC91\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3C-\\uDD3E\\uDDB5\\uDDB6\\uDDB8\\uDDB9\\uDDBB\\uDDCD-\\uDDCF\\uDDD1-\\uDDDD])/g;\n};\n", "'use strict';\nconst stripAnsi = require('strip-ansi');\nconst isFullwidthCodePoint = require('is-fullwidth-code-point');\nconst emojiRegex = require('emoji-regex');\n\nconst stringWidth = string => {\n\tif (typeof string !== 'string' || string.length === 0) {\n\t\treturn 0;\n\t}\n\n\tstring = stripAnsi(string);\n\n\tif (string.length === 0) {\n\t\treturn 0;\n\t}\n\n\tstring = string.replace(emojiRegex(), '  ');\n\n\tlet width = 0;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst code = string.codePointAt(i);\n\n\t\t// Ignore control characters\n\t\tif (code <= 0x1F || (code >= 0x7F && code <= 0x9F)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Ignore combining characters\n\t\tif (code >= 0x300 && code <= 0x36F) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Surrogates\n\t\tif (code > 0xFFFF) {\n\t\t\ti++;\n\t\t}\n\n\t\twidth += isFullwidthCodePoint(code) ? 2 : 1;\n\t}\n\n\treturn width;\n};\n\nmodule.exports = stringWidth;\n// TODO: remove this in the next major version\nmodule.exports.default = stringWidth;\n", null, null, null, null, null, "import { Terminal } from \"xterm\";\nimport { FitAddon } from \"xterm-addon-fit\";\nimport { Readline } from \"xterm-readline\";\n\nimport \"xterm/css/xterm.css\";\nimport { invoke } from \"@tauri-apps/api\";\nimport { Event, listen } from \"@tauri-apps/api/event\";\n\nconst terminalElement = document.getElementById(\"terminal\") as HTMLElement;\n\nconst fitAddon = new FitAddon();\nconst rl = new Readline();\nconst term = new Terminal({\n  // fontFamily: \"Jetbrains Mono\",\n  // theme: {\n    // background: \"rgb(47, 47, 47)\",\n  // }\n  theme: {\n    background: \"#191A19\",\n    foreground: \"#F5F2E7\",\n  },\n  cursorBlink: true,\n  cursorStyle: \"block\"\n  });\nterm.loadAddon(fitAddon);\nterm.loadAddon(rl);\nterm.open(terminalElement);\n\n// Make the terminal fit all the window size\nfunction fitTerminal() {\n  fitAddon.fit();\n  void invoke<string>(\"async_resize_pty\", {\n    rows: term.rows,\n    cols: term.cols,\n  });\n}\n\n// Write data from pty into the terminal\nfunction writeToTerminal(ev: Event<string>) {\n  term.write(ev.payload)\n}\n\n// Write data from the terminal to the pty\n// function writeToPty(data: string) {\n//   void invoke(\"async_write_to_pty\", {\n//     data,\n//   });\n// }\n\n// Write data from the terminal to the pty\nfunction writeDataToPostgres(query: string) {\n  void invoke(\"send_recv_postgres_terminal\", {\n    query,\n  });\n}\n\n// term.onData(writeToPty);\n// term.onData(writeDataToPostgres);\naddEventListener(\"resize\", fitTerminal);\nlisten(\"data\", writeToTerminal)\nfitTerminal();\n\nrl.setCheckHandler((text) => {\n  return !text.trimEnd().endsWith(\"&&\");\n});\n\nfunction readLine() {\n  rl.read(\"postgres>\")\n    .then(processLine);\n}\n\nasync function processLine(data: string) {\n  invoke(\"send_recv_postgres_terminal\", { data }).then((message) => rl.println(String(message)));\n  setTimeout(readLine);\n}\n\nreadLine();\n", "var d=Object.defineProperty;var e=(c,a)=>{for(var b in a)d(c,b,{get:a[b],enumerable:!0})};export{e as a};\n", "import{a as c}from\"./chunk-FEIY7W7S.js\";var w={};c(w,{convertFileSrc:()=>u,invoke:()=>d,transformCallback:()=>s});function l(){return window.crypto.getRandomValues(new Uint32Array(1))[0]}function s(r,n=!1){let e=l(),t=`_${e}`;return Object.defineProperty(window,t,{value:o=>(n&&Reflect.deleteProperty(window,t),r?.(o)),writable:!1,configurable:!0}),e}async function d(r,n={}){return new Promise((e,t)=>{let o=s(i=>{e(i),Reflect.deleteProperty(window,`_${a}`)},!0),a=s(i=>{t(i),Reflect.deleteProperty(window,`_${o}`)},!0);window.__TAURI_IPC__({cmd:r,callback:o,error:a,...n})})}function u(r,n=\"asset\"){let e=encodeURIComponent(r);return navigator.userAgent.includes(\"Windows\")?`https://${n}.localhost/${e}`:`${n}://localhost/${e}`}export{s as a,d as b,u as c,w as d};\n", "import{b as o}from\"./chunk-5UWJICAP.js\";async function a(i){return o(\"tauri\",i)}export{a};\n", "import{a as o}from\"./chunk-RKMHWDGH.js\";import{a as l}from\"./chunk-5UWJICAP.js\";import{a as d}from\"./chunk-FEIY7W7S.js\";var W={};d(W,{TauriEvent:()=>c,emit:()=>D,listen:()=>E,once:()=>_});async function s(n,t){return o({__tauriModule:\"Event\",message:{cmd:\"unlisten\",event:n,eventId:t}})}async function m(n,t,r){await o({__tauriModule:\"Event\",message:{cmd:\"emit\",event:n,windowLabel:t,payload:r}})}async function a(n,t,r){return o({__tauriModule:\"Event\",message:{cmd:\"listen\",event:n,windowLabel:t,handler:l(r)}}).then(i=>async()=>s(n,i))}async function u(n,t,r){return a(n,t,i=>{r(i),s(n,i.id).catch(()=>{})})}var c=(e=>(e.WINDOW_RESIZED=\"tauri://resize\",e.WINDOW_MOVED=\"tauri://move\",e.WINDOW_CLOSE_REQUESTED=\"tauri://close-requested\",e.WINDOW_CREATED=\"tauri://window-created\",e.WINDOW_DESTROYED=\"tauri://destroyed\",e.WINDOW_FOCUS=\"tauri://focus\",e.WINDOW_BLUR=\"tauri://blur\",e.WINDOW_SCALE_FACTOR_CHANGED=\"tauri://scale-change\",e.WINDOW_THEME_CHANGED=\"tauri://theme-changed\",e.WINDOW_FILE_DROP=\"tauri://file-drop\",e.WINDOW_FILE_DROP_HOVER=\"tauri://file-drop-hover\",e.WINDOW_FILE_DROP_CANCELLED=\"tauri://file-drop-cancelled\",e.MENU=\"tauri://menu\",e.CHECK_UPDATE=\"tauri://update\",e.UPDATE_AVAILABLE=\"tauri://update-available\",e.INSTALL_UPDATE=\"tauri://update-install\",e.STATUS_UPDATE=\"tauri://update-status\",e.DOWNLOAD_PROGRESS=\"tauri://update-download-progress\",e))(c||{});async function E(n,t){return a(n,null,t)}async function _(n,t){return u(n,null,t)}async function D(n,t){return m(n,void 0,t)}export{m as a,a as b,u as c,c as d,E as e,_ as f,D as g,W as h};\n", "import{e as u,f as p,g as s}from\"./chunk-M3Y6ZK7U.js\";import{a as U}from\"./chunk-FEIY7W7S.js\";var l={};U(l,{checkUpdate:()=>c,installUpdate:()=>f,onUpdaterEvent:()=>d});async function d(n){return u(\"tauri://update-status\",e=>{n(e?.payload)})}async function f(){let n;function e(){n&&n(),n=void 0}return new Promise((i,r)=>{function o(a){if(a.error){e(),r(a.error);return}a.status===\"DONE\"&&(e(),i())}d(o).then(a=>{n=a}).catch(a=>{throw e(),a}),s(\"tauri://update-install\").catch(a=>{throw e(),a})})}async function c(){let n;function e(){n&&n(),n=void 0}return new Promise((i,r)=>{function o(t){e(),i({manifest:t,shouldUpdate:!0})}function a(t){if(t.error){e(),r(t.error);return}t.status===\"UPTODATE\"&&(e(),i({shouldUpdate:!1}))}p(\"tauri://update-available\",t=>{o(t?.payload)}).catch(t=>{throw e(),t}),d(a).then(t=>{n=t}).catch(t=>{throw e(),t}),s(\"tauri://update\").catch(t=>{throw e(),t})})}export{d as a,f as b,c,l as d};\n", "import{a as _,b as w,c as P}from\"./chunk-M3Y6ZK7U.js\";import{a as i}from\"./chunk-RKMHWDGH.js\";import{a as z}from\"./chunk-FEIY7W7S.js\";var S={};z(S,{CloseRequestedEvent:()=>y,LogicalPosition:()=>c,LogicalSize:()=>m,PhysicalPosition:()=>r,PhysicalSize:()=>o,UserAttentionType:()=>W,WebviewWindow:()=>s,WebviewWindowHandle:()=>u,WindowManager:()=>b,appWindow:()=>g,availableMonitors:()=>D,currentMonitor:()=>C,getAll:()=>h,getCurrent:()=>E,primaryMonitor:()=>T});var m=class{constructor(e,a){this.type=\"Logical\";this.width=e,this.height=a}},o=class{constructor(e,a){this.type=\"Physical\";this.width=e,this.height=a}toLogical(e){return new m(this.width/e,this.height/e)}},c=class{constructor(e,a){this.type=\"Logical\";this.x=e,this.y=a}},r=class{constructor(e,a){this.type=\"Physical\";this.x=e,this.y=a}toLogical(e){return new c(this.x/e,this.y/e)}},W=(a=>(a[a.Critical=1]=\"Critical\",a[a.Informational=2]=\"Informational\",a))(W||{});function E(){return new s(window.__TAURI_METADATA__.__currentWindow.label,{skip:!0})}function h(){return window.__TAURI_METADATA__.__windows.map(t=>new s(t.label,{skip:!0}))}var M=[\"tauri://created\",\"tauri://error\"],u=class{constructor(e){this.label=e,this.listeners=Object.create(null)}async listen(e,a){return this._handleTauriEvent(e,a)?Promise.resolve(()=>{let n=this.listeners[e];n.splice(n.indexOf(a),1)}):w(e,this.label,a)}async once(e,a){return this._handleTauriEvent(e,a)?Promise.resolve(()=>{let n=this.listeners[e];n.splice(n.indexOf(a),1)}):P(e,this.label,a)}async emit(e,a){if(M.includes(e)){for(let n of this.listeners[e]||[])n({event:e,id:-1,windowLabel:this.label,payload:a});return Promise.resolve()}return _(e,this.label,a)}_handleTauriEvent(e,a){return M.includes(e)?(e in this.listeners?this.listeners[e].push(a):this.listeners[e]=[a],!0):!1}},b=class extends u{async scaleFactor(){return i({__tauriModule:\"Window\",message:{cmd:\"manage\",data:{label:this.label,cmd:{type:\"scaleFactor\"}}}})}async innerPosition(){return i({__tauriModule:\"Window\",message:{cmd:\"manage\",data:{label:this.label,cmd:{type:\"innerPosition\"}}}}).then(({x:e,y:a})=>new r(e,a))}async outerPosition(){return i({__tauriModule:\"Window\",message:{cmd:\"manage\",data:{label:this.label,cmd:{type:\"outerPosition\"}}}}).then(({x:e,y:a})=>new r(e,a))}async innerSize(){return i({__tauriModule:\"Window\",message:{cmd:\"manage\",data:{label:this.label,cmd:{type:\"innerSize\"}}}}).then(({width:e,height:a})=>new o(e,a))}async outerSize(){return i({__tauriModule:\"Window\",message:{cmd:\"manage\",data:{label:this.label,cmd:{type:\"outerSize\"}}}}).then(({width:e,height:a})=>new o(e,a))}async isFullscreen(){return i({__tauriModule:\"Window\",message:{cmd:\"manage\",data:{label:this.label,cmd:{type:\"isFullscreen\"}}}})}async isMinimized(){return i({__tauriModule:\"Window\",message:{cmd:\"manage\",data:{label:this.label,cmd:{type:\"isMinimized\"}}}})}async isMaximized(){return i({__tauriModule:\"Window\",message:{cmd:\"manage\",data:{label:this.label,cmd:{type:\"isMaximized\"}}}})}async isFocused(){return i({__tauriModule:\"Window\",message:{cmd:\"manage\",data:{label:this.label,cmd:{type:\"isFocused\"}}}})}async isDecorated(){return i({__tauriModule:\"Window\",message:{cmd:\"manage\",data:{label:this.label,cmd:{type:\"isDecorated\"}}}})}async isResizable(){return i({__tauriModule:\"Window\",message:{cmd:\"manage\",data:{label:this.label,cmd:{type:\"isResizable\"}}}})}async isMaximizable(){return i({__tauriModule:\"Window\",message:{cmd:\"manage\",data:{label:this.label,cmd:{type:\"isMaximizable\"}}}})}async isMinimizable(){return i({__tauriModule:\"Window\",message:{cmd:\"manage\",data:{label:this.label,cmd:{type:\"isMinimizable\"}}}})}async isClosable(){return i({__tauriModule:\"Window\",message:{cmd:\"manage\",data:{label:this.label,cmd:{type:\"isClosable\"}}}})}async isVisible(){return i({__tauriModule:\"Window\",message:{cmd:\"manage\",data:{label:this.label,cmd:{type:\"isVisible\"}}}})}async title(){return i({__tauriModule:\"Window\",message:{cmd:\"manage\",data:{label:this.label,cmd:{type:\"title\"}}}})}async theme(){return i({__tauriModule:\"Window\",message:{cmd:\"manage\",data:{label:this.label,cmd:{type:\"theme\"}}}})}async center(){return i({__tauriModule:\"Window\",message:{cmd:\"manage\",data:{label:this.label,cmd:{type:\"center\"}}}})}async requestUserAttention(e){let a=null;return e&&(e===1?a={type:\"Critical\"}:a={type:\"Informational\"}),i({__tauriModule:\"Window\",message:{cmd:\"manage\",data:{label:this.label,cmd:{type:\"requestUserAttention\",payload:a}}}})}async setResizable(e){return i({__tauriModule:\"Window\",message:{cmd:\"manage\",data:{label:this.label,cmd:{type:\"setResizable\",payload:e}}}})}async setMaximizable(e){return i({__tauriModule:\"Window\",message:{cmd:\"manage\",data:{label:this.label,cmd:{type:\"setMaximizable\",payload:e}}}})}async setMinimizable(e){return i({__tauriModule:\"Window\",message:{cmd:\"manage\",data:{label:this.label,cmd:{type:\"setMinimizable\",payload:e}}}})}async setClosable(e){return i({__tauriModule:\"Window\",message:{cmd:\"manage\",data:{label:this.label,cmd:{type:\"setClosable\",payload:e}}}})}async setTitle(e){return i({__tauriModule:\"Window\",message:{cmd:\"manage\",data:{label:this.label,cmd:{type:\"setTitle\",payload:e}}}})}async maximize(){return i({__tauriModule:\"Window\",message:{cmd:\"manage\",data:{label:this.label,cmd:{type:\"maximize\"}}}})}async unmaximize(){return i({__tauriModule:\"Window\",message:{cmd:\"manage\",data:{label:this.label,cmd:{type:\"unmaximize\"}}}})}async toggleMaximize(){return i({__tauriModule:\"Window\",message:{cmd:\"manage\",data:{label:this.label,cmd:{type:\"toggleMaximize\"}}}})}async minimize(){return i({__tauriModule:\"Window\",message:{cmd:\"manage\",data:{label:this.label,cmd:{type:\"minimize\"}}}})}async unminimize(){return i({__tauriModule:\"Window\",message:{cmd:\"manage\",data:{label:this.label,cmd:{type:\"unminimize\"}}}})}async show(){return i({__tauriModule:\"Window\",message:{cmd:\"manage\",data:{label:this.label,cmd:{type:\"show\"}}}})}async hide(){return i({__tauriModule:\"Window\",message:{cmd:\"manage\",data:{label:this.label,cmd:{type:\"hide\"}}}})}async close(){return i({__tauriModule:\"Window\",message:{cmd:\"manage\",data:{label:this.label,cmd:{type:\"close\"}}}})}async setDecorations(e){return i({__tauriModule:\"Window\",message:{cmd:\"manage\",data:{label:this.label,cmd:{type:\"setDecorations\",payload:e}}}})}async setAlwaysOnTop(e){return i({__tauriModule:\"Window\",message:{cmd:\"manage\",data:{label:this.label,cmd:{type:\"setAlwaysOnTop\",payload:e}}}})}async setContentProtected(e){return i({__tauriModule:\"Window\",message:{cmd:\"manage\",data:{label:this.label,cmd:{type:\"setContentProtected\",payload:e}}}})}async setSize(e){if(!e||e.type!==\"Logical\"&&e.type!==\"Physical\")throw new Error(\"the `size` argument must be either a LogicalSize or a PhysicalSize instance\");return i({__tauriModule:\"Window\",message:{cmd:\"manage\",data:{label:this.label,cmd:{type:\"setSize\",payload:{type:e.type,data:{width:e.width,height:e.height}}}}}})}async setMinSize(e){if(e&&e.type!==\"Logical\"&&e.type!==\"Physical\")throw new Error(\"the `size` argument must be either a LogicalSize or a PhysicalSize instance\");return i({__tauriModule:\"Window\",message:{cmd:\"manage\",data:{label:this.label,cmd:{type:\"setMinSize\",payload:e?{type:e.type,data:{width:e.width,height:e.height}}:null}}}})}async setMaxSize(e){if(e&&e.type!==\"Logical\"&&e.type!==\"Physical\")throw new Error(\"the `size` argument must be either a LogicalSize or a PhysicalSize instance\");return i({__tauriModule:\"Window\",message:{cmd:\"manage\",data:{label:this.label,cmd:{type:\"setMaxSize\",payload:e?{type:e.type,data:{width:e.width,height:e.height}}:null}}}})}async setPosition(e){if(!e||e.type!==\"Logical\"&&e.type!==\"Physical\")throw new Error(\"the `position` argument must be either a LogicalPosition or a PhysicalPosition instance\");return i({__tauriModule:\"Window\",message:{cmd:\"manage\",data:{label:this.label,cmd:{type:\"setPosition\",payload:{type:e.type,data:{x:e.x,y:e.y}}}}}})}async setFullscreen(e){return i({__tauriModule:\"Window\",message:{cmd:\"manage\",data:{label:this.label,cmd:{type:\"setFullscreen\",payload:e}}}})}async setFocus(){return i({__tauriModule:\"Window\",message:{cmd:\"manage\",data:{label:this.label,cmd:{type:\"setFocus\"}}}})}async setIcon(e){return i({__tauriModule:\"Window\",message:{cmd:\"manage\",data:{label:this.label,cmd:{type:\"setIcon\",payload:{icon:typeof e==\"string\"?e:Array.from(e)}}}}})}async setSkipTaskbar(e){return i({__tauriModule:\"Window\",message:{cmd:\"manage\",data:{label:this.label,cmd:{type:\"setSkipTaskbar\",payload:e}}}})}async setCursorGrab(e){return i({__tauriModule:\"Window\",message:{cmd:\"manage\",data:{label:this.label,cmd:{type:\"setCursorGrab\",payload:e}}}})}async setCursorVisible(e){return i({__tauriModule:\"Window\",message:{cmd:\"manage\",data:{label:this.label,cmd:{type:\"setCursorVisible\",payload:e}}}})}async setCursorIcon(e){return i({__tauriModule:\"Window\",message:{cmd:\"manage\",data:{label:this.label,cmd:{type:\"setCursorIcon\",payload:e}}}})}async setCursorPosition(e){if(!e||e.type!==\"Logical\"&&e.type!==\"Physical\")throw new Error(\"the `position` argument must be either a LogicalPosition or a PhysicalPosition instance\");return i({__tauriModule:\"Window\",message:{cmd:\"manage\",data:{label:this.label,cmd:{type:\"setCursorPosition\",payload:{type:e.type,data:{x:e.x,y:e.y}}}}}})}async setIgnoreCursorEvents(e){return i({__tauriModule:\"Window\",message:{cmd:\"manage\",data:{label:this.label,cmd:{type:\"setIgnoreCursorEvents\",payload:e}}}})}async startDragging(){return i({__tauriModule:\"Window\",message:{cmd:\"manage\",data:{label:this.label,cmd:{type:\"startDragging\"}}}})}async onResized(e){return this.listen(\"tauri://resize\",a=>{a.payload=f(a.payload),e(a)})}async onMoved(e){return this.listen(\"tauri://move\",a=>{a.payload=v(a.payload),e(a)})}async onCloseRequested(e){return this.listen(\"tauri://close-requested\",a=>{let n=new y(a);Promise.resolve(e(n)).then(()=>{if(!n.isPreventDefault())return this.close()})})}async onFocusChanged(e){let a=await this.listen(\"tauri://focus\",d=>{e({...d,payload:!0})}),n=await this.listen(\"tauri://blur\",d=>{e({...d,payload:!1})});return()=>{a(),n()}}async onScaleChanged(e){return this.listen(\"tauri://scale-change\",e)}async onMenuClicked(e){return this.listen(\"tauri://menu\",e)}async onFileDropEvent(e){let a=await this.listen(\"tauri://file-drop\",l=>{e({...l,payload:{type:\"drop\",paths:l.payload}})}),n=await this.listen(\"tauri://file-drop-hover\",l=>{e({...l,payload:{type:\"hover\",paths:l.payload}})}),d=await this.listen(\"tauri://file-drop-cancelled\",l=>{e({...l,payload:{type:\"cancel\"}})});return()=>{a(),n(),d()}}async onThemeChanged(e){return this.listen(\"tauri://theme-changed\",e)}},y=class{constructor(e){this._preventDefault=!1;this.event=e.event,this.windowLabel=e.windowLabel,this.id=e.id}preventDefault(){this._preventDefault=!0}isPreventDefault(){return this._preventDefault}},s=class extends b{constructor(e,a={}){super(e),a?.skip||i({__tauriModule:\"Window\",message:{cmd:\"createWebview\",data:{options:{label:e,...a}}}}).then(async()=>this.emit(\"tauri://created\")).catch(async n=>this.emit(\"tauri://error\",n))}static getByLabel(e){return h().some(a=>a.label===e)?new s(e,{skip:!0}):null}static async getFocusedWindow(){for(let e of h())if(await e.isFocused())return e;return null}},g;\"__TAURI_METADATA__\"in window?g=new s(window.__TAURI_METADATA__.__currentWindow.label,{skip:!0}):(console.warn(`Could not find \"window.__TAURI_METADATA__\". The \"appWindow\" value will reference the \"main\" window label.\nNote that this is not an issue if running this frontend on a browser instead of a Tauri window.`),g=new s(\"main\",{skip:!0}));function p(t){return t===null?null:{name:t.name,scaleFactor:t.scaleFactor,position:v(t.position),size:f(t.size)}}function v(t){return new r(t.x,t.y)}function f(t){return new o(t.width,t.height)}async function C(){return i({__tauriModule:\"Window\",message:{cmd:\"manage\",data:{cmd:{type:\"currentMonitor\"}}}}).then(p)}async function T(){return i({__tauriModule:\"Window\",message:{cmd:\"manage\",data:{cmd:{type:\"primaryMonitor\"}}}}).then(p)}async function D(){return i({__tauriModule:\"Window\",message:{cmd:\"manage\",data:{cmd:{type:\"availableMonitors\"}}}}).then(t=>t.map(p))}export{m as a,o as b,c,r as d,W as e,E as f,h as g,u as h,b as i,y as j,s as k,g as l,C as m,T as n,D as o,S as p};\n", "import{a as n}from\"./chunk-RKMHWDGH.js\";import{a as e}from\"./chunk-FEIY7W7S.js\";var s={};e(s,{isPermissionGranted:()=>o,requestPermission:()=>t,sendNotification:()=>r});async function o(){return window.Notification.permission!==\"default\"?Promise.resolve(window.Notification.permission===\"granted\"):n({__tauriModule:\"Notification\",message:{cmd:\"isNotificationPermissionGranted\"}})}async function t(){return window.Notification.requestPermission()}function r(i){typeof i==\"string\"?new window.Notification(i):new window.Notification(i.title,i)}export{o as a,t as b,r as c,s as d};\n", "function n(){return navigator.appVersion.includes(\"Win\")}export{n as a};\n", "import{a as s}from\"./chunk-V5J25SYE.js\";import{a as r}from\"./chunk-RKMHWDGH.js\";import{a as e}from\"./chunk-FEIY7W7S.js\";var u={};e(u,{EOL:()=>n,arch:()=>a,locale:()=>c,platform:()=>o,tempdir:()=>m,type:()=>t,version:()=>i});var n=s()?`\\r\n`:`\n`;async function o(){return r({__tauriModule:\"Os\",message:{cmd:\"platform\"}})}async function i(){return r({__tauriModule:\"Os\",message:{cmd:\"version\"}})}async function t(){return r({__tauriModule:\"Os\",message:{cmd:\"osType\"}})}async function a(){return r({__tauriModule:\"Os\",message:{cmd:\"arch\"}})}async function m(){return r({__tauriModule:\"Os\",message:{cmd:\"tempdir\"}})}async function c(){return r({__tauriModule:\"Os\",message:{cmd:\"locale\"}})}export{n as a,o as b,i as c,t as d,a as e,m as f,c as g,u as h};\n", "import{a as o}from\"./chunk-RKMHWDGH.js\";import{a as p}from\"./chunk-FEIY7W7S.js\";var x={};p(x,{BaseDirectory:()=>F,Dir:()=>F,copyFile:()=>c,createDir:()=>d,exists:()=>v,readBinaryFile:()=>a,readDir:()=>m,readTextFile:()=>l,removeDir:()=>g,removeFile:()=>O,renameFile:()=>_,writeBinaryFile:()=>f,writeFile:()=>u,writeTextFile:()=>u});var F=(n=>(n[n.Audio=1]=\"Audio\",n[n.Cache=2]=\"Cache\",n[n.Config=3]=\"Config\",n[n.Data=4]=\"Data\",n[n.LocalData=5]=\"LocalData\",n[n.Desktop=6]=\"Desktop\",n[n.Document=7]=\"Document\",n[n.Download=8]=\"Download\",n[n.Executable=9]=\"Executable\",n[n.Font=10]=\"Font\",n[n.Home=11]=\"Home\",n[n.Picture=12]=\"Picture\",n[n.Public=13]=\"Public\",n[n.Runtime=14]=\"Runtime\",n[n.Template=15]=\"Template\",n[n.Video=16]=\"Video\",n[n.Resource=17]=\"Resource\",n[n.App=18]=\"App\",n[n.Log=19]=\"Log\",n[n.Temp=20]=\"Temp\",n[n.AppConfig=21]=\"AppConfig\",n[n.AppData=22]=\"AppData\",n[n.AppLocalData=23]=\"AppLocalData\",n[n.AppCache=24]=\"AppCache\",n[n.AppLog=25]=\"AppLog\",n))(F||{});async function l(i,t={}){return o({__tauriModule:\"Fs\",message:{cmd:\"readTextFile\",path:i,options:t}})}async function a(i,t={}){let s=await o({__tauriModule:\"Fs\",message:{cmd:\"readFile\",path:i,options:t}});return Uint8Array.from(s)}async function u(i,t,s){typeof s==\"object\"&&Object.freeze(s),typeof i==\"object\"&&Object.freeze(i);let e={path:\"\",contents:\"\"},r=s;return typeof i==\"string\"?e.path=i:(e.path=i.path,e.contents=i.contents),typeof t==\"string\"?e.contents=t??\"\":r=t,o({__tauriModule:\"Fs\",message:{cmd:\"writeFile\",path:e.path,contents:Array.from(new TextEncoder().encode(e.contents)),options:r}})}async function f(i,t,s){typeof s==\"object\"&&Object.freeze(s),typeof i==\"object\"&&Object.freeze(i);let e={path:\"\",contents:[]},r=s;return typeof i==\"string\"?e.path=i:(e.path=i.path,e.contents=i.contents),t&&\"dir\"in t?r=t:typeof i==\"string\"&&(e.contents=t??[]),o({__tauriModule:\"Fs\",message:{cmd:\"writeFile\",path:e.path,contents:Array.from(e.contents instanceof ArrayBuffer?new Uint8Array(e.contents):e.contents),options:r}})}async function m(i,t={}){return o({__tauriModule:\"Fs\",message:{cmd:\"readDir\",path:i,options:t}})}async function d(i,t={}){return o({__tauriModule:\"Fs\",message:{cmd:\"createDir\",path:i,options:t}})}async function g(i,t={}){return o({__tauriModule:\"Fs\",message:{cmd:\"removeDir\",path:i,options:t}})}async function c(i,t,s={}){return o({__tauriModule:\"Fs\",message:{cmd:\"copyFile\",source:i,destination:t,options:s}})}async function O(i,t={}){return o({__tauriModule:\"Fs\",message:{cmd:\"removeFile\",path:i,options:t}})}async function _(i,t,s={}){return o({__tauriModule:\"Fs\",message:{cmd:\"renameFile\",oldPath:i,newPath:t,options:s}})}async function v(i,t={}){return o({__tauriModule:\"Fs\",message:{cmd:\"exists\",path:i,options:t}})}export{F as a,l as b,a as c,u as d,f as e,m as f,d as g,g as h,c as i,O as j,_ as k,v as l,x as m};\n", "import{a as e}from\"./chunk-V5J25SYE.js\";import{a as i}from\"./chunk-GP2EXCRB.js\";import{a as r}from\"./chunk-RKMHWDGH.js\";import{a as o}from\"./chunk-FEIY7W7S.js\";var q={};o(q,{BaseDirectory:()=>i,appCacheDir:()=>g,appConfigDir:()=>s,appDataDir:()=>c,appDir:()=>u,appLocalDataDir:()=>m,appLogDir:()=>n,audioDir:()=>d,basename:()=>V,cacheDir:()=>P,configDir:()=>h,dataDir:()=>l,delimiter:()=>z,desktopDir:()=>_,dirname:()=>F,documentDir:()=>p,downloadDir:()=>y,executableDir:()=>f,extname:()=>H,fontDir:()=>D,homeDir:()=>M,isAbsolute:()=>W,join:()=>E,localDataDir:()=>v,logDir:()=>w,normalize:()=>B,pictureDir:()=>b,publicDir:()=>A,resolve:()=>T,resolveResource:()=>x,resourceDir:()=>C,runtimeDir:()=>L,sep:()=>j,templateDir:()=>R,videoDir:()=>k});async function u(){return s()}async function s(){return r({__tauriModule:\"Path\",message:{cmd:\"resolvePath\",path:\"\",directory:21}})}async function c(){return r({__tauriModule:\"Path\",message:{cmd:\"resolvePath\",path:\"\",directory:22}})}async function m(){return r({__tauriModule:\"Path\",message:{cmd:\"resolvePath\",path:\"\",directory:23}})}async function g(){return r({__tauriModule:\"Path\",message:{cmd:\"resolvePath\",path:\"\",directory:24}})}async function d(){return r({__tauriModule:\"Path\",message:{cmd:\"resolvePath\",path:\"\",directory:1}})}async function P(){return r({__tauriModule:\"Path\",message:{cmd:\"resolvePath\",path:\"\",directory:2}})}async function h(){return r({__tauriModule:\"Path\",message:{cmd:\"resolvePath\",path:\"\",directory:3}})}async function l(){return r({__tauriModule:\"Path\",message:{cmd:\"resolvePath\",path:\"\",directory:4}})}async function _(){return r({__tauriModule:\"Path\",message:{cmd:\"resolvePath\",path:\"\",directory:6}})}async function p(){return r({__tauriModule:\"Path\",message:{cmd:\"resolvePath\",path:\"\",directory:7}})}async function y(){return r({__tauriModule:\"Path\",message:{cmd:\"resolvePath\",path:\"\",directory:8}})}async function f(){return r({__tauriModule:\"Path\",message:{cmd:\"resolvePath\",path:\"\",directory:9}})}async function D(){return r({__tauriModule:\"Path\",message:{cmd:\"resolvePath\",path:\"\",directory:10}})}async function M(){return r({__tauriModule:\"Path\",message:{cmd:\"resolvePath\",path:\"\",directory:11}})}async function v(){return r({__tauriModule:\"Path\",message:{cmd:\"resolvePath\",path:\"\",directory:5}})}async function b(){return r({__tauriModule:\"Path\",message:{cmd:\"resolvePath\",path:\"\",directory:12}})}async function A(){return r({__tauriModule:\"Path\",message:{cmd:\"resolvePath\",path:\"\",directory:13}})}async function C(){return r({__tauriModule:\"Path\",message:{cmd:\"resolvePath\",path:\"\",directory:17}})}async function x(t){return r({__tauriModule:\"Path\",message:{cmd:\"resolvePath\",path:t,directory:17}})}async function L(){return r({__tauriModule:\"Path\",message:{cmd:\"resolvePath\",path:\"\",directory:14}})}async function R(){return r({__tauriModule:\"Path\",message:{cmd:\"resolvePath\",path:\"\",directory:15}})}async function k(){return r({__tauriModule:\"Path\",message:{cmd:\"resolvePath\",path:\"\",directory:16}})}async function w(){return n()}async function n(){return r({__tauriModule:\"Path\",message:{cmd:\"resolvePath\",path:\"\",directory:25}})}var j=e()?\"\\\\\":\"/\",z=e()?\";\":\":\";async function T(...t){return r({__tauriModule:\"Path\",message:{cmd:\"resolve\",paths:t}})}async function B(t){return r({__tauriModule:\"Path\",message:{cmd:\"normalize\",path:t}})}async function E(...t){return r({__tauriModule:\"Path\",message:{cmd:\"join\",paths:t}})}async function F(t){return r({__tauriModule:\"Path\",message:{cmd:\"dirname\",path:t}})}async function H(t){return r({__tauriModule:\"Path\",message:{cmd:\"extname\",path:t}})}async function V(t,a){return r({__tauriModule:\"Path\",message:{cmd:\"basename\",path:t,ext:a}})}async function W(t){return r({__tauriModule:\"Path\",message:{cmd:\"isAbsolute\",path:t}})}export{u as a,s as b,c,m as d,g as e,d as f,P as g,h,l as i,_ as j,p as k,y as l,f as m,D as n,M as o,v as p,b as q,A as r,C as s,x as t,L as u,R as v,k as w,w as x,n as y,j as z,z as A,T as B,B as C,E as D,F as E,H as F,V as G,W as H,q as I};\n", "import{a as e}from\"./chunk-RKMHWDGH.js\";import{a as o}from\"./chunk-FEIY7W7S.js\";var s={};o(s,{exit:()=>i,relaunch:()=>n});async function i(r=0){return e({__tauriModule:\"Process\",message:{cmd:\"exit\",exitCode:r}})}async function n(){return e({__tauriModule:\"Process\",message:{cmd:\"relaunch\"}})}export{i as a,n as b,s as c};\n", "import{a as d}from\"./chunk-RKMHWDGH.js\";import{a as h}from\"./chunk-5UWJICAP.js\";import{a as u}from\"./chunk-FEIY7W7S.js\";var m={};u(m,{Child:()=>c,Command:()=>l,EventEmitter:()=>i,open:()=>g});async function p(o,e,t=[],r){return typeof t==\"object\"&&Object.freeze(t),d({__tauriModule:\"Shell\",message:{cmd:\"execute\",program:e,args:t,options:r,onEventFn:h(o)}})}var i=class{constructor(){this.eventListeners=Object.create(null)}addListener(e,t){return this.on(e,t)}removeListener(e,t){return this.off(e,t)}on(e,t){return e in this.eventListeners?this.eventListeners[e].push(t):this.eventListeners[e]=[t],this}once(e,t){let r=(...s)=>{this.removeListener(e,r),t(...s)};return this.addListener(e,r)}off(e,t){return e in this.eventListeners&&(this.eventListeners[e]=this.eventListeners[e].filter(r=>r!==t)),this}removeAllListeners(e){return e?delete this.eventListeners[e]:this.eventListeners=Object.create(null),this}emit(e,...t){if(e in this.eventListeners){let r=this.eventListeners[e];for(let s of r)s(...t);return!0}return!1}listenerCount(e){return e in this.eventListeners?this.eventListeners[e].length:0}prependListener(e,t){return e in this.eventListeners?this.eventListeners[e].unshift(t):this.eventListeners[e]=[t],this}prependOnceListener(e,t){let r=(...s)=>{this.removeListener(e,r),t(...s)};return this.prependListener(e,r)}},c=class{constructor(e){this.pid=e}async write(e){return d({__tauriModule:\"Shell\",message:{cmd:\"stdinWrite\",pid:this.pid,buffer:typeof e==\"string\"?e:Array.from(e)}})}async kill(){return d({__tauriModule:\"Shell\",message:{cmd:\"killChild\",pid:this.pid}})}},l=class extends i{constructor(t,r=[],s){super();this.stdout=new i;this.stderr=new i;this.program=t,this.args=typeof r==\"string\"?[r]:r,this.options=s??{}}static sidecar(t,r=[],s){let a=new l(t,r,s);return a.options.sidecar=!0,a}async spawn(){return p(t=>{switch(t.event){case\"Error\":this.emit(\"error\",t.payload);break;case\"Terminated\":this.emit(\"close\",t.payload);break;case\"Stdout\":this.stdout.emit(\"data\",t.payload);break;case\"Stderr\":this.stderr.emit(\"data\",t.payload);break}},this.program,this.args,this.options).then(t=>new c(t))}async execute(){return new Promise((t,r)=>{this.on(\"error\",r);let s=[],a=[];this.stdout.on(\"data\",n=>{s.push(n)}),this.stderr.on(\"data\",n=>{a.push(n)}),this.on(\"close\",n=>{t({code:n.code,signal:n.signal,stdout:s.join(`\n`),stderr:a.join(`\n`)})}),this.spawn().catch(r)})}};async function g(o,e){return d({__tauriModule:\"Shell\",message:{cmd:\"open\",path:o,with:e}})}export{i as a,c as b,l as c,g as d,m as e};\n", "import{a as e}from\"./chunk-RKMHWDGH.js\";import{a as r}from\"./chunk-FEIY7W7S.js\";var u={};r(u,{getName:()=>n,getTauriVersion:()=>s,getVersion:()=>i,hide:()=>t,show:()=>o});async function i(){return e({__tauriModule:\"App\",message:{cmd:\"getAppVersion\"}})}async function n(){return e({__tauriModule:\"App\",message:{cmd:\"getAppName\"}})}async function s(){return e({__tauriModule:\"App\",message:{cmd:\"getTauriVersion\"}})}async function o(){return e({__tauriModule:\"App\",message:{cmd:\"show\"}})}async function t(){return e({__tauriModule:\"App\",message:{cmd:\"hide\"}})}export{i as a,n as b,s as c,o as d,t as e,u as f};\n", "import{a as e}from\"./chunk-RKMHWDGH.js\";import{a}from\"./chunk-FEIY7W7S.js\";var t={};a(t,{getMatches:()=>c});async function c(){return e({__tauriModule:\"Cli\",message:{cmd:\"cliMatches\"}})}export{c as a,t as b};\n", "import{a as e}from\"./chunk-RKMHWDGH.js\";import{a as t}from\"./chunk-FEIY7W7S.js\";var n={};t(n,{readText:()=>i,writeText:()=>a});async function a(r){return e({__tauriModule:\"Clipboard\",message:{cmd:\"writeText\",data:r}})}async function i(){return e({__tauriModule:\"Clipboard\",message:{cmd:\"readText\",data:null}})}export{a,i as b,n as c};\n", "import{a as n}from\"./chunk-RKMHWDGH.js\";import{a as o}from\"./chunk-FEIY7W7S.js\";var c={};o(c,{ask:()=>l,confirm:()=>g,message:()=>s,open:()=>a,save:()=>r});async function a(t={}){return typeof t==\"object\"&&Object.freeze(t),n({__tauriModule:\"Dialog\",message:{cmd:\"openDialog\",options:t}})}async function r(t={}){return typeof t==\"object\"&&Object.freeze(t),n({__tauriModule:\"Dialog\",message:{cmd:\"saveDialog\",options:t}})}async function s(t,i){let e=typeof i==\"string\"?{title:i}:i;return n({__tauriModule:\"Dialog\",message:{cmd:\"messageDialog\",message:t.toString(),title:e?.title?.toString(),type:e?.type,buttonLabel:e?.okLabel?.toString()}})}async function l(t,i){let e=typeof i==\"string\"?{title:i}:i;return n({__tauriModule:\"Dialog\",message:{cmd:\"askDialog\",message:t.toString(),title:e?.title?.toString(),type:e?.type,buttonLabels:[e?.okLabel?.toString()??\"Yes\",e?.cancelLabel?.toString()??\"No\"]}})}async function g(t,i){let e=typeof i==\"string\"?{title:i}:i;return n({__tauriModule:\"Dialog\",message:{cmd:\"confirmDialog\",message:t.toString(),title:e?.title?.toString(),type:e?.type,buttonLabels:[e?.okLabel?.toString()??\"Ok\",e?.cancelLabel?.toString()??\"Cancel\"]}})}export{a,r as b,s as c,l as d,g as e,c as f};\n", "import{a as e}from\"./chunk-RKMHWDGH.js\";import{a as o}from\"./chunk-5UWJICAP.js\";import{a as i}from\"./chunk-FEIY7W7S.js\";var c={};i(c,{isRegistered:()=>u,register:()=>s,registerAll:()=>n,unregister:()=>a,unregisterAll:()=>l});async function s(r,t){return e({__tauriModule:\"GlobalShortcut\",message:{cmd:\"register\",shortcut:r,handler:o(t)}})}async function n(r,t){return e({__tauriModule:\"GlobalShortcut\",message:{cmd:\"registerAll\",shortcuts:r,handler:o(t)}})}async function u(r){return e({__tauriModule:\"GlobalShortcut\",message:{cmd:\"isRegistered\",shortcut:r}})}async function a(r){return e({__tauriModule:\"GlobalShortcut\",message:{cmd:\"unregister\",shortcut:r}})}async function l(){return e({__tauriModule:\"GlobalShortcut\",message:{cmd:\"unregisterAll\"}})}export{s as a,n as b,u as c,a as d,l as e,c as f};\n", "import{a as u}from\"./chunk-RKMHWDGH.js\";import{a as f}from\"./chunk-FEIY7W7S.js\";var T={};f(T,{Body:()=>i,Client:()=>p,Response:()=>m,ResponseType:()=>c,fetch:()=>y,getClient:()=>d});var c=(s=>(s[s.JSON=1]=\"JSON\",s[s.Text=2]=\"Text\",s[s.Binary=3]=\"Binary\",s))(c||{}),i=class{constructor(e,r){this.type=e,this.payload=r}static form(e){let r={},s=(n,t)=>{if(t!==null){let a;typeof t==\"string\"?a=t:t instanceof Uint8Array||Array.isArray(t)?a=Array.from(t):t instanceof File?a={file:t.name,mime:t.type,fileName:t.name}:typeof t.file==\"string\"?a={file:t.file,mime:t.mime,fileName:t.fileName}:a={file:Array.from(t.file),mime:t.mime,fileName:t.fileName},r[String(n)]=a}};if(e instanceof FormData)for(let[n,t]of e)s(n,t);else for(let[n,t]of Object.entries(e))s(n,t);return new i(\"Form\",r)}static json(e){return new i(\"Json\",e)}static text(e){return new i(\"Text\",e)}static bytes(e){return new i(\"Bytes\",Array.from(e instanceof ArrayBuffer?new Uint8Array(e):e))}},m=class{constructor(e){this.url=e.url,this.status=e.status,this.ok=this.status>=200&&this.status<300,this.headers=e.headers,this.rawHeaders=e.rawHeaders,this.data=e.data}},p=class{constructor(e){this.id=e}async drop(){return u({__tauriModule:\"Http\",message:{cmd:\"dropClient\",client:this.id}})}async request(e){let r=!e.responseType||e.responseType===1;return r&&(e.responseType=2),u({__tauriModule:\"Http\",message:{cmd:\"httpRequest\",client:this.id,options:e}}).then(s=>{let n=new m(s);if(r){try{n.data=JSON.parse(n.data)}catch(t){if(n.ok&&n.data===\"\")n.data={};else if(n.ok)throw Error(`Failed to parse response \\`${n.data}\\` as JSON: ${t};\n              try setting the \\`responseType\\` option to \\`ResponseType.Text\\` or \\`ResponseType.Binary\\` if the API does not return a JSON response.`)}return n}return n})}async get(e,r){return this.request({method:\"GET\",url:e,...r})}async post(e,r,s){return this.request({method:\"POST\",url:e,body:r,...s})}async put(e,r,s){return this.request({method:\"PUT\",url:e,body:r,...s})}async patch(e,r){return this.request({method:\"PATCH\",url:e,...r})}async delete(e,r){return this.request({method:\"DELETE\",url:e,...r})}};async function d(o){return u({__tauriModule:\"Http\",message:{cmd:\"createClient\",options:o}}).then(e=>new p(e))}var l=null;async function y(o,e){return l===null&&(l=await d()),l.request({url:o,method:e?.method??\"GET\",...e})}export{c as a,i as b,m as c,p as d,d as e,y as f,T as g};\n", "import{d as h}from\"./chunk-4NZJJ336.js\";import{p as u}from\"./chunk-NMUKSDLG.js\";import{d as l}from\"./chunk-CICBN6X2.js\";import{h as v}from\"./chunk-2GTLV2NE.js\";import{I as n}from\"./chunk-PEDMYRP6.js\";import\"./chunk-V5J25SYE.js\";import{c}from\"./chunk-3O263AOJ.js\";import{e as d}from\"./chunk-6XWZL67Z.js\";import{f as m}from\"./chunk-DIFM6EX4.js\";import{b as t}from\"./chunk-6IDLE7HB.js\";import{c as i}from\"./chunk-6PDK3LJA.js\";import{f as a}from\"./chunk-WJKH4UU7.js\";import{h as p}from\"./chunk-M3Y6ZK7U.js\";import{m as s}from\"./chunk-GP2EXCRB.js\";import{f}from\"./chunk-ITP3W3MJ.js\";import{g as e}from\"./chunk-XH7VLPQH.js\";import\"./chunk-RKMHWDGH.js\";import{b as o,d as r}from\"./chunk-5UWJICAP.js\";import\"./chunk-FEIY7W7S.js\";var b=o;export{m as app,t as cli,i as clipboard,a as dialog,p as event,s as fs,f as globalShortcut,e as http,b as invoke,l as notification,v as os,n as path,c as process,d as shell,r as tauri,h as updater,u as window};\n"],
  "mappings": "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,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ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",
  "names": ["root", "factory", "exports", "module", "define", "amd", "a", "i", "self", "e", "t", "s", "r", "n", "o", "h", "c", "l", "d", "AccessibilityManager", "Disposable", "_terminal", "super", "_renderService", "_liveRegionLineCount", "_charsToConsume", "_charsToAnnounce", "this", "_accessibilityContainer", "document", "createElement", "classList", "add", "_rowContainer", "setAttribute", "_rowElements", "rows", "_createAccessibilityTreeNode", "appendChild", "_topBoundaryFocusListener", "_handleBoundaryFocus", "_bottomBoundaryFocusListener", "addEventListener", "length", "_refreshRowsDimensions", "_liveRegion", "_liveRegionDebouncer", "register", "TimeBasedDebouncer", "_renderRows", "bind", "element", "Error", "insertAdjacentElement", "onResize", "_handleResize", "onRender", "_refreshRows", "start", "end", "onScroll", "onA11yChar", "char", "_handleChar", "onLineFeed", "onA11yTab", "spaceCount", "_handleTab", "onKey", "_handleKey", "key", "onBlur", "_clearLiveRegion", "onDimensionsChange", "_screenDprMonitor", "ScreenDprMonitor", "window", "setListener", "addDisposableDomListener", "toDisposable", "remove", "MAX_ROWS_TO_READ", "shift", "textContent", "Strings", "tooMuchOutput", "isMac", "parentNode", "setTimeout", "keyChar", "test", "push", "refresh", "buffer", "setSize", "lines", "toString", "lineData", "translateBufferLineToString", "ydisp", "posInSet", "innerText", "_announceCharacters", "position", "boundaryElement", "target", "beforeBoundaryElement", "getAttribute", "relatedTarget", "topBoundaryElement", "bottomBoundaryElement", "pop", "removeChild", "removeEventListener", "newElement", "unshift", "scrollLines", "focus", "preventDefault", "stopImmediatePropagation", "children", "tabIndex", "_refreshRowDimensions", "dimensions", "css", "cell", "height", "style", "width", "canvas", "IRenderService", "prepareTextForTerminal", "text", "replace", "bracketTextForPaste", "bracketedPasteMode", "paste", "textarea", "coreService", "optionsService", "decPrivateModes", "rawOptions", "ignoreBracketedPasteMode", "triggerDataEvent", "value", "moveTextAreaUnderMouseCursor", "ev", "screenElement", "pos", "getBoundingClientRect", "left", "clientX", "top", "clientY", "zIndex", "selectionService", "clipboardData", "setData", "selectionText", "stopPropagation", "getData", "shouldSelectWord", "rightClickSelect", "select", "_color", "TwoKeyMap", "_css", "bg", "fg", "set", "get", "clear", "node", "type", "handler", "options", "disposed", "dispose", "Linkifier2", "currentLink", "_currentLink", "_bufferService", "_linkProviders", "_linkCacheDisposables", "_isMouseOut", "_wasResized", "_activeLine", "_onShowLinkUnderline", "EventEmitter", "onShowLinkUnderline", "event", "_onHideLinkUnderline", "onHideLinkUnderline", "getDisposeArrayDisposable", "_lastMouseEvent", "_clearCurrentLink", "linkProvider", "providerIndex", "indexOf", "splice", "mouseService", "renderService", "_element", "_mouseService", "_handleMouseMove", "_handleMouseDown", "_handleMouseUp", "_positionFromMouseEvent", "composedPath", "contains", "_lastBufferCell", "x", "y", "_handleHover", "_askForLink", "_linkAtPosition", "link", "useLineCache", "_activeProviderReplies", "forEach", "reply", "linkWithState", "Map", "linkProvided", "entries", "_checkLinkProviderResult", "provideLinks", "links", "linksWithState", "map", "size", "_removeIntersectingLinks", "replies", "occupiedCells", "Set", "providerReply", "startX", "range", "endX", "cols", "has", "index", "hasLinkBefore", "j", "linkAtPosition", "find", "_handleNewLink", "_mouseDownLink", "activate", "startRow", "endRow", "_linkLeave", "disposeArray", "state", "decorations", "underline", "pointerCursor", "isHovered", "_linkHover", "Object", "defineProperties", "v", "toggle", "_fireUnderlineEvent", "onRenderedViewportChange", "hover", "showEvent", "scrollOffset", "_createLinkUnderlineEvent", "undefined", "fire", "leave", "lower", "upper", "current", "coords", "getCoords", "x1", "y1", "x2", "y2", "IBufferService", "promptLabel", "OscLinkProvider", "_optionsService", "_oscLinkService", "callback", "line", "result", "linkHandler", "CellData", "lineLength", "getTrimmedLength", "currentLinkId", "currentStart", "finishLink", "hasContent", "loadCell", "hasExtendedAttrs", "extended", "urlId", "getLinkData", "uri", "ignoreLink", "allowNonHttpProtocols", "parsed", "URL", "includes", "protocol", "defaultActivate", "confirm", "newWindow", "open", "opener", "location", "href", "console", "warn", "IOptionsService", "IOscLinkService", "_parentWindow", "_renderCallback", "_refreshCallbacks", "_animationFrame", "cancelAnimationFrame", "requestAnimationFrame", "_innerRefresh", "rowStart", "rowEnd", "rowCount", "_rowCount", "_rowStart", "Math", "min", "_rowEnd", "max", "_runRefreshCallbacks", "_currentDevicePixelRatio", "devicePixelRatio", "clearListener", "listener", "_listener", "_outerListener", "_updateDpr", "_resolutionMediaMatchList", "removeListener", "matchMedia", "addListener", "_", "u", "f", "p", "g", "m", "S", "C", "b", "w", "E", "k", "L", "D", "R", "A", "B", "T", "M", "Terminal", "CoreTerminal", "onFocus", "_onFocus", "_onBlur", "_onA11yCharEmitter", "_onA11yTabEmitter", "onWillOpen", "_onWillOpen", "browser", "Browser", "_keyDownHandled", "_keyDownSeen", "_keyPressHandled", "_unprocessedDeadKey", "_accessibilityManager", "MutableDisposable", "_onCursorMove", "onCursorMove", "_onKey", "_onRender", "_onSelectionChange", "onSelectionChange", "_onTitleChange", "onTitleChange", "_onBell", "onBell", "_setup", "linkifier2", "_instantiationService", "createInstance", "registerLinkProvider", "_decorationService", "DecorationService", "setService", "IDecorationService", "_inputHandler", "onRequestBell", "onRequestRefreshRows", "onRequestSendFocus", "_reportFocus", "onRequestReset", "reset", "onRequestWindowsOptionsReport", "_reportWindowsOptions", "onColor", "_handleColorEvent", "forwardEvent", "_afterResize", "_customKeyEventHandler", "_themeService", "req", "acc", "ident", "channels", "color", "toColorRGB", "colors", "ansi", "C0", "ESC", "toRgbString", "C1_ESCAPED", "ST", "modifyColors", "rgba", "toColor", "narrowedAcc", "restoreColor", "buffers", "active", "preventScroll", "sendFocus", "updateCursorStyle", "_showCursor", "blur", "_handleTextAreaBlur", "_syncTextArea", "isCursorInViewport", "_compositionHelper", "isComposing", "cursorY", "ybase", "bufferLine", "cursorX", "cellHeight", "getWidth", "cellWidth", "cursorTop", "cursorLeft", "lineHeight", "_initGlobal", "_bindKeys", "hasSelection", "copyHandler", "_selectionService", "pasteHandlerWrapper", "handlePasteEvent", "isFirefox", "button", "rightClickHandler", "rightClickSelectsWord", "isLinux", "_keyUp", "_keyDown", "_keyPress", "compositionstart", "compositionupdate", "compositionend", "_inputEvent", "updateCompositionElements", "parent", "isConnected", "_logService", "debug", "_document", "ownerDocument", "dir", "fragment", "createDocumentFragment", "_viewportElement", "_viewportScrollArea", "_helperContainer", "isChromeOS", "_coreBrowserService", "CoreBrowserService", "defaultView", "ICoreBrowserService", "_handleTextAreaFocus", "_charSizeService", "CharSizeService", "ICharSizeService", "ThemeService", "IThemeService", "_characterJoinerService", "CharacterJoinerService", "ICharacterJoinerService", "RenderService", "resize", "_compositionView", "CompositionHelper", "hasRenderer", "setRenderer", "_createRenderer", "MouseService", "IMouseService", "viewport", "Viewport", "onRequestScrollLines", "amount", "suppressScrollEvent", "onRequestSyncScrollBar", "syncScrollArea", "handleCursorMove", "handleResize", "handleBlur", "handleFocus", "SelectionService", "ISelectionService", "onRequestRedraw", "handleSelectionChanged", "columnSelectMode", "onLinuxMouseSelection", "_onScroll", "attachToDom", "BufferDecorationRenderer", "handleMouseDown", "coreMouseService", "areMouseEventsActive", "disable", "enable", "screenReaderMode", "onSpecificOptionChange", "_handleScreenReaderModeOptionChange", "overviewRulerWidth", "_overviewRulerRenderer", "OverviewRulerRenderer", "measure", "bindMouse", "DomRenderer", "el", "sendEvent", "getMouseReportCoords", "but", "action", "overrideType", "buttons", "getLinesScrolled", "deltaY", "triggerMouseEvent", "col", "row", "ctrl", "ctrlKey", "alt", "altKey", "shiftKey", "requestedEvents", "mouseup", "wheel", "mousedrag", "mousemove", "eventListeners", "cancel", "onProtocolChange", "events", "logLevel", "explainEvents", "passive", "activeProtocol", "shouldForceSelection", "hasScrollback", "sequence", "applicationCursorKeys", "data", "abs", "handleWheel", "handleTouchStart", "handleTouchMove", "refreshRows", "shouldColumnSelect", "isCursorInitialized", "disp", "source", "customKeyEventHandler", "joinerId", "deregister", "markers", "cursorYOffset", "addMarker", "decorationOptions", "registerDecoration", "column", "setSelection", "getSelection", "getSelectionPosition", "selectionStart", "selectionEnd", "clearSelection", "selectAll", "selectLines", "shouldIgnoreComposition", "macOptionIsMeta", "keydown", "scrollOnUserInput", "scrollToBottom", "evaluateKeyboardEvent", "scrollCount", "_isThirdLevelShift", "metaKey", "charCodeAt", "ETX", "CR", "domEvent", "thirdLevelKey", "isWindows", "getModifierState", "keyCode", "charCode", "which", "String", "fromCharCode", "inputType", "composed", "hasValidSize", "clearAllMarkers", "getBlankLine", "DEFAULT_ATTR_DATA", "clearTextureAtlas", "WindowsOptionsReportType", "GET_WIN_SIZE_PIXELS", "canvasWidth", "toFixed", "canvasHeight", "GET_CELL_SIZE_PIXELS", "force", "cancelEvents", "P", "_debounceThresholdMS", "_lastRefreshMs", "_additionalRefreshRequested", "_refreshTimeoutID", "clearTimeout", "refreshRequestTime", "Date", "now", "elapsed", "waitPeriodBeforeTrailingRefresh", "_scrollArea", "themeService", "scrollBarWidth", "_currentRowHeight", "_currentDeviceCellHeight", "_lastRecordedBufferLength", "_lastRecordedViewportHeight", "_lastRecordedBufferHeight", "_lastTouchY", "_lastScrollTop", "_wheelPartialScroll", "_refreshAnimationFrame", "_ignoreNextScrollEvent", "_smoothScrollState", "startTime", "origin", "_onRequestScrollLines", "offsetWidth", "_handleScroll", "_activeBuffer", "onBufferActivate", "activeBuffer", "_renderDimensions", "_handleThemeChange", "onChangeColors", "backgroundColor", "background", "immediate", "device", "dpr", "offsetHeight", "newBufferHeight", "round", "scrollTop", "_refresh", "offsetParent", "diff", "_smoothScroll", "_isDisposed", "percent", "_smoothScrollPercent", "_clearSmoothScrollState", "smoothScrollDuration", "scrollPosFromTop", "cancelable", "_getPixelsScrolled", "scrollHeight", "_bubbleScroll", "_applyScrollModifier", "deltaMode", "WheelEvent", "DOM_DELTA_LINE", "DOM_DELTA_PAGE", "startLine", "endLine", "cursorElement", "currentLine", "bufferElements", "isWrapped", "translateToString", "div", "DOM_DELTA_PIXEL", "floor", "modifier", "fastScrollModifier", "fastScrollSensitivity", "scrollSensitivity", "touches", "pageY", "_screenElement", "_decorationElements", "_altBufferIsActive", "_dimensionsChanged", "_container", "_doRefreshDecorations", "_queueRefresh", "onDecorationRegistered", "onDecorationRemoved", "decoration", "_removeDecoration", "addRefreshCallback", "_renderDecoration", "_refreshStyle", "_refreshXPosition", "layer", "marker", "display", "onRenderEmitter", "_createElement", "onDispose", "delete", "anchor", "right", "_zones", "_zonePool", "_zonePoolIndex", "_linePadding", "full", "center", "zones", "overviewRulerOptions", "z", "_lineIntersectsZone", "_lineAdjacentToZone", "_addLineToZone", "startBufferLine", "endBufferLine", "padding", "zone", "drawHeight", "drawWidth", "drawX", "_width", "_coreBrowseService", "_colorZoneStore", "ColorZoneStore", "_shouldUpdateDimensions", "_shouldUpdateAnchor", "_lastKnownBufferLength", "_canvas", "_refreshCanvasDimensions", "parentElement", "insertBefore", "ctx", "getContext", "_ctx", "_registerDecorationListeners", "_registerBufferChangeListeners", "_registerDimensionChangeListeners", "normal", "_refreshDrawHeightConstants", "_refreshColorZonePadding", "_containerHeight", "clientHeight", "_refreshDrawConstants", "outerWidth", "innerWidth", "ceil", "pixelsPerLine", "nonFullHeight", "setPadding", "_refreshDecorations", "clearRect", "addDecoration", "lineWidth", "_renderColorZone", "fillStyle", "fillRect", "updateCanvasDimensions", "updateAnchor", "_isComposing", "_textarea", "_coreService", "_isSendingComposition", "_compositionPosition", "_dataAlreadySent", "_finalizeComposition", "_handleAnyTextareaChanges", "waitForPropagation", "currentCompositionPosition", "input", "substring", "oldValue", "newValue", "DEL", "dontRecurse", "fontFamily", "fontSize", "compositionViewBounds", "ICoreService", "getCoordsRelativeToElement", "rect", "elementStyle", "getComputedStyle", "leftPadding", "parseInt", "getPropertyValue", "topPadding", "colCount", "hasValidCharSize", "cssCellWidth", "cssCellHeight", "isSelection", "moveToRequestedRow", "startY", "targetY", "bufferService", "applicationCursor", "wrappedRowsForRow", "rowsToMove", "wrappedRows", "direction", "verticalDirection", "repeat", "currentRow", "lineWraps", "startCol", "endCol", "forward", "currentCol", "bufferStr", "mod", "count", "str", "rpt", "targetX", "rowDifference", "currX", "TERMINAL_CLASS_PREFIX", "ROW_CONTAINER_CLASS", "FG_CLASS_PREFIX", "BG_CLASS_PREFIX", "FOCUS_CLASS", "SELECTION_CLASS", "nextTerminalId", "_linkifier2", "instantiationService", "_terminalClass", "_refreshRowElements", "_selectionContainer", "createRenderDimensions", "_updateDimensions", "onOptionChange", "_handleOptionsChanged", "_injectCss", "_rowFactory", "DomRendererRowFactory", "_handleLinkHover", "_handleLinkLeave", "_widthCache", "_themeStyleElement", "_dimensionsStyleElement", "WidthCache", "setFont", "fontWeight", "fontWeightBold", "_setDefaultSpacing", "letterSpacing", "overflow", "styles", "_terminalSelector", "foreground", "multiplyOpacity", "cursor", "cursorAccent", "cursorWidth", "selectionBackgroundOpaque", "selectionInactiveBackgroundOpaque", "INVERTED_DEFAULT_COLOR", "opaque", "spacing", "defaultSpacing", "handleDevicePixelRatioChange", "handleCharSizeChanged", "renderRows", "replaceChildren", "viewportStartRow", "viewportEndRow", "viewportCappedStartRow", "viewportCappedEndRow", "documentFragment", "isXFlipped", "_createSelectionElement", "middleRowsCount", "colStart", "colEnd", "cursorAbsoluteY", "cursorBlink", "cursorStyle", "cursorInactiveStyle", "rowElement", "createRow", "_setCellUnderline", "enabled", "maxY", "bufferline", "IInstantiationService", "_workCell", "_columnSelectMode", "_selectionStart", "_selectionEnd", "isCursorRow", "widthCache", "linkStart", "linkEnd", "elements", "joinedRanges", "getJoinedCharacters", "charElement", "getNoBgTrimmedLength", "cellAmount", "oldBg", "oldFg", "oldExt", "oldLinkHover", "oldSpacing", "oldIsInSelection", "classes", "hasHover", "isJoined", "lastCharX", "JoinedCellData", "isInSelection", "_isCellInSelection", "isCursorCell", "isLinkHover", "isDecorated", "forEachDecorationAtCell", "chars", "getChars", "WHITESPACE_CELL_CHAR", "isUnderline", "isOverline", "isBold", "isItalic", "selectionForeground", "ext", "isCursorHidden", "isFocused", "isDim", "isInvisible", "underlineStyle", "isUnderlineColorDefault", "isUnderlineColorRGB", "textDecorationColor", "AttributeData", "getUnderlineColor", "join", "drawBoldTextInBrightColors", "isStrikethrough", "textDecoration", "getFgColor", "fgColorMode", "getFgColorMode", "getBgColor", "bgColorMode", "getBgColorMode", "isInverse", "temp", "temp2", "bgOverride", "fgOverride", "resolvedBg", "isTop", "backgroundColorRGB", "foregroundColorRGB", "_addStyle", "padStart", "_applyMinimumContrast", "className", "minimumContrastRatio", "excludeFromContrastRatioDemands", "getCode", "cache", "_getContrastCache", "adjustedColor", "getColor", "ratio", "ensureContrastRatio", "setColor", "halfContrastCache", "contrastCache", "padChar", "_flat", "Float32Array", "_font", "_fontSize", "_weight", "_weightBold", "_measureElements", "whiteSpace", "fontKerning", "regular", "bold", "italic", "fontStyle", "boldItalic", "body", "_holey", "fill", "font", "weight", "weightBold", "cp", "_measure", "variant", "DIM_OPACITY", "TEXT_BASELINE", "isLegacyEdge", "isPowerlineGlyph", "codepoint", "isSelectAllActive", "selectionStartLength", "finalSelectionStart", "areSelectionValuesReversed", "finalSelectionEnd", "startPlusLength", "_onCharSizeChange", "onCharSizeChange", "_measureStrategy", "DomMeasureStrategy", "onMultipleOptionChange", "_parentElement", "_result", "_measureElement", "geometry", "Number", "firstCell", "content", "combinedData", "isCombined", "getAsCharData", "_characterJoiners", "_nextCharacterJoinerId", "joiner", "id", "ranges", "lineStr", "rangeStartColumn", "currentStringIndex", "rangeStartStringIndex", "rangeAttrFG", "getFg", "rangeAttrBG", "getBg", "_getJoinedRanges", "startIndex", "endIndex", "allJoinedRanges", "error", "joinerRanges", "_mergeRanges", "_stringRangesToCellRanges", "currentRangeIndex", "currentRangeStarted", "currentRange", "getString", "newRange", "inRange", "_isFocused", "_cachedIsFocused", "hasFocus", "queueMicrotask", "_renderer", "decorationService", "coreBrowserService", "_pausedResizeTask", "DebouncedIdleTask", "_isPaused", "_needsFullRefresh", "_isNextRenderRedrawOnly", "_needsSelectionRefresh", "_canvasWidth", "_canvasHeight", "_selectionState", "_onDimensionsChange", "_onRenderedViewportChange", "_onRefreshRequest", "onRefreshRequest", "_renderDebouncer", "RenderDebouncer", "_fullRefresh", "observer", "IntersectionObserver", "_handleIntersectionChange", "threshold", "observe", "disconnect", "entry", "isIntersecting", "intersectionRatio", "flush", "isRedrawOnly", "_fireOnCanvasResize", "renderer", "NON_BREAKING_SPACE_CHAR", "ALL_NON_BREAKING_SPACE_REGEX", "RegExp", "_linkifier", "_dragScrollAmount", "_enabled", "_mouseDownTimeStamp", "_oldHasSelection", "_oldSelectionStart", "_oldSelectionEnd", "_onLinuxMouseSelection", "_onRedrawRequest", "_mouseMoveListener", "_mouseUpListener", "onUserInput", "_trimListener", "onTrim", "_handleTrim", "_handleBufferActivate", "_model", "SelectionModel", "_activeSelectionMode", "_removeMouseDownListeners", "lineText", "startRowEndCol", "isLinuxMouseSelection", "_getMouseBufferCoords", "_areCoordsInSelection", "allowWhitespaceOnlySelection", "getRangeLength", "_selectWordAt", "handleTrim", "offset", "terminalHeight", "macOptionClickForcesSelection", "timeStamp", "_handleIncrementalClick", "detail", "_handleSingleClick", "_handleDoubleClick", "_handleTripleClick", "_addMouseDownListeners", "_dragScrollIntervalTimer", "setInterval", "_dragScroll", "clearInterval", "hasWidth", "_selectWordAtCursor", "_selectLineAt", "previousSelectionEnd", "_selectToWordAt", "_getMouseEventScrollAmount", "timeElapsed", "altClickMovesCursor", "coordinates", "moveToCellSequence", "_fireEventIfSelectionChanged", "_fireOnSelectionChange", "charIndex", "_isClickInSelection", "followWrappedLinesAbove", "followWrappedLinesBelow", "_convertViewportColToCharacterIndex", "charOffset", "leftWideCharCount", "rightWideCharCount", "leftLongCharOffset", "rightLongCharOffset", "charAt", "_isCharWordSeparator", "slice", "trim", "getCodePoint", "previousBufferLine", "previousLineWordPosition", "_getWordAt", "nextBufferLine", "nextLineWordPosition", "wordPosition", "wordSeparator", "wrappedRange", "getWrappedRangeForLine", "first", "last", "createDecorator", "DEFAULT_FOREGROUND", "DEFAULT_BACKGROUND", "DEFAULT_CURSOR", "DEFAULT_CURSOR_ACCENT", "DEFAULT_SELECTION", "DEFAULT_ANSI_COLORS", "freeze", "toCss", "toRgba", "_colors", "_contrastCache", "ColorContrastCache", "_halfContrastCache", "_onChangeColors", "selectionBackgroundTransparent", "blend", "selectionInactiveBackgroundTransparent", "_updateRestoreColors", "_setTheme", "theme", "parseColor", "selectionBackground", "selectionInactiveBackground", "NULL_COLOR", "isOpaque", "opacity", "black", "red", "green", "yellow", "blue", "magenta", "cyan", "white", "brightBlack", "brightRed", "brightGreen", "brightYellow", "brightBlue", "brightMagenta", "brightCyan", "brightWhite", "extendedAnsi", "colorCount", "slot", "_restoreColor", "_restoreColors", "cssString", "fallback", "CircularList", "_maxLength", "onDeleteEmitter", "onDelete", "onInsertEmitter", "onInsert", "onTrimEmitter", "_array", "Array", "_startIndex", "_length", "maxLength", "newMaxLength", "newArray", "_getCyclicIndex", "newLength", "recycle", "isFull", "deleteCount", "items", "countToTrim", "expandListBy", "clone", "val", "depth", "clonedObject", "isArray", "$r", "$g", "$b", "$a", "rgb", "toPaddedHex", "contrastRatio", "l1", "l2", "toChannels", "fgR", "fgG", "fgB", "bgR", "bgG", "bgB", "rgbaColor", "factor", "$ctx", "$litmusColor", "isNode", "willReadFrequently", "globalCompositeOperation", "createLinearGradient", "match", "rgbaMatch", "parseFloat", "getImageData", "relativeLuminance2", "rs", "gs", "bs", "pow", "relativeLuminance", "reduceLuminance", "bgRgba", "fgRgba", "cr", "increaseLuminance", "bgL", "fgL", "resultA", "resultARatio", "resultB", "hasWriteSyncWarnHappened", "_onScrollApi", "_windowsWrappingHeuristics", "_onBinary", "onBinary", "_onData", "onData", "_onLineFeed", "_onResize", "_onWriteParsed", "onWriteParsed", "InstantiationService", "OptionsService", "BufferService", "LogService", "ILogService", "CoreService", "CoreMouseService", "ICoreMouseService", "unicodeService", "UnicodeService", "IUnicodeService", "_charsetService", "CharsetService", "ICharsetService", "OscLinkService", "InputHandler", "onRequestScrollToBottom", "_writeBuffer", "handleUserInput", "_handleWindowsPtyOptionChange", "markRangeDirty", "scrollBottom", "WriteBuffer", "promiseResult", "parse", "write", "maxSubsequentCalls", "LogLevelEnum", "WARN", "writeSync", "isNaN", "MINIMUM_COLS", "MINIMUM_ROWS", "eraseAttr", "scroll", "pageCount", "scrollToTop", "scrollAmount", "registerEscHandler", "registerDcsHandler", "registerCsiHandler", "registerOscHandler", "windowsPty", "buildNumber", "backend", "windowsMode", "_enableWindowsWrappingHeuristics", "disposables", "updateWindowsModeWrappedState", "final", "_listeners", "_disposed", "_event", "arg1", "arg2", "queue", "call", "clearListeners", "from", "to", "GLEVEL", "MAX_PARSEBUFFER_LENGTH", "paramToWindowOption", "opts", "setWinLines", "restoreWin", "minimizeWin", "setWinPosition", "setWinSizePixels", "raiseWin", "lowerWin", "refreshWin", "setWinSizeChars", "maximizeWin", "fullscreenWin", "getWinState", "getWinPosition", "getWinSizePixels", "getScreenSizePixels", "getCellSizePixels", "getWinSizeChars", "getScreenSizeChars", "getIconTitle", "getWinTitle", "pushTitle", "popTitle", "$temp", "getAttrData", "_curAttrData", "_coreMouseService", "_unicodeService", "_parser", "EscapeSequenceParser", "_parseBuffer", "Uint32Array", "_stringDecoder", "StringToUtf32", "_utf8Decoder", "Utf8ToUtf32", "_windowTitle", "_iconName", "_windowTitleStack", "_iconNameStack", "_eraseAttrDataInternal", "_onRequestBell", "_onRequestRefreshRows", "_onRequestReset", "_onRequestSendFocus", "_onRequestSyncScrollBar", "_onRequestWindowsOptionsReport", "_onA11yChar", "_onA11yTab", "_onColor", "_parseStack", "paused", "cursorStartX", "cursorStartY", "decodedLength", "_specialColors", "_dirtyRowTracker", "DirtyRowTracker", "setCsiHandlerFallback", "params", "identifier", "identToString", "toArray", "setEscHandlerFallback", "setExecuteHandlerFallback", "code", "setOscHandlerFallback", "setDcsHandlerFallback", "payload", "setPrintHandler", "print", "insertChars", "intermediates", "scrollLeft", "cursorUp", "scrollRight", "cursorDown", "cursorForward", "cursorBackward", "cursorNextLine", "cursorPrecedingLine", "cursorCharAbsolute", "cursorPosition", "cursorForwardTab", "eraseInDisplay", "prefix", "eraseInLine", "insertLines", "deleteLines", "deleteChars", "scrollUp", "scrollDown", "eraseChars", "cursorBackwardTab", "charPosAbsolute", "hPositionRelative", "repeatPrecedingCharacter", "sendDeviceAttributesPrimary", "sendDeviceAttributesSecondary", "linePosAbsolute", "vPositionRelative", "hVPosition", "tabClear", "setMode", "setModePrivate", "resetMode", "resetModePrivate", "charAttributes", "deviceStatus", "deviceStatusPrivate", "softReset", "setCursorStyle", "setScrollRegion", "saveCursor", "windowOptions", "restoreCursor", "insertColumns", "deleteColumns", "selectProtected", "requestMode", "setExecuteHandler", "BEL", "bell", "LF", "lineFeed", "VT", "FF", "carriageReturn", "BS", "backspace", "HT", "tab", "SO", "shiftOut", "SI", "shiftIn", "C1", "IND", "NEL", "nextLine", "HTS", "tabSet", "OscHandler", "setTitle", "setIconName", "setOrReportIndexedColor", "setHyperlink", "setOrReportFgColor", "setOrReportBgColor", "setOrReportCursorColor", "restoreIndexedColor", "restoreFgColor", "restoreBgColor", "restoreCursorColor", "reverseIndex", "keypadApplicationMode", "keypadNumericMode", "fullReset", "setgLevel", "selectDefaultCharset", "flag", "CHARSETS", "selectCharset", "screenAlignmentPattern", "setErrorHandler", "DcsHandler", "requestStatusString", "Promise", "race", "res", "rej", "catch", "err", "_getCurrentLinkId", "wasPaused", "_logSlowResolvingAsync", "DEBUG", "prototype", "split", "clearRange", "len", "decode", "subarray", "_preserveStack", "chWidth", "charset", "wraparoundMode", "wraparound", "insertMode", "modes", "curAttr", "bufferRow", "markDirty", "setCellFromCodePoint", "wcwidth", "ch", "stringFromCodePoint", "addLineToLink", "_eraseAttrData", "insertCells", "getNullCell", "NULL_CELL_CODE", "NULL_CELL_WIDTH", "addCodepointToCell", "precedingCodepoint", "convertEol", "reverseWraparound", "_restrictCursor", "originalX", "nextStop", "maxCol", "_setCursor", "diffToTop", "_moveCursor", "diffToBottom", "param", "tabs", "prevStop", "clearWrap", "respectProtect", "replaceCells", "clearMarkers", "_eraseInBufferLine", "_resetBufferLine", "scrollBackSize", "trimStart", "scrollBottomRowsOffset", "scrollBottomAbsolute", "deleteCells", "_is", "term", "termName", "setgCharset", "DEFAULT_CHARSET", "applicationKeypad", "activeEncoding", "activateAltBuffer", "activateNormalBuffer", "dm", "mouseProtocol", "mouseEncoding", "cs", "b2v", "mode", "c1", "c2", "c3", "fromColorRGB", "attr", "accu", "cSpace", "advance", "hasSubParams", "subparams", "getSubParams", "_updateAttrColor", "underlineColor", "updateExtended", "_processSGR0", "_processUnderline", "_extractColor", "savedX", "savedY", "savedCurAttrData", "savedCharset", "isBlinking", "bottom", "second", "_savedCharset", "slots", "idx", "spec", "exec", "isValidColorIndex", "args", "_createHyperlink", "_finishHyperlink", "parsedParams", "idParamIndex", "findIndex", "startsWith", "registerLink", "_setOrReportSpecialColor", "collectAndFlag", "scrollRegionHeight", "shiftElements", "level", "yOffset", "markAllDirty", "isProtected", "_disposables", "_value", "array", "_data", "third", "fourth", "navigator", "userAgent", "platform", "isSafari", "majorVersion", "isIpad", "isIphone", "_getKey", "_search", "values", "mid", "midKey", "TaskQueue", "_tasks", "_i", "task", "_start", "_idleCallback", "_cancelCallback", "_requestCallback", "_process", "deadline", "taskDuration", "longestTask", "lastDeadlineRemaining", "timeRemaining", "deadlineRemaining", "PriorityTaskQueue", "_createDeadline", "duration", "IdleTaskQueue", "requestIdleCallback", "cancelIdleCallback", "constructor", "_queue", "enqueue", "lastChar", "CHAR_DATA_CODE_INDEX", "WHITESPACE_CELL_CODE", "ExtendedAttrs", "newObj", "isBlink", "isFgRGB", "isBgRGB", "isFgPalette", "isBgPalette", "isFgDefault", "isBgDefault", "isAttributeDefault", "isEmpty", "getUnderlineColorMode", "isUnderlineColorPalette", "getUnderlineStyle", "_urlId", "_ext", "MAX_BUFFER_SIZE", "_hasScrollback", "_nullCell", "fromCharData", "NULL_CELL_CHAR", "_whitespaceCell", "WHITESPACE_CELL_WIDTH", "_isClearing", "_memoryCleanupQueue", "_memoryCleanupPosition", "_cols", "_rows", "_getCorrectBufferLength", "setupTabStops", "BufferLine", "relativeY", "correctBufferLength", "scrollback", "fillAttr", "newCols", "newRows", "nullCell", "dirtyMemoryLines", "addToY", "amountToTrim", "_isReflowEnabled", "_reflow", "_batchedMemoryCleanup", "normalRun", "counted", "cleanupMemory", "_reflowLarger", "_reflowSmaller", "toRemove", "reflowLargerGetLinesToRemove", "newLayoutResult", "reflowLargerCreateNewLayout", "reflowLargerApplyNewLayout", "layout", "_reflowLargerAdjustViewport", "countRemoved", "viewportAdjustments", "toInsert", "countToInsert", "wrappedLines", "absoluteY", "lastLineLength", "destLineLengths", "reflowSmallerGetNewLineLengths", "linesToAdd", "trimmedLines", "newLines", "newLine", "destLineIndex", "destCol", "srcLineIndex", "srcCol", "cellsToCopy", "copyCellsFrom", "wrappedLinesIndex", "getWrappedLineTrimmedLength", "setCell", "insertEvents", "originalLines", "originalLinesLength", "originalLineIndex", "nextToInsertIndex", "nextToInsert", "countInsertedSoFar", "nextI", "insertCountEmitted", "lineIndex", "trimRight", "tabStopWidth", "Marker", "_removeMarker", "$startIndex", "fillCellData", "_combined", "_extendedAttrs", "CHAR_DATA_ATTR_INDEX", "CHAR_DATA_CHAR_INDEX", "CHAR_DATA_WIDTH_INDEX", "codePoint", "eAttrs", "byteLength", "uint32Cells", "keys", "extKeys", "src", "applyInReverse", "srcData", "srcCombinedKeys", "bufferCols", "endsInNull", "followingLineStartsWithWide", "oldCols", "bufferAbsoluteY", "srcTrimmedTineLength", "srcRemainingCells", "destRemainingCells", "countToRemove", "nextToRemoveIndex", "nextToRemoveStart", "countRemovedSoFar", "newLayout", "newLayoutLines", "newLineLengths", "cellsNeeded", "reduce", "srcLine", "cellsAvailable", "oldTrimmedLength", "endsWithWide", "BufferSet", "_onBufferActivate", "_normal", "Buffer", "fillViewportRows", "_alt", "inactiveBuffer", "obj", "setFromCharData", "combined", "DEFAULT_COLOR", "DEFAULT_ATTR", "DEFAULT_EXT", "_id", "isDisposed", "_nextId", "_onDispose", "disposable", "NUL", "SOH", "STX", "EOT", "ENQ", "ACK", "DLE", "DC1", "DC2", "DC3", "DC4", "NAK", "SYN", "ETB", "CAN", "EM", "SUB", "FS", "GS", "RS", "US", "SP", "PAD", "HOP", "BPH", "NBH", "SSA", "ESA", "HTJ", "VTS", "PLD", "PLU", "RI", "SS2", "SS3", "DCS", "PU1", "PU2", "STS", "CCH", "MW", "SPA", "EPA", "SOS", "SGCI", "SCI", "CSI", "OSC", "PM", "APC", "KEYCODE_KEY_MAPPINGS", "applicationCursorMode", "modifiers", "keyMapping", "keyString", "toUpperCase", "toLowerCase", "_interim", "startPos", "interim", "Uint8Array", "byte1", "byte2", "byte3", "byte4", "discardInterim", "tmp", "missing", "fourStop", "BMP_COMBINING", "HIGH_COMBINING", "table", "version", "num", "ucs", "_action", "_callbacks", "_pendingData", "_bufferOffset", "_isSyncWriting", "_syncCalls", "_didUserInput", "chunk", "cb", "_innerWrite", "lastTime", "continuation", "resolve", "then", "RGB_REX", "HASH_REX", "pad", "bits", "s2", "low", "base", "adv", "PAYLOAD_LIMIT", "EMPTY_HANDLERS", "_handlers", "create", "_active", "_ident", "_handlerFb", "_stack", "loopPosition", "fallThrough", "handlerList", "handlerIndex", "unhook", "hook", "put", "utf32ToString", "success", "handlerResult", "EMPTY_PARAMS", "Params", "addParam", "_handler", "_params", "_hitLimit", "ret", "TransitionTable", "next", "codes", "NON_ASCII_PRINTABLE", "VT500_TRANSITION_TABLE", "blueprint", "apply", "unused", "PRINTABLES", "EXECUTABLES", "states", "setDefault", "addMany", "_transitions", "handlers", "handlerPos", "transition", "chunkPos", "initialState", "currentState", "_collect", "_printHandlerFb", "_executeHandlerFb", "_csiHandlerFb", "_escHandlerFb", "_errorHandlerFb", "_printHandler", "_executeHandlers", "_csiHandlers", "_escHandlers", "_oscParser", "OscParser", "_dcsParser", "DcsParser", "_errorHandler", "finalRange", "intermediate", "finalCode", "reverse", "clearPrintHandler", "_identifier", "registerHandler", "clearHandler", "setHandlerFallback", "clearErrorHandler", "collect", "abort", "addSubParam", "addDigit", "handlersEsc", "jj", "_state", "_put", "MAX_VALUE", "maxSubParamsLength", "Int32Array", "_subParams", "_subParamsLength", "_subParamsIdx", "Uint16Array", "_rejectDigits", "_rejectSubDigits", "_digitIsSub", "newParams", "getSubParamsAll", "store", "cur", "_addons", "instance", "terminal", "loadedAddon", "_wrappedAddonDispose", "_buffer", "viewportY", "baseY", "BufferLineApiView", "_line", "startColumn", "endColumn", "BufferNamespaceApi", "_core", "_onBufferChange", "onBufferChange", "BufferApiView", "_alternate", "alternate", "init", "provider", "versions", "activeVersion", "isUserScrolling", "_cachedBlankLine", "topRow", "bottomRow", "willBufferBeTrimmed", "copyFrom", "oldYdisp", "glevel", "_charsets", "DEFAULT_PROTOCOLS", "NONE", "restrict", "X10", "VT200", "DRAG", "ANY", "eventCode", "isSGR", "DEFAULT_ENCODINGS", "DEFAULT", "SGR", "SGR_PIXELS", "_protocols", "_encodings", "_activeProtocol", "_activeEncoding", "_lastEvent", "_onProtocolChange", "name", "addProtocol", "addEncoding", "encoding", "_equalEvents", "report", "triggerBinaryEvent", "down", "up", "drag", "move", "e1", "e2", "pixels", "DEFAULT_MODES", "DEFAULT_DEC_PRIVATE_MODES", "_onUserInput", "_onRequestScrollToBottom", "wasUserInput", "disableStdin", "$xmin", "$xmax", "_decorations", "SortedList", "_onDecorationRegistered", "_onDecorationRemoved", "Decoration", "markerDispose", "insert", "xmin", "xmax", "getKeyIterator", "forEachByKey", "_cachedBg", "_cachedFg", "foregroundColor", "ServiceCollection", "_entries", "service", "_services", "ctor", "serviceDependencies", "getServiceDependencies", "sort", "serviceArgs", "dependency", "firstServiceArgPos", "optionsKeyToLogLevel", "trace", "TRACE", "info", "INFO", "ERROR", "off", "OFF", "traceLogger", "_logLevel", "_updateLogLevel", "optionalParams", "message", "_evalLazyOptionalParams", "logger", "_log", "log", "_target", "descriptor", "fn", "JSON", "stringify", "DEFAULT_OPTIONS", "customGlyphs", "allowProposedApi", "allowTransparency", "FONT_WEIGHT_OPTIONS", "_onOptionChange", "defaultOptions", "_sanitizeAndValidateOption", "_setupOptions", "eventKey", "getter", "propName", "setter", "desc", "defineProperty", "_entriesWithId", "_dataByLinkId", "_removeMarkerFromLink", "castData", "_getEntryIdKey", "linkId", "every", "linkData", "DI_TARGET", "DI_DEPENDENCIES", "serviceRegistry", "decorator", "arguments", "_providers", "_onChange", "onChange", "defaultProvider", "UnicodeV6", "_activeProvider", "__webpack_module_cache__", "__webpack_require__", "moduleId", "cachedModule", "__webpack_modules__", "CONSTRUCTOR_ONLY_OPTIONS", "_addonManager", "AddonManager", "_publicOptions", "_checkReadonlyOptions", "_checkProposedApi", "parser", "ParserApi", "unicode", "UnicodeApi", "mouseTrackingMode", "applicationCursorKeysMode", "applicationKeypadMode", "originMode", "reverseWraparoundMode", "sendFocusMode", "columns", "_verifyIntegers", "attachCustomKeyEventHandler", "registerCharacterJoiner", "deregisterCharacterJoiner", "registerMarker", "_verifyPositiveIntegers", "scrollPages", "scrollToLine", "addon", "loadAddon", "strings", "Infinity", "root", "factory", "exports", "module", "define", "amd", "self", "e", "t", "constructor", "activate", "terminal", "this", "_terminal", "dispose", "fit", "dims", "proposeDimensions", "isNaN", "cols", "rows", "core", "_core", "_renderService", "clear", "resize", "element", "parentElement", "dimensions", "css", "cell", "width", "height", "scrollbarWidth", "options", "scrollback", "viewport", "scrollBarWidth", "parentElementStyle", "window", "getComputedStyle", "parentElementHeight", "parseInt", "getPropertyValue", "parentElementWidth", "Math", "max", "elementStyle", "availableHeight", "availableWidth", "floor", "InputType", "c", "n", "i", "c", "m", "module", "module", "module", "module", "module", "i", "n", "e", "c", "i", "Readline", "term", "d", "c", "a", "b", "d", "r", "n", "e", "t", "o", "i", "a", "i", "d", "s", "n", "t", "r", "a", "i", "u", "e", "l", "c", "d", "n", "e", "i", "r", "o", "a", "t", "c", "m", "W", "s", "u", "D", "E", "e", "a", "t", "n", "f", "d", "l", "s", "o", "r", "i", "u", "n", "a", "c", "o", "m", "t", "c", "d", "v", "a", "m", "l", "g", "_", "f", "u", "n", "i", "t", "s", "e", "r", "g", "s", "c", "u", "m", "n", "d", "h", "l", "_", "F", "p", "y", "f", "D", "M", "W", "E", "v", "w", "b", "T", "x", "C", "t", "a", "s", "i", "n", "r", "m", "c", "l", "i", "g", "p", "o", "e", "t", "r", "s", "a", "n", "u", "n", "s", "i", "t", "o", "t", "c", "n", "i", "a", "r", "c", "l", "g", "s", "a", "r", "t", "i", "e", "c", "u", "s", "n", "a", "l", "r", "t", "T", "i", "p", "m", "c", "y", "d", "s", "e", "r", "n", "t", "a", "o", "l", "b", "d", "b", "b"]
}
